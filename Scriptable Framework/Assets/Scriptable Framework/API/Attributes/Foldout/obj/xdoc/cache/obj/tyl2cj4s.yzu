id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: ScriptableFramework
  commentId: N:ScriptableFramework
  language: CSharp
  name:
    CSharp: ScriptableFramework
    VB: ScriptableFramework
  nameWithType:
    CSharp: ScriptableFramework
    VB: ScriptableFramework
  qualifiedName:
    CSharp: ScriptableFramework
    VB: ScriptableFramework
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: ScriptableFramework.FoldoutAttribute
    commentId: T:ScriptableFramework.FoldoutAttribute
    language: CSharp
    name:
      CSharp: FoldoutAttribute
      VB: FoldoutAttribute
    nameWithType:
      CSharp: FoldoutAttribute
      VB: FoldoutAttribute
    qualifiedName:
      CSharp: ScriptableFramework.FoldoutAttribute
      VB: ScriptableFramework.FoldoutAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: FoldoutAttribute
      path: ''
      startLine: 78
    summary: "\nUse this to organise your public properties in the inspector into collapsable groups.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FoldoutAttribute : PropertyAttribute'
        VB: >-
          Public Class FoldoutAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.FoldoutAttribute.name
      commentId: F:ScriptableFramework.FoldoutAttribute.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: FoldoutAttribute.name
        VB: FoldoutAttribute.name
      qualifiedName:
        CSharp: ScriptableFramework.FoldoutAttribute.name
        VB: ScriptableFramework.FoldoutAttribute.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: name
        path: ''
        startLine: 83
      summary: "\nThe name of the group.\n"
      example: []
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.FoldoutAttribute.foldEverything
      commentId: F:ScriptableFramework.FoldoutAttribute.foldEverything
      language: CSharp
      name:
        CSharp: foldEverything
        VB: foldEverything
      nameWithType:
        CSharp: FoldoutAttribute.foldEverything
        VB: FoldoutAttribute.foldEverything
      qualifiedName:
        CSharp: ScriptableFramework.FoldoutAttribute.foldEverything
        VB: ScriptableFramework.FoldoutAttribute.foldEverything
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: foldEverything
        path: ''
        startLine: 88
      summary: "\nWhether to encapsulate the property this attribute is on or cascade down on all other properties.\n"
      example: []
      syntax:
        content:
          CSharp: public bool foldEverything
          VB: Public foldEverything As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.FoldoutAttribute.#ctor(System.String,System.Boolean)
      commentId: M:ScriptableFramework.FoldoutAttribute.#ctor(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: FoldoutAttribute(String, Boolean)
        VB: FoldoutAttribute(String, Boolean)
      nameWithType:
        CSharp: FoldoutAttribute.FoldoutAttribute(String, Boolean)
        VB: FoldoutAttribute.FoldoutAttribute(String, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.FoldoutAttribute.FoldoutAttribute(System.String, System.Boolean)
        VB: ScriptableFramework.FoldoutAttribute.FoldoutAttribute(System.String, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: .ctor
        path: ''
        startLine: 93
      summary: Adds the property to the specified foldout group.
      example: []
      syntax:
        content:
          CSharp: public FoldoutAttribute(string name, bool foldEverything = false)
          VB: Public Sub New(name As String, foldEverything As Boolean = False)
        parameters:
        - id: name
          type: System.String
          description: Name of the foldout group.
        - id: foldEverything
          type: System.Boolean
          description: Toggle to put all properties to the specified group
      overload: ScriptableFramework.FoldoutAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.SearchableEnumAttribute
    commentId: T:ScriptableFramework.SearchableEnumAttribute
    language: CSharp
    name:
      CSharp: SearchableEnumAttribute
      VB: SearchableEnumAttribute
    nameWithType:
      CSharp: SearchableEnumAttribute
      VB: SearchableEnumAttribute
    qualifiedName:
      CSharp: ScriptableFramework.SearchableEnumAttribute
      VB: ScriptableFramework.SearchableEnumAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: SearchableEnumAttribute
      path: ''
      startLine: 116
    summary: "\nPut this attribute on a public (or SerialzeField) enum in a\nMonoBehaviour or ScriptableObject to get an improved enum selector\npopup. The enum list is scrollable and can be filtered by typing.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SearchableEnumAttribute : PropertyAttribute'
        VB: >-
          Public Class SearchableEnumAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.AppVersion
    commentId: T:ScriptableFramework.AppVersion
    language: CSharp
    name:
      CSharp: AppVersion
      VB: AppVersion
    nameWithType:
      CSharp: AppVersion
      VB: AppVersion
    qualifiedName:
      CSharp: ScriptableFramework.AppVersion
      VB: ScriptableFramework.AppVersion
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppVersion
      path: ''
      startLine: 129
    summary: "\nStores the current version of the software being developed. Adhears to Semantic Versioning.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AppVersion : ScriptableObject'
        VB: >-
          Public Class AppVersion

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.AppVersion.GetVersionNumber
      commentId: M:ScriptableFramework.AppVersion.GetVersionNumber
      language: CSharp
      name:
        CSharp: GetVersionNumber()
        VB: GetVersionNumber()
      nameWithType:
        CSharp: AppVersion.GetVersionNumber()
        VB: AppVersion.GetVersionNumber()
      qualifiedName:
        CSharp: ScriptableFramework.AppVersion.GetVersionNumber()
        VB: ScriptableFramework.AppVersion.GetVersionNumber()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: GetVersionNumber
        path: ''
        startLine: 163
      summary: "\nCreates a string in the semver format according to the set values in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual string GetVersionNumber()
          VB: Protected Overridable Function GetVersionNumber As String
        return:
          type: System.String
          description: The semver string of the current software being developed.
      overload: ScriptableFramework.AppVersion.GetVersionNumber*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ScriptableFramework.AppVersion.op_Implicit(ScriptableFramework.AppVersion)~System.String
      commentId: M:ScriptableFramework.AppVersion.op_Implicit(ScriptableFramework.AppVersion)~System.String
      language: CSharp
      name:
        CSharp: Implicit(AppVersion to String)
        VB: Widening(AppVersion to String)
      nameWithType:
        CSharp: AppVersion.Implicit(AppVersion to String)
        VB: AppVersion.Widening(AppVersion to String)
      qualifiedName:
        CSharp: ScriptableFramework.AppVersion.Implicit(ScriptableFramework.AppVersion to System.String)
        VB: ScriptableFramework.AppVersion.Widening(ScriptableFramework.AppVersion to System.String)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: op_Implicit
        path: ''
        startLine: 189
      summary: "\nImplicitly cast this <code>AppVersion</code>s into a string for display in the UI.\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator string (AppVersion version)
          VB: Public Shared Widening Operator CType(version As AppVersion) As String
        parameters:
        - id: version
          type: ScriptableFramework.AppVersion
          description: The object to cast.
        return:
          type: System.String
      overload: ScriptableFramework.AppVersion.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.AppVersion.ToString
      commentId: M:ScriptableFramework.AppVersion.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: AppVersion.ToString()
        VB: AppVersion.ToString()
      qualifiedName:
        CSharp: ScriptableFramework.AppVersion.ToString()
        VB: ScriptableFramework.AppVersion.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToString
        path: ''
        startLine: 198
      summary: "\nTreat this object as a read only string of the current semver.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: The semver string.
      overload: ScriptableFramework.AppVersion.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.ReleaseType
    commentId: T:ScriptableFramework.ReleaseType
    language: CSharp
    name:
      CSharp: ReleaseType
      VB: ReleaseType
    nameWithType:
      CSharp: ReleaseType
      VB: ReleaseType
    qualifiedName:
      CSharp: ScriptableFramework.ReleaseType
      VB: ScriptableFramework.ReleaseType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ReleaseType
      path: ''
      startLine: 207
    summary: "\nDefines the various types of releases which dictate what sort of suffix is added to the end of the version string.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ReleaseType
        VB: Public Enum ReleaseType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ScriptableFramework.ReleaseType.Development
      commentId: F:ScriptableFramework.ReleaseType.Development
      language: CSharp
      name:
        CSharp: Development
        VB: Development
      nameWithType:
        CSharp: ReleaseType.Development
        VB: ReleaseType.Development
      qualifiedName:
        CSharp: ScriptableFramework.ReleaseType.Development
        VB: ScriptableFramework.ReleaseType.Development
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Development
        path: ''
        startLine: 209
      syntax:
        content:
          CSharp: Development = 0
          VB: Development = 0
        return:
          type: ScriptableFramework.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ScriptableFramework.ReleaseType.Alpha
      commentId: F:ScriptableFramework.ReleaseType.Alpha
      language: CSharp
      name:
        CSharp: Alpha
        VB: Alpha
      nameWithType:
        CSharp: ReleaseType.Alpha
        VB: ReleaseType.Alpha
      qualifiedName:
        CSharp: ScriptableFramework.ReleaseType.Alpha
        VB: ScriptableFramework.ReleaseType.Alpha
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Alpha
        path: ''
        startLine: 210
      syntax:
        content:
          CSharp: Alpha = 1
          VB: Alpha = 1
        return:
          type: ScriptableFramework.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ScriptableFramework.ReleaseType.Beta
      commentId: F:ScriptableFramework.ReleaseType.Beta
      language: CSharp
      name:
        CSharp: Beta
        VB: Beta
      nameWithType:
        CSharp: ReleaseType.Beta
        VB: ReleaseType.Beta
      qualifiedName:
        CSharp: ScriptableFramework.ReleaseType.Beta
        VB: ScriptableFramework.ReleaseType.Beta
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Beta
        path: ''
        startLine: 211
      syntax:
        content:
          CSharp: Beta = 2
          VB: Beta = 2
        return:
          type: ScriptableFramework.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ScriptableFramework.ReleaseType.Production
      commentId: F:ScriptableFramework.ReleaseType.Production
      language: CSharp
      name:
        CSharp: Production
        VB: Production
      nameWithType:
        CSharp: ReleaseType.Production
        VB: ReleaseType.Production
      qualifiedName:
        CSharp: ScriptableFramework.ReleaseType.Production
        VB: ScriptableFramework.ReleaseType.Production
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Production
        path: ''
        startLine: 212
      syntax:
        content:
          CSharp: Production = 3
          VB: Production = 3
        return:
          type: ScriptableFramework.ReleaseType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ScriptableFramework.DataString
    commentId: T:ScriptableFramework.DataString
    language: CSharp
    name:
      CSharp: DataString
      VB: DataString
    nameWithType:
      CSharp: DataString
      VB: DataString
    qualifiedName:
      CSharp: ScriptableFramework.DataString
      VB: ScriptableFramework.DataString
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: DataString
      path: ''
      startLine: 227
    summary: "\nA value type that encapsulates a regular string object. Can implicitly cast to and from a regular\nstring and is compatible with the <code>ValueItem</code> and <code>ValueList</code> API.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct DataString
        VB: >-
          <Serializable>

          Public Structure DataString
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ScriptableFramework.DataString.#ctor(System.String)
      commentId: M:ScriptableFramework.DataString.#ctor(System.String)
      language: CSharp
      name:
        CSharp: DataString(String)
        VB: DataString(String)
      nameWithType:
        CSharp: DataString.DataString(String)
        VB: DataString.DataString(String)
      qualifiedName:
        CSharp: ScriptableFramework.DataString.DataString(System.String)
        VB: ScriptableFramework.DataString.DataString(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: .ctor
        path: ''
        startLine: 239
      summary: "\nInitialise this instance with a string.\n"
      example: []
      syntax:
        content:
          CSharp: public DataString(string text)
          VB: Public Sub New(text As String)
        parameters:
        - id: text
          type: System.String
          description: The string to store.
      overload: ScriptableFramework.DataString.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.DataString.op_Implicit(ScriptableFramework.DataString)~System.String
      commentId: M:ScriptableFramework.DataString.op_Implicit(ScriptableFramework.DataString)~System.String
      language: CSharp
      name:
        CSharp: Implicit(DataString to String)
        VB: Widening(DataString to String)
      nameWithType:
        CSharp: DataString.Implicit(DataString to String)
        VB: DataString.Widening(DataString to String)
      qualifiedName:
        CSharp: ScriptableFramework.DataString.Implicit(ScriptableFramework.DataString to System.String)
        VB: ScriptableFramework.DataString.Widening(ScriptableFramework.DataString to System.String)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: op_Implicit
        path: ''
        startLine: 248
      summary: "\nAn implicit operator that allows this value to be read from as if it were a string.\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator string (DataString text)
          VB: Public Shared Widening Operator CType(text As DataString) As String
        parameters:
        - id: text
          type: ScriptableFramework.DataString
          description: The value being read from.
        return:
          type: System.String
      overload: ScriptableFramework.DataString.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.DataString.op_Implicit(System.String)~ScriptableFramework.DataString
      commentId: M:ScriptableFramework.DataString.op_Implicit(System.String)~ScriptableFramework.DataString
      language: CSharp
      name:
        CSharp: Implicit(String to DataString)
        VB: Widening(String to DataString)
      nameWithType:
        CSharp: DataString.Implicit(String to DataString)
        VB: DataString.Widening(String to DataString)
      qualifiedName:
        CSharp: ScriptableFramework.DataString.Implicit(System.String to ScriptableFramework.DataString)
        VB: ScriptableFramework.DataString.Widening(System.String to ScriptableFramework.DataString)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: op_Implicit
        path: ''
        startLine: 257
      summary: "\nAn implicit operator that allows this value to be written to as if it were a string.\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator DataString(string text)
          VB: Public Shared Widening Operator CType(text As String) As DataString
        parameters:
        - id: text
          type: System.String
          description: The string being written into this value.
        return:
          type: ScriptableFramework.DataString
      overload: ScriptableFramework.DataString.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.DataString.ToString
      commentId: M:ScriptableFramework.DataString.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: DataString.ToString()
        VB: DataString.ToString()
      qualifiedName:
        CSharp: ScriptableFramework.DataString.ToString()
        VB: ScriptableFramework.DataString.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToString
        path: ''
        startLine: 266
      summary: "\nAn override to allow printing this value to simulate the effect of returning the internal string instead.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: The internal string.
      overload: ScriptableFramework.DataString.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.Dragable
    commentId: T:ScriptableFramework.Dragable
    language: CSharp
    name:
      CSharp: Dragable
      VB: Dragable
    nameWithType:
      CSharp: Dragable
      VB: Dragable
    qualifiedName:
      CSharp: ScriptableFramework.Dragable
      VB: ScriptableFramework.Dragable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Dragable
      path: ''
      startLine: 282
    summary: "\nApply this to all UI elements that can be dragged by the mouse so that\ninputs don&apos;t clash with things like cameras.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Dragable : MonoBehaviour, IBeginDragHandler, IEndDragHandler'
        VB: >-
          Public Class Dragable

              Inherits MonoBehaviour

              Implements IBeginDragHandler, IEndDragHandler
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Dragable.OnBeginDrag(PointerEventData)
      commentId: M:ScriptableFramework.Dragable.OnBeginDrag(PointerEventData)
      language: CSharp
      name:
        CSharp: OnBeginDrag(PointerEventData)
        VB: OnBeginDrag(PointerEventData)
      nameWithType:
        CSharp: Dragable.OnBeginDrag(PointerEventData)
        VB: Dragable.OnBeginDrag(PointerEventData)
      qualifiedName:
        CSharp: ScriptableFramework.Dragable.OnBeginDrag(PointerEventData)
        VB: ScriptableFramework.Dragable.OnBeginDrag(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnBeginDrag
        path: ''
        startLine: 288
      summary: "\nCalled by the Unity <code>EventSystem</code> when this object starts being dragged.\n"
      example: []
      syntax:
        content:
          CSharp: public void OnBeginDrag(PointerEventData eventData)
          VB: Public Sub OnBeginDrag(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
          description: Contains info about the pointer event
      overload: ScriptableFramework.Dragable.OnBeginDrag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Dragable.OnEndDrag(PointerEventData)
      commentId: M:ScriptableFramework.Dragable.OnEndDrag(PointerEventData)
      language: CSharp
      name:
        CSharp: OnEndDrag(PointerEventData)
        VB: OnEndDrag(PointerEventData)
      nameWithType:
        CSharp: Dragable.OnEndDrag(PointerEventData)
        VB: Dragable.OnEndDrag(PointerEventData)
      qualifiedName:
        CSharp: ScriptableFramework.Dragable.OnEndDrag(PointerEventData)
        VB: ScriptableFramework.Dragable.OnEndDrag(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnEndDrag
        path: ''
        startLine: 297
      summary: "\nCalled by the Unity <code>EventSystem</code> when this object stops being dragged.\n"
      example: []
      syntax:
        content:
          CSharp: public void OnEndDrag(PointerEventData eventData)
          VB: Public Sub OnEndDrag(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
          description: Contains info about the pointer event
      overload: ScriptableFramework.Dragable.OnEndDrag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.InputValidation
    commentId: T:ScriptableFramework.InputValidation
    language: CSharp
    name:
      CSharp: InputValidation
      VB: InputValidation
    nameWithType:
      CSharp: InputValidation
      VB: InputValidation
    qualifiedName:
      CSharp: ScriptableFramework.InputValidation
      VB: ScriptableFramework.InputValidation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: InputValidation
      path: ''
      startLine: 313
    summary: "\nUtility class for validating when certain types of input are possible.\n"
    example: []
    syntax:
      content:
        CSharp: public static class InputValidation
        VB: Public Module InputValidation
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ScriptableFramework.InputValidation.draggingUI
      commentId: F:ScriptableFramework.InputValidation.draggingUI
      language: CSharp
      name:
        CSharp: draggingUI
        VB: draggingUI
      nameWithType:
        CSharp: InputValidation.draggingUI
        VB: InputValidation.draggingUI
      qualifiedName:
        CSharp: ScriptableFramework.InputValidation.draggingUI
        VB: ScriptableFramework.InputValidation.draggingUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: draggingUI
        path: ''
        startLine: 318
      summary: "\nWorks in tandem with <code>Dragable</code> component to check if UI is being dragged.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool draggingUI
          VB: Public Shared draggingUI As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.InputValidation.IsMouseOverUIObject
      commentId: M:ScriptableFramework.InputValidation.IsMouseOverUIObject
      language: CSharp
      name:
        CSharp: IsMouseOverUIObject()
        VB: IsMouseOverUIObject()
      nameWithType:
        CSharp: InputValidation.IsMouseOverUIObject()
        VB: InputValidation.IsMouseOverUIObject()
      qualifiedName:
        CSharp: ScriptableFramework.InputValidation.IsMouseOverUIObject()
        VB: ScriptableFramework.InputValidation.IsMouseOverUIObject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: IsMouseOverUIObject
        path: ''
        startLine: 325
      summary: "\nStatic Boolean function that checks whether the position of the mouse if over a 3D object. \nWorks for touch input as well.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsMouseOverUIObject()
          VB: Public Shared Function IsMouseOverUIObject As Boolean
        return:
          type: System.Boolean
          description: Boolean on mouse over
      overload: ScriptableFramework.InputValidation.IsMouseOverUIObject*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ScriptableFramework.Platform
    commentId: T:ScriptableFramework.Platform
    language: CSharp
    name:
      CSharp: Platform
      VB: Platform
    nameWithType:
      CSharp: Platform
      VB: Platform
    qualifiedName:
      CSharp: ScriptableFramework.Platform
      VB: ScriptableFramework.Platform
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Platform
      path: ''
      startLine: 356
    summary: "\nA collection of properties with values that vary depending on the current platform\n"
    example: []
    syntax:
      content:
        CSharp: public static class Platform
        VB: Public Module Platform
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ScriptableFramework.Platform.IsDesktop
      commentId: P:ScriptableFramework.Platform.IsDesktop
      language: CSharp
      name:
        CSharp: IsDesktop
        VB: IsDesktop
      nameWithType:
        CSharp: Platform.IsDesktop
        VB: Platform.IsDesktop
      qualifiedName:
        CSharp: ScriptableFramework.Platform.IsDesktop
        VB: ScriptableFramework.Platform.IsDesktop
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: IsDesktop
        path: ''
        startLine: 361
      summary: "\nIs the current build considered a desktop platform?\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsDesktop { get; }
          VB: Public Shared ReadOnly Property IsDesktop As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ScriptableFramework.Platform.IsDesktop*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: ScriptableFramework.Platform.IsMobile
      commentId: P:ScriptableFramework.Platform.IsMobile
      language: CSharp
      name:
        CSharp: IsMobile
        VB: IsMobile
      nameWithType:
        CSharp: Platform.IsMobile
        VB: Platform.IsMobile
      qualifiedName:
        CSharp: ScriptableFramework.Platform.IsMobile
        VB: ScriptableFramework.Platform.IsMobile
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: IsMobile
        path: ''
        startLine: 383
      summary: "\nIs the current build considered a mobile platform?\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsMobile { get; }
          VB: Public Shared ReadOnly Property IsMobile As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ScriptableFramework.Platform.IsMobile*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: ScriptableFramework.Platform.IsWeb
      commentId: P:ScriptableFramework.Platform.IsWeb
      language: CSharp
      name:
        CSharp: IsWeb
        VB: IsWeb
      nameWithType:
        CSharp: Platform.IsWeb
        VB: Platform.IsWeb
      qualifiedName:
        CSharp: ScriptableFramework.Platform.IsWeb
        VB: ScriptableFramework.Platform.IsWeb
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: IsWeb
        path: ''
        startLine: 401
      summary: "\nIs the current build considered a web platform?\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsWeb { get; }
          VB: Public Shared ReadOnly Property IsWeb As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ScriptableFramework.Platform.IsWeb*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: ScriptableFramework.Platform.FilePath
      commentId: P:ScriptableFramework.Platform.FilePath
      language: CSharp
      name:
        CSharp: FilePath
        VB: FilePath
      nameWithType:
        CSharp: Platform.FilePath
        VB: Platform.FilePath
      qualifiedName:
        CSharp: ScriptableFramework.Platform.FilePath
        VB: ScriptableFramework.Platform.FilePath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: FilePath
        path: ''
        startLine: 419
      summary: "\nReturns either <code>Application.persistentDataPath</code> or <code>Application.streamingAssetsPath</code>\ndepending on which is appropriate for the platform generally speaking.\n"
      example: []
      syntax:
        content:
          CSharp: public static string FilePath { get; }
          VB: Public Shared ReadOnly Property FilePath As String
        parameters: []
        return:
          type: System.String
      overload: ScriptableFramework.Platform.FilePath*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: ScriptableFramework.Platform.PersistentPath
      commentId: P:ScriptableFramework.Platform.PersistentPath
      language: CSharp
      name:
        CSharp: PersistentPath
        VB: PersistentPath
      nameWithType:
        CSharp: Platform.PersistentPath
        VB: Platform.PersistentPath
      qualifiedName:
        CSharp: ScriptableFramework.Platform.PersistentPath
        VB: ScriptableFramework.Platform.PersistentPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: PersistentPath
        path: ''
        startLine: 438
      summary: "\nReturns <code>Application.persistentDataPath</code> with a &quot;/&quot; at the end for convenience.\n"
      example: []
      syntax:
        content:
          CSharp: public static string PersistentPath { get; }
          VB: Public Shared ReadOnly Property PersistentPath As String
        parameters: []
        return:
          type: System.String
      overload: ScriptableFramework.Platform.PersistentPath*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: ScriptableFramework.SceneAsset
    commentId: T:ScriptableFramework.SceneAsset
    language: CSharp
    name:
      CSharp: SceneAsset
      VB: SceneAsset
    nameWithType:
      CSharp: SceneAsset
      VB: SceneAsset
    qualifiedName:
      CSharp: ScriptableFramework.SceneAsset
      VB: ScriptableFramework.SceneAsset
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: SceneAsset
      path: ''
      startLine: 464
    summary: "\nClass used to serialize a reference to a scene asset that can be used\nat runtime in a build, when the asset can no longer be directly\nreferenced. This caches the scene name based on the SceneAsset to use\nat runtime to load.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SceneAsset : ISerializationCallbackReceiver'
        VB: >-
          Public Class SceneAsset

              Inherits ISerializationCallbackReceiver
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.SceneAsset.SceneName
      commentId: F:ScriptableFramework.SceneAsset.SceneName
      language: CSharp
      name:
        CSharp: SceneName
        VB: SceneName
      nameWithType:
        CSharp: SceneAsset.SceneName
        VB: SceneAsset.SceneName
      qualifiedName:
        CSharp: ScriptableFramework.SceneAsset.SceneName
        VB: ScriptableFramework.SceneAsset.SceneName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SceneName
        path: ''
        startLine: 482
      syntax:
        content:
          CSharp: public string SceneName
          VB: Public SceneName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.SceneAsset.LoadScene(LoadSceneMode)
      commentId: M:ScriptableFramework.SceneAsset.LoadScene(LoadSceneMode)
      language: CSharp
      name:
        CSharp: LoadScene(LoadSceneMode)
        VB: LoadScene(LoadSceneMode)
      nameWithType:
        CSharp: SceneAsset.LoadScene(LoadSceneMode)
        VB: SceneAsset.LoadScene(LoadSceneMode)
      qualifiedName:
        CSharp: ScriptableFramework.SceneAsset.LoadScene(LoadSceneMode)
        VB: ScriptableFramework.SceneAsset.LoadScene(LoadSceneMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: LoadScene
        path: ''
        startLine: 502
      syntax:
        content:
          CSharp: public void LoadScene(LoadSceneMode mode = null)
          VB: Public Sub LoadScene(mode As LoadSceneMode = Nothing)
        parameters:
        - id: mode
          type: Global.LoadSceneMode
      overload: ScriptableFramework.SceneAsset.LoadScene*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.SceneAsset.LoadSceneAsync(LoadSceneMode)
      commentId: M:ScriptableFramework.SceneAsset.LoadSceneAsync(LoadSceneMode)
      language: CSharp
      name:
        CSharp: LoadSceneAsync(LoadSceneMode)
        VB: LoadSceneAsync(LoadSceneMode)
      nameWithType:
        CSharp: SceneAsset.LoadSceneAsync(LoadSceneMode)
        VB: SceneAsset.LoadSceneAsync(LoadSceneMode)
      qualifiedName:
        CSharp: ScriptableFramework.SceneAsset.LoadSceneAsync(LoadSceneMode)
        VB: ScriptableFramework.SceneAsset.LoadSceneAsync(LoadSceneMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: LoadSceneAsync
        path: ''
        startLine: 508
      syntax:
        content:
          CSharp: public AsyncOperation LoadSceneAsync(LoadSceneMode mode = null)
          VB: Public Function LoadSceneAsync(mode As LoadSceneMode = Nothing) As AsyncOperation
        parameters:
        - id: mode
          type: Global.LoadSceneMode
        return:
          type: Global.AsyncOperation
      overload: ScriptableFramework.SceneAsset.LoadSceneAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.SceneAsset.OnBeforeSerialize
      commentId: M:ScriptableFramework.SceneAsset.OnBeforeSerialize
      language: CSharp
      name:
        CSharp: OnBeforeSerialize()
        VB: OnBeforeSerialize()
      nameWithType:
        CSharp: SceneAsset.OnBeforeSerialize()
        VB: SceneAsset.OnBeforeSerialize()
      qualifiedName:
        CSharp: ScriptableFramework.SceneAsset.OnBeforeSerialize()
        VB: ScriptableFramework.SceneAsset.OnBeforeSerialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnBeforeSerialize
        path: ''
        startLine: 514
      syntax:
        content:
          CSharp: public void OnBeforeSerialize()
          VB: Public Sub OnBeforeSerialize
      overload: ScriptableFramework.SceneAsset.OnBeforeSerialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.SceneAsset.OnAfterDeserialize
      commentId: M:ScriptableFramework.SceneAsset.OnAfterDeserialize
      language: CSharp
      name:
        CSharp: OnAfterDeserialize()
        VB: OnAfterDeserialize()
      nameWithType:
        CSharp: SceneAsset.OnAfterDeserialize()
        VB: SceneAsset.OnAfterDeserialize()
      qualifiedName:
        CSharp: ScriptableFramework.SceneAsset.OnAfterDeserialize()
        VB: ScriptableFramework.SceneAsset.OnAfterDeserialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnAfterDeserialize
        path: ''
        startLine: 545
      syntax:
        content:
          CSharp: public void OnAfterDeserialize()
          VB: Public Sub OnAfterDeserialize
      overload: ScriptableFramework.SceneAsset.OnAfterDeserialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.SceneAsset.SceneLoadException
    commentId: T:ScriptableFramework.SceneAsset.SceneLoadException
    language: CSharp
    name:
      CSharp: SceneAsset.SceneLoadException
      VB: SceneAsset.SceneLoadException
    nameWithType:
      CSharp: SceneAsset.SceneLoadException
      VB: SceneAsset.SceneLoadException
    qualifiedName:
      CSharp: ScriptableFramework.SceneAsset.SceneLoadException
      VB: ScriptableFramework.SceneAsset.SceneLoadException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: SceneLoadException
      path: ''
      startLine: 471
    summary: "\nException that is raised when there is an issue resolving and\nloading a scene reference.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SceneLoadException : Exception'
        VB: >-
          Public Class SceneLoadException

              Inherits Exception
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.SceneAsset.SceneLoadException.#ctor(System.String)
      commentId: M:ScriptableFramework.SceneAsset.SceneLoadException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: SceneLoadException(String)
        VB: SceneLoadException(String)
      nameWithType:
        CSharp: SceneAsset.SceneLoadException.SceneLoadException(String)
        VB: SceneAsset.SceneLoadException.SceneLoadException(String)
      qualifiedName:
        CSharp: ScriptableFramework.SceneAsset.SceneLoadException.SceneLoadException(System.String)
        VB: ScriptableFramework.SceneAsset.SceneLoadException.SceneLoadException(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: .ctor
        path: ''
        startLine: 473
      syntax:
        content:
          CSharp: public SceneLoadException(string message)
          VB: Public Sub New(message As String)
        parameters:
        - id: message
          type: System.String
      overload: ScriptableFramework.SceneAsset.SceneLoadException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.RuntimeObject
    commentId: T:ScriptableFramework.RuntimeObject
    language: CSharp
    name:
      CSharp: RuntimeObject
      VB: RuntimeObject
    nameWithType:
      CSharp: RuntimeObject
      VB: RuntimeObject
    qualifiedName:
      CSharp: ScriptableFramework.RuntimeObject
      VB: ScriptableFramework.RuntimeObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: RuntimeObject
      path: ''
      startLine: 558
    summary: "\nBase class for most of the Scriptable Framework API. These object types that will be reset\non application start.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class RuntimeObject : ScriptableObject'
        VB: >-
          Public MustInherit Class RuntimeObject

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.RuntimeObject.Clear
      commentId: M:ScriptableFramework.RuntimeObject.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: RuntimeObject.Clear()
        VB: RuntimeObject.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeObject.Clear()
        VB: ScriptableFramework.RuntimeObject.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 573
      summary: "\nClear the object of its current data.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void Clear()
          VB: Public MustOverride Sub Clear
      overload: ScriptableFramework.RuntimeObject.Clear*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: ScriptableFramework.RuntimeObject.Reset
      commentId: M:ScriptableFramework.RuntimeObject.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: RuntimeObject.Reset()
        VB: RuntimeObject.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeObject.Reset()
        VB: ScriptableFramework.RuntimeObject.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 578
      summary: "\nSet the object to use its default value. Usually just clears it.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void Reset()
          VB: Public MustOverride Sub Reset
      overload: ScriptableFramework.RuntimeObject.Reset*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: ScriptableFramework.RuntimeObjectManager
    commentId: T:ScriptableFramework.RuntimeObjectManager
    language: CSharp
    name:
      CSharp: RuntimeObjectManager
      VB: RuntimeObjectManager
    nameWithType:
      CSharp: RuntimeObjectManager
      VB: RuntimeObjectManager
    qualifiedName:
      CSharp: ScriptableFramework.RuntimeObjectManager
      VB: ScriptableFramework.RuntimeObjectManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: RuntimeObjectManager
      path: ''
      startLine: 591
    summary: "\nUtility class designed purely for the resetting of any ScriptableObject\nin a Resources directory that derives from <code>RuntimeObject</code>.\n"
    example: []
    syntax:
      content:
        CSharp: public static class RuntimeObjectManager
        VB: Public Module RuntimeObjectManager
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType``1
      commentId: M:ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType``1
      language: CSharp
      name:
        CSharp: ResetObjectsOfType<T>()
        VB: ResetObjectsOfType(Of T)()
      nameWithType:
        CSharp: RuntimeObjectManager.ResetObjectsOfType<T>()
        VB: RuntimeObjectManager.ResetObjectsOfType(Of T)()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType<T>()
        VB: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ResetObjectsOfType
        path: ''
        startLine: 614
      summary: "\nReset all assets that are within a Resources directory of a given type T where T \nderives from RuntimeObject.\nIf you don&apos;t want their data to persist between scenes, call this BEFORE scene change.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static void ResetObjectsOfType<T>()

                where T : RuntimeObject
          VB: Public Shared Sub ResetObjectsOfType(Of T As RuntimeObject)
        typeParameters:
        - id: T
          description: The type of resource to be reset. Must derive from RuntimeObject.
      overload: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType``1
      commentId: M:ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType``1
      language: CSharp
      name:
        CSharp: ClearObjectsOfType<T>()
        VB: ClearObjectsOfType(Of T)()
      nameWithType:
        CSharp: RuntimeObjectManager.ClearObjectsOfType<T>()
        VB: RuntimeObjectManager.ClearObjectsOfType(Of T)()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType<T>()
        VB: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ClearObjectsOfType
        path: ''
        startLine: 636
      summary: "\nClear all assets that are within a Resources directory of a given type T where T \nderives from RuntimeObject.\nIf you don&apos;t want their data to persist between scenes, call this BEFORE scene change.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static void ClearObjectsOfType<T>()

                where T : RuntimeObject
          VB: Public Shared Sub ClearObjectsOfType(Of T As RuntimeObject)
        typeParameters:
        - id: T
          description: The type of resource to be cleared. Must derive from RuntimeData.
      overload: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ScriptableFramework.AppEventListener
    commentId: T:ScriptableFramework.AppEventListener
    language: CSharp
    name:
      CSharp: AppEventListener
      VB: AppEventListener
    nameWithType:
      CSharp: AppEventListener
      VB: AppEventListener
    qualifiedName:
      CSharp: ScriptableFramework.AppEventListener
      VB: ScriptableFramework.AppEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppEventListener
      path: ''
      startLine: 666
    summary: "\nA component which listens to an AppEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AppEventListener : AppEventListenerBase'
        VB: >-
          Public Class AppEventListener

              Inherits AppEventListenerBase
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.AppEventListener.Event
      commentId: F:ScriptableFramework.AppEventListener.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: AppEventListener.Event
        VB: AppEventListener.Event
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener.Event
        VB: ScriptableFramework.AppEventListener.Event
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Event
        path: ''
        startLine: 672
      summary: "\nThe event that is being listenned to.\n"
      example: []
      syntax:
        content:
          CSharp: public AppEvent Event
          VB: Public Event As AppEvent
        return:
          type: ScriptableFramework.AppEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEventListener.Response
      commentId: F:ScriptableFramework.AppEventListener.Response
      language: CSharp
      name:
        CSharp: Response
        VB: Response
      nameWithType:
        CSharp: AppEventListener.Response
        VB: AppEventListener.Response
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener.Response
        VB: ScriptableFramework.AppEventListener.Response
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Response
        path: ''
        startLine: 678
      summary: "\nThe UnityEvent that can have delegates assigned to in the inspector. These delegates will\nbe invoked when the event is raised.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent Response
          VB: Public Response As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEventListener.RegisterSelf
      commentId: M:ScriptableFramework.AppEventListener.RegisterSelf
      language: CSharp
      name:
        CSharp: RegisterSelf()
        VB: RegisterSelf()
      nameWithType:
        CSharp: AppEventListener.RegisterSelf()
        VB: AppEventListener.RegisterSelf()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener.RegisterSelf()
        VB: ScriptableFramework.AppEventListener.RegisterSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RegisterSelf
        path: ''
        startLine: 697
      summary: "\nIf <code>Event</code> is not null, register this object to it.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool RegisterSelf()
          VB: Public Overrides Function RegisterSelf As Boolean
        return:
          type: System.Boolean
          description: Returns whether the registration was successful or not.
      overload: ScriptableFramework.AppEventListener.RegisterSelf*
      overridden: ScriptableFramework.AppEventListenerBase.RegisterSelf
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEventListener.UnregisterSelf
      commentId: M:ScriptableFramework.AppEventListener.UnregisterSelf
      language: CSharp
      name:
        CSharp: UnregisterSelf()
        VB: UnregisterSelf()
      nameWithType:
        CSharp: AppEventListener.UnregisterSelf()
        VB: AppEventListener.UnregisterSelf()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener.UnregisterSelf()
        VB: ScriptableFramework.AppEventListener.UnregisterSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UnregisterSelf
        path: ''
        startLine: 707
      summary: "\nIf <code>Event</code> is not null, unregister this object from it.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool UnregisterSelf()
          VB: Public Overrides Function UnregisterSelf As Boolean
        return:
          type: System.Boolean
          description: Returns whether the unregistration was successful or not.
      overload: ScriptableFramework.AppEventListener.UnregisterSelf*
      overridden: ScriptableFramework.AppEventListenerBase.UnregisterSelf
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEventListener.OnEventRaised
      commentId: M:ScriptableFramework.AppEventListener.OnEventRaised
      language: CSharp
      name:
        CSharp: OnEventRaised()
        VB: OnEventRaised()
      nameWithType:
        CSharp: AppEventListener.OnEventRaised()
        VB: AppEventListener.OnEventRaised()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener.OnEventRaised()
        VB: ScriptableFramework.AppEventListener.OnEventRaised()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnEventRaised
        path: ''
        startLine: 717
      summary: "\nInvokes all delegates asigned to this response in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool OnEventRaised()
          VB: Public Overrides Function OnEventRaised As Boolean
        return:
          type: System.Boolean
          description: Returns whether the event response was successful or not.
      overload: ScriptableFramework.AppEventListener.OnEventRaised*
      overridden: ScriptableFramework.AppEventListenerBase.OnEventRaised
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.AppEventListener`1
    commentId: T:ScriptableFramework.AppEventListener`1
    language: CSharp
    name:
      CSharp: AppEventListener<T>
      VB: AppEventListener(Of T)
    nameWithType:
      CSharp: AppEventListener<T>
      VB: AppEventListener(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.AppEventListener<T>
      VB: ScriptableFramework.AppEventListener(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppEventListener
      path: ''
      startLine: 743
    summary: "\nA generic component which listens to an AppEvent of the same type.\nInherit from this class to create your own AppEventListener sub class.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AppEventListener<T> : AppEventListenerBase'
        VB: >-
          Public MustInherit Class AppEventListener(Of T)

              Inherits AppEventListenerBase
      typeParameters:
      - id: T
        description: >-
          The type for this listener to receive from the event when it

          is raised.
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
      commentId: F:ScriptableFramework.AppEventListener`1.valueForManualTrigger
      language: CSharp
      name:
        CSharp: valueForManualTrigger
        VB: valueForManualTrigger
      nameWithType:
        CSharp: AppEventListener<T>.valueForManualTrigger
        VB: AppEventListener(Of T).valueForManualTrigger
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.valueForManualTrigger
        VB: ScriptableFramework.AppEventListener(Of T).valueForManualTrigger
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: valueForManualTrigger
        path: ''
        startLine: 748
      summary: "\nA default input value for OnEventRaised ().\n"
      example: []
      syntax:
        content:
          CSharp: public T valueForManualTrigger
          VB: Public valueForManualTrigger As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEventListener`1.Event
      commentId: F:ScriptableFramework.AppEventListener`1.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: AppEventListener<T>.Event
        VB: AppEventListener(Of T).Event
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.Event
        VB: ScriptableFramework.AppEventListener(Of T).Event
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Event
        path: ''
        startLine: 753
      summary: "\nThe generic event that is being listened to.\n"
      example: []
      syntax:
        content:
          CSharp: protected AppEvent<T> Event
          VB: Protected Event As AppEvent(Of T)
        return:
          type: ScriptableFramework.AppEvent{{T}}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.AppEventListener`1.Response
      commentId: F:ScriptableFramework.AppEventListener`1.Response
      language: CSharp
      name:
        CSharp: Response
        VB: Response
      nameWithType:
        CSharp: AppEventListener<T>.Response
        VB: AppEventListener(Of T).Response
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.Response
        VB: ScriptableFramework.AppEventListener(Of T).Response
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Response
        path: ''
        startLine: 759
      summary: "\nThe generic UnityEvent that can have delegates assigned to in the inspector. These delegates will\nbe invoked when the event is raised and have an object of type T passed to them from the event.\n"
      example: []
      syntax:
        content:
          CSharp: protected UnityEvent<T> Response
          VB: Protected Response As UnityEvent(Of T)
        return:
          type: Global.UnityEvent{{T}}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.AppEventListener`1.RegisterSelf
      commentId: M:ScriptableFramework.AppEventListener`1.RegisterSelf
      language: CSharp
      name:
        CSharp: RegisterSelf()
        VB: RegisterSelf()
      nameWithType:
        CSharp: AppEventListener<T>.RegisterSelf()
        VB: AppEventListener(Of T).RegisterSelf()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.RegisterSelf()
        VB: ScriptableFramework.AppEventListener(Of T).RegisterSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RegisterSelf
        path: ''
        startLine: 778
      summary: "\nIf <code>Event</code> is not null, register this object to it.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool RegisterSelf()
          VB: Public Overrides Function RegisterSelf As Boolean
        return:
          type: System.Boolean
          description: Returns whether the registration was successful or not.
      overload: ScriptableFramework.AppEventListener`1.RegisterSelf*
      overridden: ScriptableFramework.AppEventListenerBase.RegisterSelf
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
      commentId: M:ScriptableFramework.AppEventListener`1.UnregisterSelf
      language: CSharp
      name:
        CSharp: UnregisterSelf()
        VB: UnregisterSelf()
      nameWithType:
        CSharp: AppEventListener<T>.UnregisterSelf()
        VB: AppEventListener(Of T).UnregisterSelf()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.UnregisterSelf()
        VB: ScriptableFramework.AppEventListener(Of T).UnregisterSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UnregisterSelf
        path: ''
        startLine: 788
      summary: "\nIf <code>Event</code> is not null, unregister this object from it.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool UnregisterSelf()
          VB: Public Overrides Function UnregisterSelf As Boolean
        return:
          type: System.Boolean
          description: Returns whether the unregistration was successful or not.
      overload: ScriptableFramework.AppEventListener`1.UnregisterSelf*
      overridden: ScriptableFramework.AppEventListenerBase.UnregisterSelf
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEventListener`1.OnEventRaised
      commentId: M:ScriptableFramework.AppEventListener`1.OnEventRaised
      language: CSharp
      name:
        CSharp: OnEventRaised()
        VB: OnEventRaised()
      nameWithType:
        CSharp: AppEventListener<T>.OnEventRaised()
        VB: AppEventListener(Of T).OnEventRaised()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.OnEventRaised()
        VB: ScriptableFramework.AppEventListener(Of T).OnEventRaised()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnEventRaised
        path: ''
        startLine: 798
      summary: "\nInvokes all delegates asigned to this response in the inspector using a default input.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool OnEventRaised()
          VB: Public Overrides Function OnEventRaised As Boolean
        return:
          type: System.Boolean
          description: Returns whether the event response was successful or not.
      overload: ScriptableFramework.AppEventListener`1.OnEventRaised*
      overridden: ScriptableFramework.AppEventListenerBase.OnEventRaised
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
      commentId: M:ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
      language: CSharp
      name:
        CSharp: OnEventRaised(T)
        VB: OnEventRaised(T)
      nameWithType:
        CSharp: AppEventListener<T>.OnEventRaised(T)
        VB: AppEventListener(Of T).OnEventRaised(T)
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.OnEventRaised(T)
        VB: ScriptableFramework.AppEventListener(Of T).OnEventRaised(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnEventRaised
        path: ''
        startLine: 810
      summary: "\nInvokes all delegates asigned to this response in the inspector using an input provided by the event.\n"
      example: []
      syntax:
        content:
          CSharp: public bool OnEventRaised(T value)
          VB: Public Function OnEventRaised(value As T) As Boolean
        parameters:
        - id: value
          type: '{T}'
        return:
          type: System.Boolean
          description: Returns whether the event response was successful or not.
      overload: ScriptableFramework.AppEventListener`1.OnEventRaised*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: AppEventListener<T>.SetInternalEventAndResponse()
        VB: AppEventListener(Of T).SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListener<T>.SetInternalEventAndResponse()
        VB: ScriptableFramework.AppEventListener(Of T).SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 827
      syntax:
        content:
          CSharp: public abstract void SetInternalEventAndResponse()
          VB: Public MustOverride Sub SetInternalEventAndResponse
      overload: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: ScriptableFramework.AppEventListenerBase
    commentId: T:ScriptableFramework.AppEventListenerBase
    language: CSharp
    name:
      CSharp: AppEventListenerBase
      VB: AppEventListenerBase
    nameWithType:
      CSharp: AppEventListenerBase
      VB: AppEventListenerBase
    qualifiedName:
      CSharp: ScriptableFramework.AppEventListenerBase
      VB: ScriptableFramework.AppEventListenerBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppEventListenerBase
      path: ''
      startLine: 833
    summary: "\nBase class for all AppEventListener components.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AppEventListenerBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class AppEventListenerBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.AppEventListenerBase.OnEventRaised
      commentId: M:ScriptableFramework.AppEventListenerBase.OnEventRaised
      language: CSharp
      name:
        CSharp: OnEventRaised()
        VB: OnEventRaised()
      nameWithType:
        CSharp: AppEventListenerBase.OnEventRaised()
        VB: AppEventListenerBase.OnEventRaised()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListenerBase.OnEventRaised()
        VB: ScriptableFramework.AppEventListenerBase.OnEventRaised()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: OnEventRaised
        path: ''
        startLine: 839
      summary: "\nInvokes all delegates asigned to this response in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool OnEventRaised()
          VB: Public MustOverride Function OnEventRaised As Boolean
        return:
          type: System.Boolean
          description: Returns whether the event response was successful or not.
      overload: ScriptableFramework.AppEventListenerBase.OnEventRaised*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: ScriptableFramework.AppEventListenerBase.RegisterSelf
      commentId: M:ScriptableFramework.AppEventListenerBase.RegisterSelf
      language: CSharp
      name:
        CSharp: RegisterSelf()
        VB: RegisterSelf()
      nameWithType:
        CSharp: AppEventListenerBase.RegisterSelf()
        VB: AppEventListenerBase.RegisterSelf()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListenerBase.RegisterSelf()
        VB: ScriptableFramework.AppEventListenerBase.RegisterSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RegisterSelf
        path: ''
        startLine: 845
      summary: "\nIf <code>Event</code> is not null, register this object to it.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool RegisterSelf()
          VB: Public MustOverride Function RegisterSelf As Boolean
        return:
          type: System.Boolean
          description: Returns whether the registration was successful or not.
      overload: ScriptableFramework.AppEventListenerBase.RegisterSelf*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: ScriptableFramework.AppEventListenerBase.UnregisterSelf
      commentId: M:ScriptableFramework.AppEventListenerBase.UnregisterSelf
      language: CSharp
      name:
        CSharp: UnregisterSelf()
        VB: UnregisterSelf()
      nameWithType:
        CSharp: AppEventListenerBase.UnregisterSelf()
        VB: AppEventListenerBase.UnregisterSelf()
      qualifiedName:
        CSharp: ScriptableFramework.AppEventListenerBase.UnregisterSelf()
        VB: ScriptableFramework.AppEventListenerBase.UnregisterSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UnregisterSelf
        path: ''
        startLine: 851
      summary: "\nIf <code>Event</code> is not null, unregister this object from it.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool UnregisterSelf()
          VB: Public MustOverride Function UnregisterSelf As Boolean
        return:
          type: System.Boolean
          description: Returns whether the unregistration was successful or not.
      overload: ScriptableFramework.AppEventListenerBase.UnregisterSelf*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: ScriptableFramework.BoolEventListener
    commentId: T:ScriptableFramework.BoolEventListener
    language: CSharp
    name:
      CSharp: BoolEventListener
      VB: BoolEventListener
    nameWithType:
      CSharp: BoolEventListener
      VB: BoolEventListener
    qualifiedName:
      CSharp: ScriptableFramework.BoolEventListener
      VB: ScriptableFramework.BoolEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoolEventListener
      path: ''
      startLine: 867
    summary: "\nA component which listens to a BoolEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a BoolEventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoolEventListener : AppEventListener<bool>'
        VB: >-
          Public Class BoolEventListener

              Inherits AppEventListener(Of Boolean)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{System.Boolean}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{System.Boolean}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{System.Boolean}.Event
    - ScriptableFramework.AppEventListener{System.Boolean}.Response
    - ScriptableFramework.AppEventListener{System.Boolean}.RegisterSelf
    - ScriptableFramework.AppEventListener{System.Boolean}.UnregisterSelf
    - ScriptableFramework.AppEventListener{System.Boolean}.OnEventRaised
    - ScriptableFramework.AppEventListener{System.Boolean}.OnEventRaised(System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.BoolEventListener.boolEvent
      commentId: F:ScriptableFramework.BoolEventListener.boolEvent
      language: CSharp
      name:
        CSharp: boolEvent
        VB: boolEvent
      nameWithType:
        CSharp: BoolEventListener.boolEvent
        VB: BoolEventListener.boolEvent
      qualifiedName:
        CSharp: ScriptableFramework.BoolEventListener.boolEvent
        VB: ScriptableFramework.BoolEventListener.boolEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: boolEvent
        path: ''
        startLine: 873
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public BoolEvent boolEvent
          VB: Public boolEvent As BoolEvent
        return:
          type: ScriptableFramework.BoolEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.BoolEventListener.boolResponse
      commentId: F:ScriptableFramework.BoolEventListener.boolResponse
      language: CSharp
      name:
        CSharp: boolResponse
        VB: boolResponse
      nameWithType:
        CSharp: BoolEventListener.boolResponse
        VB: BoolEventListener.boolResponse
      qualifiedName:
        CSharp: ScriptableFramework.BoolEventListener.boolResponse
        VB: ScriptableFramework.BoolEventListener.boolResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: boolResponse
        path: ''
        startLine: 878
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public BoolResponse boolResponse
          VB: Public boolResponse As BoolResponse
        return:
          type: ScriptableFramework.BoolResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.BoolEventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: BoolEventListener.SetInternalEventAndResponse()
        VB: BoolEventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 893
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{System.Boolean}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.BoundsEventListener
    commentId: T:ScriptableFramework.BoundsEventListener
    language: CSharp
    name:
      CSharp: BoundsEventListener
      VB: BoundsEventListener
    nameWithType:
      CSharp: BoundsEventListener
      VB: BoundsEventListener
    qualifiedName:
      CSharp: ScriptableFramework.BoundsEventListener
      VB: ScriptableFramework.BoundsEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoundsEventListener
      path: ''
      startLine: 913
    summary: "\nA component which listens to a BoundsEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a BoundsEventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoundsEventListener : AppEventListener<Bounds>'
        VB: >-
          Public Class BoundsEventListener

              Inherits AppEventListener(Of Bounds)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{Bounds}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{Bounds}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{Bounds}.Event
    - ScriptableFramework.AppEventListener{Bounds}.Response
    - ScriptableFramework.AppEventListener{Bounds}.RegisterSelf
    - ScriptableFramework.AppEventListener{Bounds}.UnregisterSelf
    - ScriptableFramework.AppEventListener{Bounds}.OnEventRaised
    - ScriptableFramework.AppEventListener{Bounds}.OnEventRaised(Bounds)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.BoundsEventListener.boundsEvent
      commentId: F:ScriptableFramework.BoundsEventListener.boundsEvent
      language: CSharp
      name:
        CSharp: boundsEvent
        VB: boundsEvent
      nameWithType:
        CSharp: BoundsEventListener.boundsEvent
        VB: BoundsEventListener.boundsEvent
      qualifiedName:
        CSharp: ScriptableFramework.BoundsEventListener.boundsEvent
        VB: ScriptableFramework.BoundsEventListener.boundsEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: boundsEvent
        path: ''
        startLine: 919
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public BoundsEvent boundsEvent
          VB: Public boundsEvent As BoundsEvent
        return:
          type: ScriptableFramework.BoundsEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.BoundsEventListener.boundsResponse
      commentId: F:ScriptableFramework.BoundsEventListener.boundsResponse
      language: CSharp
      name:
        CSharp: boundsResponse
        VB: boundsResponse
      nameWithType:
        CSharp: BoundsEventListener.boundsResponse
        VB: BoundsEventListener.boundsResponse
      qualifiedName:
        CSharp: ScriptableFramework.BoundsEventListener.boundsResponse
        VB: ScriptableFramework.BoundsEventListener.boundsResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: boundsResponse
        path: ''
        startLine: 924
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public BoundsResponse boundsResponse
          VB: Public boundsResponse As BoundsResponse
        return:
          type: ScriptableFramework.BoundsResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: BoundsEventListener.SetInternalEventAndResponse()
        VB: BoundsEventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 939
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{Bounds}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.ColorEventListener
    commentId: T:ScriptableFramework.ColorEventListener
    language: CSharp
    name:
      CSharp: ColorEventListener
      VB: ColorEventListener
    nameWithType:
      CSharp: ColorEventListener
      VB: ColorEventListener
    qualifiedName:
      CSharp: ScriptableFramework.ColorEventListener
      VB: ScriptableFramework.ColorEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ColorEventListener
      path: ''
      startLine: 959
    summary: "\nA component which listens to a ColorEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a ColorEventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColorEventListener : AppEventListener<Color>'
        VB: >-
          Public Class ColorEventListener

              Inherits AppEventListener(Of Color)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{Color}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{Color}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{Color}.Event
    - ScriptableFramework.AppEventListener{Color}.Response
    - ScriptableFramework.AppEventListener{Color}.RegisterSelf
    - ScriptableFramework.AppEventListener{Color}.UnregisterSelf
    - ScriptableFramework.AppEventListener{Color}.OnEventRaised
    - ScriptableFramework.AppEventListener{Color}.OnEventRaised(Color)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.ColorEventListener.colorEvent
      commentId: F:ScriptableFramework.ColorEventListener.colorEvent
      language: CSharp
      name:
        CSharp: colorEvent
        VB: colorEvent
      nameWithType:
        CSharp: ColorEventListener.colorEvent
        VB: ColorEventListener.colorEvent
      qualifiedName:
        CSharp: ScriptableFramework.ColorEventListener.colorEvent
        VB: ScriptableFramework.ColorEventListener.colorEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: colorEvent
        path: ''
        startLine: 965
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public ColorEvent colorEvent
          VB: Public colorEvent As ColorEvent
        return:
          type: ScriptableFramework.ColorEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ColorEventListener.colorResponse
      commentId: F:ScriptableFramework.ColorEventListener.colorResponse
      language: CSharp
      name:
        CSharp: colorResponse
        VB: colorResponse
      nameWithType:
        CSharp: ColorEventListener.colorResponse
        VB: ColorEventListener.colorResponse
      qualifiedName:
        CSharp: ScriptableFramework.ColorEventListener.colorResponse
        VB: ScriptableFramework.ColorEventListener.colorResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: colorResponse
        path: ''
        startLine: 970
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public ColorResponse colorResponse
          VB: Public colorResponse As ColorResponse
        return:
          type: ScriptableFramework.ColorResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.ColorEventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: ColorEventListener.SetInternalEventAndResponse()
        VB: ColorEventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 984
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{Color}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.FloatEventListener
    commentId: T:ScriptableFramework.FloatEventListener
    language: CSharp
    name:
      CSharp: FloatEventListener
      VB: FloatEventListener
    nameWithType:
      CSharp: FloatEventListener
      VB: FloatEventListener
    qualifiedName:
      CSharp: ScriptableFramework.FloatEventListener
      VB: ScriptableFramework.FloatEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: FloatEventListener
      path: ''
      startLine: 1004
    summary: "\nA component which listens to a FloatEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a FloatEventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FloatEventListener : AppEventListener<float>'
        VB: >-
          Public Class FloatEventListener

              Inherits AppEventListener(Of Single)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{System.Single}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{System.Single}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{System.Single}.Event
    - ScriptableFramework.AppEventListener{System.Single}.Response
    - ScriptableFramework.AppEventListener{System.Single}.RegisterSelf
    - ScriptableFramework.AppEventListener{System.Single}.UnregisterSelf
    - ScriptableFramework.AppEventListener{System.Single}.OnEventRaised
    - ScriptableFramework.AppEventListener{System.Single}.OnEventRaised(System.Single)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.FloatEventListener.floatEvent
      commentId: F:ScriptableFramework.FloatEventListener.floatEvent
      language: CSharp
      name:
        CSharp: floatEvent
        VB: floatEvent
      nameWithType:
        CSharp: FloatEventListener.floatEvent
        VB: FloatEventListener.floatEvent
      qualifiedName:
        CSharp: ScriptableFramework.FloatEventListener.floatEvent
        VB: ScriptableFramework.FloatEventListener.floatEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: floatEvent
        path: ''
        startLine: 1010
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public FloatEvent floatEvent
          VB: Public floatEvent As FloatEvent
        return:
          type: ScriptableFramework.FloatEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.FloatEventListener.floatResponse
      commentId: F:ScriptableFramework.FloatEventListener.floatResponse
      language: CSharp
      name:
        CSharp: floatResponse
        VB: floatResponse
      nameWithType:
        CSharp: FloatEventListener.floatResponse
        VB: FloatEventListener.floatResponse
      qualifiedName:
        CSharp: ScriptableFramework.FloatEventListener.floatResponse
        VB: ScriptableFramework.FloatEventListener.floatResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: floatResponse
        path: ''
        startLine: 1015
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public FloatResponse floatResponse
          VB: Public floatResponse As FloatResponse
        return:
          type: ScriptableFramework.FloatResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.FloatEventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: FloatEventListener.SetInternalEventAndResponse()
        VB: FloatEventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 1029
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{System.Single}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.IntEventListener
    commentId: T:ScriptableFramework.IntEventListener
    language: CSharp
    name:
      CSharp: IntEventListener
      VB: IntEventListener
    nameWithType:
      CSharp: IntEventListener
      VB: IntEventListener
    qualifiedName:
      CSharp: ScriptableFramework.IntEventListener
      VB: ScriptableFramework.IntEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: IntEventListener
      path: ''
      startLine: 1049
    summary: "\nA component which listens to a IntEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a IntEventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IntEventListener : AppEventListener<int>'
        VB: >-
          Public Class IntEventListener

              Inherits AppEventListener(Of Integer)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{System.Int32}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{System.Int32}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{System.Int32}.Event
    - ScriptableFramework.AppEventListener{System.Int32}.Response
    - ScriptableFramework.AppEventListener{System.Int32}.RegisterSelf
    - ScriptableFramework.AppEventListener{System.Int32}.UnregisterSelf
    - ScriptableFramework.AppEventListener{System.Int32}.OnEventRaised
    - ScriptableFramework.AppEventListener{System.Int32}.OnEventRaised(System.Int32)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.IntEventListener.intEvent
      commentId: F:ScriptableFramework.IntEventListener.intEvent
      language: CSharp
      name:
        CSharp: intEvent
        VB: intEvent
      nameWithType:
        CSharp: IntEventListener.intEvent
        VB: IntEventListener.intEvent
      qualifiedName:
        CSharp: ScriptableFramework.IntEventListener.intEvent
        VB: ScriptableFramework.IntEventListener.intEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: intEvent
        path: ''
        startLine: 1055
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public IntEvent intEvent
          VB: Public intEvent As IntEvent
        return:
          type: ScriptableFramework.IntEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.IntEventListener.intResponse
      commentId: F:ScriptableFramework.IntEventListener.intResponse
      language: CSharp
      name:
        CSharp: intResponse
        VB: intResponse
      nameWithType:
        CSharp: IntEventListener.intResponse
        VB: IntEventListener.intResponse
      qualifiedName:
        CSharp: ScriptableFramework.IntEventListener.intResponse
        VB: ScriptableFramework.IntEventListener.intResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: intResponse
        path: ''
        startLine: 1060
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public IntResponse intResponse
          VB: Public intResponse As IntResponse
        return:
          type: ScriptableFramework.IntResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.IntEventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.IntEventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: IntEventListener.SetInternalEventAndResponse()
        VB: IntEventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.IntEventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.IntEventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 1074
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.IntEventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{System.Int32}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.StringEventListener
    commentId: T:ScriptableFramework.StringEventListener
    language: CSharp
    name:
      CSharp: StringEventListener
      VB: StringEventListener
    nameWithType:
      CSharp: StringEventListener
      VB: StringEventListener
    qualifiedName:
      CSharp: ScriptableFramework.StringEventListener
      VB: ScriptableFramework.StringEventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StringEventListener
      path: ''
      startLine: 1094
    summary: "\nA component which listens to a StringEvent.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a StringEventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StringEventListener : AppEventListener<string>'
        VB: >-
          Public Class StringEventListener

              Inherits AppEventListener(Of String)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{System.String}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{System.String}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{System.String}.Event
    - ScriptableFramework.AppEventListener{System.String}.Response
    - ScriptableFramework.AppEventListener{System.String}.RegisterSelf
    - ScriptableFramework.AppEventListener{System.String}.UnregisterSelf
    - ScriptableFramework.AppEventListener{System.String}.OnEventRaised
    - ScriptableFramework.AppEventListener{System.String}.OnEventRaised(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.StringEventListener.stringEvent
      commentId: F:ScriptableFramework.StringEventListener.stringEvent
      language: CSharp
      name:
        CSharp: stringEvent
        VB: stringEvent
      nameWithType:
        CSharp: StringEventListener.stringEvent
        VB: StringEventListener.stringEvent
      qualifiedName:
        CSharp: ScriptableFramework.StringEventListener.stringEvent
        VB: ScriptableFramework.StringEventListener.stringEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: stringEvent
        path: ''
        startLine: 1100
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public StringEvent stringEvent
          VB: Public stringEvent As StringEvent
        return:
          type: ScriptableFramework.StringEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StringEventListener.stringResponse
      commentId: F:ScriptableFramework.StringEventListener.stringResponse
      language: CSharp
      name:
        CSharp: stringResponse
        VB: stringResponse
      nameWithType:
        CSharp: StringEventListener.stringResponse
        VB: StringEventListener.stringResponse
      qualifiedName:
        CSharp: ScriptableFramework.StringEventListener.stringResponse
        VB: ScriptableFramework.StringEventListener.stringResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: stringResponse
        path: ''
        startLine: 1105
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public StringResponse stringResponse
          VB: Public stringResponse As StringResponse
        return:
          type: ScriptableFramework.StringResponse
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StringEventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.StringEventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: StringEventListener.SetInternalEventAndResponse()
        VB: StringEventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.StringEventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.StringEventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 1119
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.StringEventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{System.String}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.Vector3EventListener
    commentId: T:ScriptableFramework.Vector3EventListener
    language: CSharp
    name:
      CSharp: Vector3EventListener
      VB: Vector3EventListener
    nameWithType:
      CSharp: Vector3EventListener
      VB: Vector3EventListener
    qualifiedName:
      CSharp: ScriptableFramework.Vector3EventListener
      VB: ScriptableFramework.Vector3EventListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Vector3EventListener
      path: ''
      startLine: 1139
    summary: "\nA component which listens to a Vector3Event.\nIn the inspector, drag and drop in the list of responses to set up which\nfuntions will be called when the event is raised.\nDue to limitations in serializing generic types, public references for both events\nand responses need to be explicitly written when creating a Vector3EventListener\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Vector3EventListener : AppEventListener<Vector3>'
        VB: >-
          Public Class Vector3EventListener

              Inherits AppEventListener(Of Vector3)
    inheritance:
    - System.Object
    - ScriptableFramework.AppEventListenerBase
    - ScriptableFramework.AppEventListener{Vector3}
    inheritedMembers:
    - ScriptableFramework.AppEventListener{Vector3}.valueForManualTrigger
    - ScriptableFramework.AppEventListener{Vector3}.Event
    - ScriptableFramework.AppEventListener{Vector3}.Response
    - ScriptableFramework.AppEventListener{Vector3}.RegisterSelf
    - ScriptableFramework.AppEventListener{Vector3}.UnregisterSelf
    - ScriptableFramework.AppEventListener{Vector3}.OnEventRaised
    - ScriptableFramework.AppEventListener{Vector3}.OnEventRaised(Vector3)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Vector3EventListener.vector3Event
      commentId: F:ScriptableFramework.Vector3EventListener.vector3Event
      language: CSharp
      name:
        CSharp: vector3Event
        VB: vector3Event
      nameWithType:
        CSharp: Vector3EventListener.vector3Event
        VB: Vector3EventListener.vector3Event
      qualifiedName:
        CSharp: ScriptableFramework.Vector3EventListener.vector3Event
        VB: ScriptableFramework.Vector3EventListener.vector3Event
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: vector3Event
        path: ''
        startLine: 1145
      summary: "\nThe event reference to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3Event vector3Event
          VB: Public vector3Event As Vector3Event
        return:
          type: ScriptableFramework.Vector3Event
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Vector3EventListener.vector3Response
      commentId: F:ScriptableFramework.Vector3EventListener.vector3Response
      language: CSharp
      name:
        CSharp: vector3Response
        VB: vector3Response
      nameWithType:
        CSharp: Vector3EventListener.vector3Response
        VB: Vector3EventListener.vector3Response
      qualifiedName:
        CSharp: ScriptableFramework.Vector3EventListener.vector3Response
        VB: ScriptableFramework.Vector3EventListener.vector3Response
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: vector3Response
        path: ''
        startLine: 1150
      summary: "\nThe response to be set in the inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3Response vector3Response
          VB: Public vector3Response As Vector3Response
        return:
          type: ScriptableFramework.Vector3Response
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse
      commentId: M:ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse
      language: CSharp
      name:
        CSharp: SetInternalEventAndResponse()
        VB: SetInternalEventAndResponse()
      nameWithType:
        CSharp: Vector3EventListener.SetInternalEventAndResponse()
        VB: Vector3EventListener.SetInternalEventAndResponse()
      qualifiedName:
        CSharp: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse()
        VB: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetInternalEventAndResponse
        path: ''
        startLine: 1164
      summary: "\nAfter asigning the public event and response, use this to apply those references internally.\n"
      example: []
      syntax:
        content:
          CSharp: public override void SetInternalEventAndResponse()
          VB: Public Overrides Sub SetInternalEventAndResponse
      overload: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse*
      overridden: ScriptableFramework.AppEventListener{Vector3}.SetInternalEventAndResponse
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.AppEvent
    commentId: T:ScriptableFramework.AppEvent
    language: CSharp
    name:
      CSharp: AppEvent
      VB: AppEvent
    nameWithType:
      CSharp: AppEvent
      VB: AppEvent
    qualifiedName:
      CSharp: ScriptableFramework.AppEvent
      VB: ScriptableFramework.AppEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppEvent
      path: ''
      startLine: 1183
    summary: "\nAn RuntimeObject which acts as an event handle.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AppEvent : AppEventBase'
        VB: >-
          Public Class AppEvent

              Inherits AppEventBase
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.AppEvent.ListenerCount
      commentId: P:ScriptableFramework.AppEvent.ListenerCount
      language: CSharp
      name:
        CSharp: ListenerCount
        VB: ListenerCount
      nameWithType:
        CSharp: AppEvent.ListenerCount
        VB: AppEvent.ListenerCount
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent.ListenerCount
        VB: ScriptableFramework.AppEvent.ListenerCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ListenerCount
        path: ''
        startLine: 1195
      summary: "\nReturns the count of all listeners on this event.\n"
      example: []
      syntax:
        content:
          CSharp: public int ListenerCount { get; }
          VB: Public ReadOnly Property ListenerCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ScriptableFramework.AppEvent.ListenerCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ScriptableFramework.AppEvent.RaiseEvent(System.String,System.String,System.Int32)
      commentId: M:ScriptableFramework.AppEvent.RaiseEvent(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: RaiseEvent(String, String, Int32)
        VB: RaiseEvent(String, String, Int32)
      nameWithType:
        CSharp: AppEvent.RaiseEvent(String, String, Int32)
        VB: AppEvent.RaiseEvent(String, String, Int32)
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent.RaiseEvent(System.String, System.String, System.Int32)
        VB: ScriptableFramework.AppEvent.RaiseEvent(System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RaiseEvent
        path: ''
        startLine: 1205
      summary: "\nInvoke every function callback that is delegated to every event listener that is listenning \nto this event.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool RaiseEvent(string fileName = "", string methodName = "", int callerLineNumber = 0)
          VB: Public Overrides Function RaiseEvent(fileName As String = "", methodName As String = "", callerLineNumber As Integer = 0) As Boolean
        parameters:
        - id: fileName
          type: System.String
          description: Name of the .cs file the event was raised from (assigned automatically)
        - id: methodName
          type: System.String
          description: Name of the method the event was raised from (assigned automatically)
        - id: callerLineNumber
          type: System.Int32
          description: Line number the event was raised from (assigned automatically)
        return:
          type: System.Boolean
          description: Returns whether or not the event was raised successfully.
      overload: ScriptableFramework.AppEvent.RaiseEvent*
      overridden: ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEvent.RegisterListener(ScriptableFramework.AppEventListener)
      commentId: M:ScriptableFramework.AppEvent.RegisterListener(ScriptableFramework.AppEventListener)
      language: CSharp
      name:
        CSharp: RegisterListener(AppEventListener)
        VB: RegisterListener(AppEventListener)
      nameWithType:
        CSharp: AppEvent.RegisterListener(AppEventListener)
        VB: AppEvent.RegisterListener(AppEventListener)
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent.RegisterListener(ScriptableFramework.AppEventListener)
        VB: ScriptableFramework.AppEvent.RegisterListener(ScriptableFramework.AppEventListener)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RegisterListener
        path: ''
        startLine: 1238
      summary: "\nIf not already registered, add an app event listener to this event&apos;s list of listeners.\n"
      example: []
      syntax:
        content:
          CSharp: public bool RegisterListener(AppEventListener listener)
          VB: Public Function RegisterListener(listener As AppEventListener) As Boolean
        parameters:
        - id: listener
          type: ScriptableFramework.AppEventListener
          description: An instance of a listener component in the current scene.
        return:
          type: System.Boolean
          description: Returns whether or not the listener was registered successfully.
      overload: ScriptableFramework.AppEvent.RegisterListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEvent.UnregisterListener(ScriptableFramework.AppEventListener)
      commentId: M:ScriptableFramework.AppEvent.UnregisterListener(ScriptableFramework.AppEventListener)
      language: CSharp
      name:
        CSharp: UnregisterListener(AppEventListener)
        VB: UnregisterListener(AppEventListener)
      nameWithType:
        CSharp: AppEvent.UnregisterListener(AppEventListener)
        VB: AppEvent.UnregisterListener(AppEventListener)
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent.UnregisterListener(ScriptableFramework.AppEventListener)
        VB: ScriptableFramework.AppEvent.UnregisterListener(ScriptableFramework.AppEventListener)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UnregisterListener
        path: ''
        startLine: 1256
      summary: "\nIf already registered, remove an app event listener from this event&apos;s list of listeners.\n"
      example: []
      syntax:
        content:
          CSharp: public bool UnregisterListener(AppEventListener listener)
          VB: Public Function UnregisterListener(listener As AppEventListener) As Boolean
        parameters:
        - id: listener
          type: ScriptableFramework.AppEventListener
          description: An instance of a listener component in the current scene.
        return:
          type: System.Boolean
          description: Returns whether or not the listener was unregistered successfully.
      overload: ScriptableFramework.AppEvent.UnregisterListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEvent.Clear
      commentId: M:ScriptableFramework.AppEvent.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: AppEvent.Clear()
        VB: AppEvent.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent.Clear()
        VB: ScriptableFramework.AppEvent.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 1271
      summary: "\nClear this event of all it&apos;s listeners\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.AppEvent.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEvent.Reset
      commentId: M:ScriptableFramework.AppEvent.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: AppEvent.Reset()
        VB: AppEvent.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent.Reset()
        VB: ScriptableFramework.AppEvent.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 1279
      summary: "\nCalls Clear ()\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.AppEvent.Reset*
      overridden: ScriptableFramework.RuntimeObject.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.AppEvent`1
    commentId: T:ScriptableFramework.AppEvent`1
    language: CSharp
    name:
      CSharp: AppEvent<T>
      VB: AppEvent(Of T)
    nameWithType:
      CSharp: AppEvent<T>
      VB: AppEvent(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.AppEvent<T>
      VB: ScriptableFramework.AppEvent(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppEvent
      path: ''
      startLine: 1291
    summary: "\nAn abstract generic RuntimeObject which acts as an event handle.\nInherit from this class to create your own event.\nGive your class the CreateAssetMenu attribute to serialize an instance of it.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AppEvent<T> : AppEventBase'
        VB: >-
          Public MustInherit Class AppEvent(Of T)

              Inherits AppEventBase
      typeParameters:
      - id: T
        description: The type of the object that will will be passed when raising an event
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
      commentId: F:ScriptableFramework.AppEvent`1.valueForManualTrigger
      language: CSharp
      name:
        CSharp: valueForManualTrigger
        VB: valueForManualTrigger
      nameWithType:
        CSharp: AppEvent<T>.valueForManualTrigger
        VB: AppEvent(Of T).valueForManualTrigger
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.valueForManualTrigger
        VB: ScriptableFramework.AppEvent(Of T).valueForManualTrigger
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: valueForManualTrigger
        path: ''
        startLine: 1297
      summary: "\nWhen testing your generic event in the editor, this value will be passed to each listener.\n"
      example: []
      syntax:
        content:
          CSharp: public T valueForManualTrigger
          VB: Public valueForManualTrigger As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEvent`1.ListenerCount
      commentId: P:ScriptableFramework.AppEvent`1.ListenerCount
      language: CSharp
      name:
        CSharp: ListenerCount
        VB: ListenerCount
      nameWithType:
        CSharp: AppEvent<T>.ListenerCount
        VB: AppEvent(Of T).ListenerCount
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.ListenerCount
        VB: ScriptableFramework.AppEvent(Of T).ListenerCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ListenerCount
        path: ''
        startLine: 1316
      summary: "\nReturns the count of all listeners on this event.\n"
      example: []
      syntax:
        content:
          CSharp: public int ListenerCount { get; }
          VB: Public ReadOnly Property ListenerCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ScriptableFramework.AppEvent`1.ListenerCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
      commentId: M:ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: RaiseEvent(String, String, Int32)
        VB: RaiseEvent(String, String, Int32)
      nameWithType:
        CSharp: AppEvent<T>.RaiseEvent(String, String, Int32)
        VB: AppEvent(Of T).RaiseEvent(String, String, Int32)
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.RaiseEvent(System.String, System.String, System.Int32)
        VB: ScriptableFramework.AppEvent(Of T).RaiseEvent(System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RaiseEvent
        path: ''
        startLine: 1326
      summary: "\nInvoke every function callback that is delegated to every event listener that is listenning \nto this event using <code>valueForManualTrigger</code> or an empty instance of T depending on.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool RaiseEvent(string fileName = "", string methodName = "", int callerLineNumber = 0)
          VB: Public Overrides Function RaiseEvent(fileName As String = "", methodName As String = "", callerLineNumber As Integer = 0) As Boolean
        parameters:
        - id: fileName
          type: System.String
          description: Name of the .cs file the event was raised from (assigned automatically)
        - id: methodName
          type: System.String
          description: Name of the method the event was raised from (assigned automatically)
        - id: callerLineNumber
          type: System.Int32
          description: Line number the event was raised from (assigned automatically)
        return:
          type: System.Boolean
          description: Returns whether or not the event was raised successfully.
      overload: ScriptableFramework.AppEvent`1.RaiseEvent*
      overridden: ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
      commentId: M:ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: RaiseEvent(T, String, String, Int32)
        VB: RaiseEvent(T, String, String, Int32)
      nameWithType:
        CSharp: AppEvent<T>.RaiseEvent(T, String, String, Int32)
        VB: AppEvent(Of T).RaiseEvent(T, String, String, Int32)
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.RaiseEvent(T, System.String, System.String, System.Int32)
        VB: ScriptableFramework.AppEvent(Of T).RaiseEvent(T, System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RaiseEvent
        path: ''
        startLine: 1345
      summary: "\nInvoke every function callback that is delegated to every event listener that is listenning \nto this event.\nIf there are no listeners, a warning will be given.\n"
      example: []
      syntax:
        content:
          CSharp: public bool RaiseEvent(T value, string fileName = "", string methodName = "", int callerLineNumber = 0)
          VB: Public Function RaiseEvent(value As T, fileName As String = "", methodName As String = "", callerLineNumber As Integer = 0) As Boolean
        parameters:
        - id: value
          type: '{T}'
          description: >-
            The value that will be passed to all current listeners which will in

            turn pass the value to each delegated function in each listener.
        - id: fileName
          type: System.String
          description: Name of the .cs file the event was raised from (assigned automatically)
        - id: methodName
          type: System.String
          description: Name of the method the event was raised from (assigned automatically)
        - id: callerLineNumber
          type: System.Int32
          description: Line number the event was raised from (assigned automatically)
        return:
          type: System.Boolean
          description: Returns whether or not the event was raised successfully.
      overload: ScriptableFramework.AppEvent`1.RaiseEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
      commentId: M:ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
      language: CSharp
      name:
        CSharp: RegisterListener(AppEventListener<T>)
        VB: RegisterListener(AppEventListener(Of T))
      nameWithType:
        CSharp: AppEvent<T>.RegisterListener(AppEventListener<T>)
        VB: AppEvent(Of T).RegisterListener(AppEventListener(Of T))
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.RegisterListener(ScriptableFramework.AppEventListener<T>)
        VB: ScriptableFramework.AppEvent(Of T).RegisterListener(ScriptableFramework.AppEventListener(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RegisterListener
        path: ''
        startLine: 1379
      summary: "\nIf not already registered, add an app event listener to this event&apos;s list of listeners.\n"
      example: []
      syntax:
        content:
          CSharp: public bool RegisterListener(AppEventListener<T> listener)
          VB: Public Function RegisterListener(listener As AppEventListener(Of T)) As Boolean
        parameters:
        - id: listener
          type: ScriptableFramework.AppEventListener{{T}}
          description: An instance of a listener component in the current scene.
        return:
          type: System.Boolean
          description: Returns whether or not the listener was registered successfully.
      overload: ScriptableFramework.AppEvent`1.RegisterListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
      commentId: M:ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
      language: CSharp
      name:
        CSharp: UnregisterListener(AppEventListener<T>)
        VB: UnregisterListener(AppEventListener(Of T))
      nameWithType:
        CSharp: AppEvent<T>.UnregisterListener(AppEventListener<T>)
        VB: AppEvent(Of T).UnregisterListener(AppEventListener(Of T))
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.UnregisterListener(ScriptableFramework.AppEventListener<T>)
        VB: ScriptableFramework.AppEvent(Of T).UnregisterListener(ScriptableFramework.AppEventListener(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UnregisterListener
        path: ''
        startLine: 1401
      summary: "\nIf already registered, remove an app event listener from this event&apos;s list of listeners.\n"
      example: []
      syntax:
        content:
          CSharp: public bool UnregisterListener(AppEventListener<T> listener)
          VB: Public Function UnregisterListener(listener As AppEventListener(Of T)) As Boolean
        parameters:
        - id: listener
          type: ScriptableFramework.AppEventListener{{T}}
          description: An instance of a listener component in the current scene.
        return:
          type: System.Boolean
          description: Returns whether or not the listener was unregistered successfully.
      overload: ScriptableFramework.AppEvent`1.UnregisterListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.AppEvent`1.Clear
      commentId: M:ScriptableFramework.AppEvent`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: AppEvent<T>.Clear()
        VB: AppEvent(Of T).Clear()
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.Clear()
        VB: ScriptableFramework.AppEvent(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 1420
      summary: "\nClear this event of all it&apos;s listeners\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.AppEvent`1.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.AppEvent`1.Reset
      commentId: M:ScriptableFramework.AppEvent`1.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: AppEvent<T>.Reset()
        VB: AppEvent(Of T).Reset()
      qualifiedName:
        CSharp: ScriptableFramework.AppEvent<T>.Reset()
        VB: ScriptableFramework.AppEvent(Of T).Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 1432
      summary: "\nCalls Clear ()\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.AppEvent`1.Reset*
      overridden: ScriptableFramework.RuntimeObject.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.AppEventBase
    commentId: T:ScriptableFramework.AppEventBase
    language: CSharp
    name:
      CSharp: AppEventBase
      VB: AppEventBase
    nameWithType:
      CSharp: AppEventBase
      VB: AppEventBase
    qualifiedName:
      CSharp: ScriptableFramework.AppEventBase
      VB: ScriptableFramework.AppEventBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: AppEventBase
      path: ''
      startLine: 1441
    summary: "\nBase class for generic and non generic AppEvents\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AppEventBase : RuntimeObject'
        VB: >-
          Public MustInherit Class AppEventBase

              Inherits RuntimeObject
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    inheritedMembers:
    - ScriptableFramework.RuntimeObject.Clear
    - ScriptableFramework.RuntimeObject.Reset
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
      commentId: M:ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: RaiseEvent(String, String, Int32)
        VB: RaiseEvent(String, String, Int32)
      nameWithType:
        CSharp: AppEventBase.RaiseEvent(String, String, Int32)
        VB: AppEventBase.RaiseEvent(String, String, Int32)
      qualifiedName:
        CSharp: ScriptableFramework.AppEventBase.RaiseEvent(System.String, System.String, System.Int32)
        VB: ScriptableFramework.AppEventBase.RaiseEvent(System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RaiseEvent
        path: ''
        startLine: 1451
      summary: "\nInvoke every function callback that is delegated to every event listener that is listenning \nto this event.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool RaiseEvent(string fileName = "", string methodName = "", int callerLineNumber = 0)
          VB: Public MustOverride Function RaiseEvent(fileName As String = "", methodName As String = "", callerLineNumber As Integer = 0) As Boolean
        parameters:
        - id: fileName
          type: System.String
          description: Name of the .cs file the event was raised from (assigned automatically)
        - id: methodName
          type: System.String
          description: Name of the method the event was raised from (assigned automatically)
        - id: callerLineNumber
          type: System.Int32
          description: Line number the event was raised from (assigned automatically)
        return:
          type: System.Boolean
          description: Returns whether or not the event was raised successfully.
      overload: ScriptableFramework.AppEventBase.RaiseEvent*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: ScriptableFramework.BoolEvent
    commentId: T:ScriptableFramework.BoolEvent
    language: CSharp
    name:
      CSharp: BoolEvent
      VB: BoolEvent
    nameWithType:
      CSharp: BoolEvent
      VB: BoolEvent
    qualifiedName:
      CSharp: ScriptableFramework.BoolEvent
      VB: ScriptableFramework.BoolEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoolEvent
      path: ''
      startLine: 1463
    summary: "\nAn event handle designed to pass a bool.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoolEvent : AppEvent<bool>'
        VB: >-
          Public Class BoolEvent

              Inherits AppEvent(Of Boolean)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{System.Boolean}
    inheritedMembers:
    - ScriptableFramework.AppEvent{System.Boolean}.valueForManualTrigger
    - ScriptableFramework.AppEvent{System.Boolean}.ListenerCount
    - ScriptableFramework.AppEvent{System.Boolean}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.Boolean}.RaiseEvent(System.Boolean,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.Boolean}.RegisterListener(ScriptableFramework.AppEventListener{System.Boolean})
    - ScriptableFramework.AppEvent{System.Boolean}.UnregisterListener(ScriptableFramework.AppEventListener{System.Boolean})
    - ScriptableFramework.AppEvent{System.Boolean}.Clear
    - ScriptableFramework.AppEvent{System.Boolean}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.BoundsEvent
    commentId: T:ScriptableFramework.BoundsEvent
    language: CSharp
    name:
      CSharp: BoundsEvent
      VB: BoundsEvent
    nameWithType:
      CSharp: BoundsEvent
      VB: BoundsEvent
    qualifiedName:
      CSharp: ScriptableFramework.BoundsEvent
      VB: ScriptableFramework.BoundsEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoundsEvent
      path: ''
      startLine: 1479
    summary: "\nAn event handle designed to pass a Bounds.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoundsEvent : AppEvent<Bounds>'
        VB: >-
          Public Class BoundsEvent

              Inherits AppEvent(Of Bounds)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{Bounds}
    inheritedMembers:
    - ScriptableFramework.AppEvent{Bounds}.valueForManualTrigger
    - ScriptableFramework.AppEvent{Bounds}.ListenerCount
    - ScriptableFramework.AppEvent{Bounds}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{Bounds}.RaiseEvent(Bounds,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{Bounds}.RegisterListener(ScriptableFramework.AppEventListener{Bounds})
    - ScriptableFramework.AppEvent{Bounds}.UnregisterListener(ScriptableFramework.AppEventListener{Bounds})
    - ScriptableFramework.AppEvent{Bounds}.Clear
    - ScriptableFramework.AppEvent{Bounds}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ColorEvent
    commentId: T:ScriptableFramework.ColorEvent
    language: CSharp
    name:
      CSharp: ColorEvent
      VB: ColorEvent
    nameWithType:
      CSharp: ColorEvent
      VB: ColorEvent
    qualifiedName:
      CSharp: ScriptableFramework.ColorEvent
      VB: ScriptableFramework.ColorEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ColorEvent
      path: ''
      startLine: 1495
    summary: "\nAn event handle designed to pass a Color.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColorEvent : AppEvent<Color>'
        VB: >-
          Public Class ColorEvent

              Inherits AppEvent(Of Color)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{Color}
    inheritedMembers:
    - ScriptableFramework.AppEvent{Color}.valueForManualTrigger
    - ScriptableFramework.AppEvent{Color}.ListenerCount
    - ScriptableFramework.AppEvent{Color}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{Color}.RaiseEvent(Color,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{Color}.RegisterListener(ScriptableFramework.AppEventListener{Color})
    - ScriptableFramework.AppEvent{Color}.UnregisterListener(ScriptableFramework.AppEventListener{Color})
    - ScriptableFramework.AppEvent{Color}.Clear
    - ScriptableFramework.AppEvent{Color}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.FloatEvent
    commentId: T:ScriptableFramework.FloatEvent
    language: CSharp
    name:
      CSharp: FloatEvent
      VB: FloatEvent
    nameWithType:
      CSharp: FloatEvent
      VB: FloatEvent
    qualifiedName:
      CSharp: ScriptableFramework.FloatEvent
      VB: ScriptableFramework.FloatEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: FloatEvent
      path: ''
      startLine: 1510
    summary: "\nAn event handle designed to pass a float.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FloatEvent : AppEvent<float>'
        VB: >-
          Public Class FloatEvent

              Inherits AppEvent(Of Single)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{System.Single}
    inheritedMembers:
    - ScriptableFramework.AppEvent{System.Single}.valueForManualTrigger
    - ScriptableFramework.AppEvent{System.Single}.ListenerCount
    - ScriptableFramework.AppEvent{System.Single}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.Single}.RaiseEvent(System.Single,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.Single}.RegisterListener(ScriptableFramework.AppEventListener{System.Single})
    - ScriptableFramework.AppEvent{System.Single}.UnregisterListener(ScriptableFramework.AppEventListener{System.Single})
    - ScriptableFramework.AppEvent{System.Single}.Clear
    - ScriptableFramework.AppEvent{System.Single}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.IntEvent
    commentId: T:ScriptableFramework.IntEvent
    language: CSharp
    name:
      CSharp: IntEvent
      VB: IntEvent
    nameWithType:
      CSharp: IntEvent
      VB: IntEvent
    qualifiedName:
      CSharp: ScriptableFramework.IntEvent
      VB: ScriptableFramework.IntEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: IntEvent
      path: ''
      startLine: 1525
    summary: "\nAn event handle designed to pass an int.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IntEvent : AppEvent<int>'
        VB: >-
          Public Class IntEvent

              Inherits AppEvent(Of Integer)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{System.Int32}
    inheritedMembers:
    - ScriptableFramework.AppEvent{System.Int32}.valueForManualTrigger
    - ScriptableFramework.AppEvent{System.Int32}.ListenerCount
    - ScriptableFramework.AppEvent{System.Int32}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.Int32}.RaiseEvent(System.Int32,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.Int32}.RegisterListener(ScriptableFramework.AppEventListener{System.Int32})
    - ScriptableFramework.AppEvent{System.Int32}.UnregisterListener(ScriptableFramework.AppEventListener{System.Int32})
    - ScriptableFramework.AppEvent{System.Int32}.Clear
    - ScriptableFramework.AppEvent{System.Int32}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.StringEvent
    commentId: T:ScriptableFramework.StringEvent
    language: CSharp
    name:
      CSharp: StringEvent
      VB: StringEvent
    nameWithType:
      CSharp: StringEvent
      VB: StringEvent
    qualifiedName:
      CSharp: ScriptableFramework.StringEvent
      VB: ScriptableFramework.StringEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StringEvent
      path: ''
      startLine: 1540
    summary: "\nAn event handle designed to pass a string.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StringEvent : AppEvent<string>'
        VB: >-
          Public Class StringEvent

              Inherits AppEvent(Of String)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{System.String}
    inheritedMembers:
    - ScriptableFramework.AppEvent{System.String}.valueForManualTrigger
    - ScriptableFramework.AppEvent{System.String}.ListenerCount
    - ScriptableFramework.AppEvent{System.String}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.String}.RaiseEvent(System.String,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{System.String}.RegisterListener(ScriptableFramework.AppEventListener{System.String})
    - ScriptableFramework.AppEvent{System.String}.UnregisterListener(ScriptableFramework.AppEventListener{System.String})
    - ScriptableFramework.AppEvent{System.String}.Clear
    - ScriptableFramework.AppEvent{System.String}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Vector3Event
    commentId: T:ScriptableFramework.Vector3Event
    language: CSharp
    name:
      CSharp: Vector3Event
      VB: Vector3Event
    nameWithType:
      CSharp: Vector3Event
      VB: Vector3Event
    qualifiedName:
      CSharp: ScriptableFramework.Vector3Event
      VB: ScriptableFramework.Vector3Event
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Vector3Event
      path: ''
      startLine: 1555
    summary: "\nAn event handle designed to pass a Vector3.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Vector3Event : AppEvent<Vector3>'
        VB: >-
          Public Class Vector3Event

              Inherits AppEvent(Of Vector3)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.AppEventBase
    - ScriptableFramework.AppEvent{Vector3}
    inheritedMembers:
    - ScriptableFramework.AppEvent{Vector3}.valueForManualTrigger
    - ScriptableFramework.AppEvent{Vector3}.ListenerCount
    - ScriptableFramework.AppEvent{Vector3}.RaiseEvent(System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{Vector3}.RaiseEvent(Vector3,System.String,System.String,System.Int32)
    - ScriptableFramework.AppEvent{Vector3}.RegisterListener(ScriptableFramework.AppEventListener{Vector3})
    - ScriptableFramework.AppEvent{Vector3}.UnregisterListener(ScriptableFramework.AppEventListener{Vector3})
    - ScriptableFramework.AppEvent{Vector3}.Clear
    - ScriptableFramework.AppEvent{Vector3}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.BoolResponse
    commentId: T:ScriptableFramework.BoolResponse
    language: CSharp
    name:
      CSharp: BoolResponse
      VB: BoolResponse
    nameWithType:
      CSharp: BoolResponse
      VB: BoolResponse
    qualifiedName:
      CSharp: ScriptableFramework.BoolResponse
      VB: ScriptableFramework.BoolResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoolResponse
      path: ''
      startLine: 1571
    summary: "\nA <code>UnityEvent</code> able to take a dynamic bool.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BoolResponse : UnityEvent<bool>
        VB: >-
          <Serializable>

          Public Class BoolResponse

              Inherits UnityEvent(Of Boolean)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.BoundsResponse
    commentId: T:ScriptableFramework.BoundsResponse
    language: CSharp
    name:
      CSharp: BoundsResponse
      VB: BoundsResponse
    nameWithType:
      CSharp: BoundsResponse
      VB: BoundsResponse
    qualifiedName:
      CSharp: ScriptableFramework.BoundsResponse
      VB: ScriptableFramework.BoundsResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoundsResponse
      path: ''
      startLine: 1588
    summary: "\nA <code>UnityEvent</code> able to take a dynamic Bounds.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BoundsResponse : UnityEvent<Bounds>
        VB: >-
          <Serializable>

          Public Class BoundsResponse

              Inherits UnityEvent(Of Bounds)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ColorResponse
    commentId: T:ScriptableFramework.ColorResponse
    language: CSharp
    name:
      CSharp: ColorResponse
      VB: ColorResponse
    nameWithType:
      CSharp: ColorResponse
      VB: ColorResponse
    qualifiedName:
      CSharp: ScriptableFramework.ColorResponse
      VB: ScriptableFramework.ColorResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ColorResponse
      path: ''
      startLine: 1603
    summary: "\nA <code>UnityEvent</code> able to take a dynamic Color.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ColorResponse : UnityEvent<Color>
        VB: >-
          <Serializable>

          Public Class ColorResponse

              Inherits UnityEvent(Of Color)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.FloatResponse
    commentId: T:ScriptableFramework.FloatResponse
    language: CSharp
    name:
      CSharp: FloatResponse
      VB: FloatResponse
    nameWithType:
      CSharp: FloatResponse
      VB: FloatResponse
    qualifiedName:
      CSharp: ScriptableFramework.FloatResponse
      VB: ScriptableFramework.FloatResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: FloatResponse
      path: ''
      startLine: 1619
    summary: "\nA <code>UnityEvent</code> able to take a dynamic float.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class FloatResponse : UnityEvent<float>
        VB: >-
          <Serializable>

          Public Class FloatResponse

              Inherits UnityEvent(Of Single)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.IntResponse
    commentId: T:ScriptableFramework.IntResponse
    language: CSharp
    name:
      CSharp: IntResponse
      VB: IntResponse
    nameWithType:
      CSharp: IntResponse
      VB: IntResponse
    qualifiedName:
      CSharp: ScriptableFramework.IntResponse
      VB: ScriptableFramework.IntResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: IntResponse
      path: ''
      startLine: 1635
    summary: "\nA <code>UnityEvent</code> able to take a dynamic int.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class IntResponse : UnityEvent<int>
        VB: >-
          <Serializable>

          Public Class IntResponse

              Inherits UnityEvent(Of Integer)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.StringResponse
    commentId: T:ScriptableFramework.StringResponse
    language: CSharp
    name:
      CSharp: StringResponse
      VB: StringResponse
    nameWithType:
      CSharp: StringResponse
      VB: StringResponse
    qualifiedName:
      CSharp: ScriptableFramework.StringResponse
      VB: ScriptableFramework.StringResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StringResponse
      path: ''
      startLine: 1651
    summary: "\nA <code>UnityEvent</code> able to take a dynamic string.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class StringResponse : UnityEvent<string>
        VB: >-
          <Serializable>

          Public Class StringResponse

              Inherits UnityEvent(Of String)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Vector3Response
    commentId: T:ScriptableFramework.Vector3Response
    language: CSharp
    name:
      CSharp: Vector3Response
      VB: Vector3Response
    nameWithType:
      CSharp: Vector3Response
      VB: Vector3Response
    qualifiedName:
      CSharp: ScriptableFramework.Vector3Response
      VB: ScriptableFramework.Vector3Response
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Vector3Response
      path: ''
      startLine: 1665
    summary: "\nA <code>UnityEvent</code> able to take a dynamic Vector3.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Vector3Response : UnityEvent<Vector3>
        VB: >-
          <Serializable>

          Public Class Vector3Response

              Inherits UnityEvent(Of Vector3)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.RuntimeItem`1
    commentId: T:ScriptableFramework.RuntimeItem`1
    language: CSharp
    name:
      CSharp: RuntimeItem<T>
      VB: RuntimeItem(Of T)
    nameWithType:
      CSharp: RuntimeItem<T>
      VB: RuntimeItem(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.RuntimeItem<T>
      VB: ScriptableFramework.RuntimeItem(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: RuntimeItem
      path: ''
      startLine: 1682
    summary: "\nA generic RuntimeObject that stores a single object.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class RuntimeItem<T> : RuntimeObject'
        VB: >-
          Public MustInherit Class RuntimeItem(Of T)

              Inherits RuntimeObject
      typeParameters:
      - id: T
        description: The type of object to be stored
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    inheritedMembers:
    - ScriptableFramework.RuntimeObject.Clear
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.RuntimeItem`1.Reset
      commentId: M:ScriptableFramework.RuntimeItem`1.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: RuntimeItem<T>.Reset()
        VB: RuntimeItem(Of T).Reset()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeItem<T>.Reset()
        VB: ScriptableFramework.RuntimeItem(Of T).Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 1687
      summary: "\nCalls Clear ().\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.RuntimeItem`1.Reset*
      overridden: ScriptableFramework.RuntimeObject.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.GameObjectReference
    commentId: T:ScriptableFramework.GameObjectReference
    language: CSharp
    name:
      CSharp: GameObjectReference
      VB: GameObjectReference
    nameWithType:
      CSharp: GameObjectReference
      VB: GameObjectReference
    qualifiedName:
      CSharp: ScriptableFramework.GameObjectReference
      VB: ScriptableFramework.GameObjectReference
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: GameObjectReference
      path: ''
      startLine: 1702
    summary: "\nA <code>ReferenceItem</code> which can hold a GameObject.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameObjectReference : ReferenceItem<GameObject>'
        VB: >-
          Public Class GameObjectReference

              Inherits ReferenceItem(Of GameObject)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{GameObject}
    - ScriptableFramework.ReferenceItem{GameObject}
    inheritedMembers:
    - ScriptableFramework.ReferenceItem{GameObject}.reference
    - ScriptableFramework.ReferenceItem{GameObject}.Clear
    - ScriptableFramework.RuntimeItem{GameObject}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.MeshRendererReference
    commentId: T:ScriptableFramework.MeshRendererReference
    language: CSharp
    name:
      CSharp: MeshRendererReference
      VB: MeshRendererReference
    nameWithType:
      CSharp: MeshRendererReference
      VB: MeshRendererReference
    qualifiedName:
      CSharp: ScriptableFramework.MeshRendererReference
      VB: ScriptableFramework.MeshRendererReference
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: MeshRendererReference
      path: ''
      startLine: 1717
    summary: "\nA <code>ReferenceItem</code> which can hold a MeshRenderer.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MeshRendererReference : ReferenceItem<MeshRenderer>'
        VB: >-
          Public Class MeshRendererReference

              Inherits ReferenceItem(Of MeshRenderer)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{MeshRenderer}
    - ScriptableFramework.ReferenceItem{MeshRenderer}
    inheritedMembers:
    - ScriptableFramework.ReferenceItem{MeshRenderer}.reference
    - ScriptableFramework.ReferenceItem{MeshRenderer}.Clear
    - ScriptableFramework.RuntimeItem{MeshRenderer}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ReferenceItem`1
    commentId: T:ScriptableFramework.ReferenceItem`1
    language: CSharp
    name:
      CSharp: ReferenceItem<T>
      VB: ReferenceItem(Of T)
    nameWithType:
      CSharp: ReferenceItem<T>
      VB: ReferenceItem(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.ReferenceItem<T>
      VB: ScriptableFramework.ReferenceItem(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ReferenceItem
      path: ''
      startLine: 1736
    summary: "\nAn abstract generic RuntimeObject which encapsulates a given reference type.\nInherit from this class to create your own RuntimeReference sub class.\nGive your class the CreateAssetMenu attribute to serialize an instance of it.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ReferenceItem<T> : RuntimeItem<T> where T : class'
        VB: >-
          Public MustInherit Class ReferenceItem(Of T As Class)

              Inherits RuntimeItem(Of T)
      typeParameters:
      - id: T
        description: A class (reference type) object to be stored in this asset.
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{{T}}
    inheritedMembers:
    - ScriptableFramework.RuntimeItem{{T}}.Reset
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.ReferenceItem`1.reference
      commentId: F:ScriptableFramework.ReferenceItem`1.reference
      language: CSharp
      name:
        CSharp: reference
        VB: reference
      nameWithType:
        CSharp: ReferenceItem<T>.reference
        VB: ReferenceItem(Of T).reference
      qualifiedName:
        CSharp: ScriptableFramework.ReferenceItem<T>.reference
        VB: ScriptableFramework.ReferenceItem(Of T).reference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: reference
        path: ''
        startLine: 1742
      summary: "\nThe reference type obect being stored.\n"
      example: []
      syntax:
        content:
          CSharp: public T reference
          VB: Public reference As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ReferenceItem`1.Clear
      commentId: M:ScriptableFramework.ReferenceItem`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ReferenceItem<T>.Clear()
        VB: ReferenceItem(Of T).Clear()
      qualifiedName:
        CSharp: ScriptableFramework.ReferenceItem<T>.Clear()
        VB: ScriptableFramework.ReferenceItem(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 1748
      summary: "\nSet value to null rather can create a new instance to avoid issues like\ninstantiating new GameObjects.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.ReferenceItem`1.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.TransformReference
    commentId: T:ScriptableFramework.TransformReference
    language: CSharp
    name:
      CSharp: TransformReference
      VB: TransformReference
    nameWithType:
      CSharp: TransformReference
      VB: TransformReference
    qualifiedName:
      CSharp: ScriptableFramework.TransformReference
      VB: ScriptableFramework.TransformReference
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: TransformReference
      path: ''
      startLine: 1763
    summary: "\nA <code>ReferenceItem</code> which can hold a Transform.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TransformReference : ReferenceItem<Transform>'
        VB: >-
          Public Class TransformReference

              Inherits ReferenceItem(Of Transform)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{Transform}
    - ScriptableFramework.ReferenceItem{Transform}
    inheritedMembers:
    - ScriptableFramework.ReferenceItem{Transform}.reference
    - ScriptableFramework.ReferenceItem{Transform}.Clear
    - ScriptableFramework.RuntimeItem{Transform}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.GameObjectReferencePopulator
    commentId: T:ScriptableFramework.GameObjectReferencePopulator
    language: CSharp
    name:
      CSharp: GameObjectReferencePopulator
      VB: GameObjectReferencePopulator
    nameWithType:
      CSharp: GameObjectReferencePopulator
      VB: GameObjectReferencePopulator
    qualifiedName:
      CSharp: ScriptableFramework.GameObjectReferencePopulator
      VB: ScriptableFramework.GameObjectReferencePopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: GameObjectReferencePopulator
      path: ''
      startLine: 1778
    summary: "\nUtility component to populate a <code>GameObjectReference</code> with a GameObject in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameObjectReferencePopulator : MonoBehaviour'
        VB: >-
          Public Class GameObjectReferencePopulator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.GameObjectReferencePopulator.referenceItem
      commentId: F:ScriptableFramework.GameObjectReferencePopulator.referenceItem
      language: CSharp
      name:
        CSharp: referenceItem
        VB: referenceItem
      nameWithType:
        CSharp: GameObjectReferencePopulator.referenceItem
        VB: GameObjectReferencePopulator.referenceItem
      qualifiedName:
        CSharp: ScriptableFramework.GameObjectReferencePopulator.referenceItem
        VB: ScriptableFramework.GameObjectReferencePopulator.referenceItem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: referenceItem
        path: ''
        startLine: 1784
      summary: "\nThe <code>ReferenceItem</code> to be populated by this component.\n"
      example: []
      syntax:
        content:
          CSharp: public GameObjectReference referenceItem
          VB: Public referenceItem As GameObjectReference
        return:
          type: ScriptableFramework.GameObjectReference
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.GameObjectReferencePopulator.item
      commentId: F:ScriptableFramework.GameObjectReferencePopulator.item
      language: CSharp
      name:
        CSharp: item
        VB: item
      nameWithType:
        CSharp: GameObjectReferencePopulator.item
        VB: GameObjectReferencePopulator.item
      qualifiedName:
        CSharp: ScriptableFramework.GameObjectReferencePopulator.item
        VB: ScriptableFramework.GameObjectReferencePopulator.item
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: item
        path: ''
        startLine: 1789
      summary: "\nThe object to populate the <code>ReferenceItem</code> with.\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject item
          VB: Public item As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.MeshRendererReferencePopulator
    commentId: T:ScriptableFramework.MeshRendererReferencePopulator
    language: CSharp
    name:
      CSharp: MeshRendererReferencePopulator
      VB: MeshRendererReferencePopulator
    nameWithType:
      CSharp: MeshRendererReferencePopulator
      VB: MeshRendererReferencePopulator
    qualifiedName:
      CSharp: ScriptableFramework.MeshRendererReferencePopulator
      VB: ScriptableFramework.MeshRendererReferencePopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: MeshRendererReferencePopulator
      path: ''
      startLine: 1809
    summary: "\nUtility component to populate a <code>MeshRendererReference</code> with a MeshRenderer in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MeshRendererReferencePopulator : MonoBehaviour'
        VB: >-
          Public Class MeshRendererReferencePopulator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.MeshRendererReferencePopulator.referenceItem
      commentId: F:ScriptableFramework.MeshRendererReferencePopulator.referenceItem
      language: CSharp
      name:
        CSharp: referenceItem
        VB: referenceItem
      nameWithType:
        CSharp: MeshRendererReferencePopulator.referenceItem
        VB: MeshRendererReferencePopulator.referenceItem
      qualifiedName:
        CSharp: ScriptableFramework.MeshRendererReferencePopulator.referenceItem
        VB: ScriptableFramework.MeshRendererReferencePopulator.referenceItem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: referenceItem
        path: ''
        startLine: 1815
      summary: "\nThe <code>ReferenceItem</code> to be populated by this component.\n"
      example: []
      syntax:
        content:
          CSharp: public MeshRendererReference referenceItem
          VB: Public referenceItem As MeshRendererReference
        return:
          type: ScriptableFramework.MeshRendererReference
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.MeshRendererReferencePopulator.item
      commentId: F:ScriptableFramework.MeshRendererReferencePopulator.item
      language: CSharp
      name:
        CSharp: item
        VB: item
      nameWithType:
        CSharp: MeshRendererReferencePopulator.item
        VB: MeshRendererReferencePopulator.item
      qualifiedName:
        CSharp: ScriptableFramework.MeshRendererReferencePopulator.item
        VB: ScriptableFramework.MeshRendererReferencePopulator.item
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: item
        path: ''
        startLine: 1820
      summary: "\nThe object to populate the <code>ReferenceItem</code> with.\n"
      example: []
      syntax:
        content:
          CSharp: public MeshRenderer item
          VB: Public item As MeshRenderer
        return:
          type: Global.MeshRenderer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.TransformReferencePopulator
    commentId: T:ScriptableFramework.TransformReferencePopulator
    language: CSharp
    name:
      CSharp: TransformReferencePopulator
      VB: TransformReferencePopulator
    nameWithType:
      CSharp: TransformReferencePopulator
      VB: TransformReferencePopulator
    qualifiedName:
      CSharp: ScriptableFramework.TransformReferencePopulator
      VB: ScriptableFramework.TransformReferencePopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: TransformReferencePopulator
      path: ''
      startLine: 1840
    summary: "\nUtility component to populate a <code>TransformReference</code> with a Transform in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TransformReferencePopulator : MonoBehaviour'
        VB: >-
          Public Class TransformReferencePopulator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.TransformReferencePopulator.referenceItem
      commentId: F:ScriptableFramework.TransformReferencePopulator.referenceItem
      language: CSharp
      name:
        CSharp: referenceItem
        VB: referenceItem
      nameWithType:
        CSharp: TransformReferencePopulator.referenceItem
        VB: TransformReferencePopulator.referenceItem
      qualifiedName:
        CSharp: ScriptableFramework.TransformReferencePopulator.referenceItem
        VB: ScriptableFramework.TransformReferencePopulator.referenceItem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: referenceItem
        path: ''
        startLine: 1846
      summary: "\nThe <code>ReferenceItem</code> to be populated by this component.\n"
      example: []
      syntax:
        content:
          CSharp: public TransformReference referenceItem
          VB: Public referenceItem As TransformReference
        return:
          type: ScriptableFramework.TransformReference
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.TransformReferencePopulator.item
      commentId: F:ScriptableFramework.TransformReferencePopulator.item
      language: CSharp
      name:
        CSharp: item
        VB: item
      nameWithType:
        CSharp: TransformReferencePopulator.item
        VB: TransformReferencePopulator.item
      qualifiedName:
        CSharp: ScriptableFramework.TransformReferencePopulator.item
        VB: ScriptableFramework.TransformReferencePopulator.item
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: item
        path: ''
        startLine: 1851
      summary: "\nThe object to populate the <code>ReferenceItem</code> with.\n"
      example: []
      syntax:
        content:
          CSharp: public Transform item
          VB: Public item As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.BoolValue
    commentId: T:ScriptableFramework.BoolValue
    language: CSharp
    name:
      CSharp: BoolValue
      VB: BoolValue
    nameWithType:
      CSharp: BoolValue
      VB: BoolValue
    qualifiedName:
      CSharp: ScriptableFramework.BoolValue
      VB: ScriptableFramework.BoolValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoolValue
      path: ''
      startLine: 1871
    summary: "\nA <code>ValueItem</code> which can hold a bool.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoolValue : ValueItem<bool>'
        VB: >-
          Public Class BoolValue

              Inherits ValueItem(Of Boolean)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{System.Boolean}
    - ScriptableFramework.ValueItem{System.Boolean}
    inheritedMembers:
    - ScriptableFramework.ValueItem{System.Boolean}.value
    - ScriptableFramework.ValueItem{System.Boolean}.customDefaultValue
    - ScriptableFramework.ValueItem{System.Boolean}.useCustomDefaultValue
    - ScriptableFramework.ValueItem{System.Boolean}.Clear
    - ScriptableFramework.ValueItem{System.Boolean}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ColorValue
    commentId: T:ScriptableFramework.ColorValue
    language: CSharp
    name:
      CSharp: ColorValue
      VB: ColorValue
    nameWithType:
      CSharp: ColorValue
      VB: ColorValue
    qualifiedName:
      CSharp: ScriptableFramework.ColorValue
      VB: ScriptableFramework.ColorValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ColorValue
      path: ''
      startLine: 1887
    summary: "\nA <code>ValueItem</code> which can hold a Color.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColorValue : ValueItem<Color>'
        VB: >-
          Public Class ColorValue

              Inherits ValueItem(Of Color)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{Color}
    - ScriptableFramework.ValueItem{Color}
    inheritedMembers:
    - ScriptableFramework.ValueItem{Color}.value
    - ScriptableFramework.ValueItem{Color}.customDefaultValue
    - ScriptableFramework.ValueItem{Color}.useCustomDefaultValue
    - ScriptableFramework.ValueItem{Color}.Clear
    - ScriptableFramework.ValueItem{Color}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.FloatValue
    commentId: T:ScriptableFramework.FloatValue
    language: CSharp
    name:
      CSharp: FloatValue
      VB: FloatValue
    nameWithType:
      CSharp: FloatValue
      VB: FloatValue
    qualifiedName:
      CSharp: ScriptableFramework.FloatValue
      VB: ScriptableFramework.FloatValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: FloatValue
      path: ''
      startLine: 1903
    summary: "\nA <code>ValueItem</code> which can hold a float.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FloatValue : ValueItem<float>'
        VB: >-
          Public Class FloatValue

              Inherits ValueItem(Of Single)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{System.Single}
    - ScriptableFramework.ValueItem{System.Single}
    inheritedMembers:
    - ScriptableFramework.ValueItem{System.Single}.value
    - ScriptableFramework.ValueItem{System.Single}.customDefaultValue
    - ScriptableFramework.ValueItem{System.Single}.useCustomDefaultValue
    - ScriptableFramework.ValueItem{System.Single}.Clear
    - ScriptableFramework.ValueItem{System.Single}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.IntValue
    commentId: T:ScriptableFramework.IntValue
    language: CSharp
    name:
      CSharp: IntValue
      VB: IntValue
    nameWithType:
      CSharp: IntValue
      VB: IntValue
    qualifiedName:
      CSharp: ScriptableFramework.IntValue
      VB: ScriptableFramework.IntValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: IntValue
      path: ''
      startLine: 1919
    summary: "\nA <code>ValueItem</code> which can hold a int.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IntValue : ValueItem<int>'
        VB: >-
          Public Class IntValue

              Inherits ValueItem(Of Integer)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{System.Int32}
    - ScriptableFramework.ValueItem{System.Int32}
    inheritedMembers:
    - ScriptableFramework.ValueItem{System.Int32}.value
    - ScriptableFramework.ValueItem{System.Int32}.customDefaultValue
    - ScriptableFramework.ValueItem{System.Int32}.useCustomDefaultValue
    - ScriptableFramework.ValueItem{System.Int32}.Clear
    - ScriptableFramework.ValueItem{System.Int32}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.StringValue
    commentId: T:ScriptableFramework.StringValue
    language: CSharp
    name:
      CSharp: StringValue
      VB: StringValue
    nameWithType:
      CSharp: StringValue
      VB: StringValue
    qualifiedName:
      CSharp: ScriptableFramework.StringValue
      VB: ScriptableFramework.StringValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StringValue
      path: ''
      startLine: 1935
    summary: "\nA <code>ValueItem</code> which can hold a DataString which can be used in place of a regular String.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StringValue : ValueItem<DataString>'
        VB: >-
          Public Class StringValue

              Inherits ValueItem(Of DataString)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{ScriptableFramework.DataString}
    - ScriptableFramework.ValueItem{ScriptableFramework.DataString}
    inheritedMembers:
    - ScriptableFramework.ValueItem{ScriptableFramework.DataString}.value
    - ScriptableFramework.ValueItem{ScriptableFramework.DataString}.customDefaultValue
    - ScriptableFramework.ValueItem{ScriptableFramework.DataString}.useCustomDefaultValue
    - ScriptableFramework.ValueItem{ScriptableFramework.DataString}.Clear
    - ScriptableFramework.ValueItem{ScriptableFramework.DataString}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ValueItem`1
    commentId: T:ScriptableFramework.ValueItem`1
    language: CSharp
    name:
      CSharp: ValueItem<T>
      VB: ValueItem(Of T)
    nameWithType:
      CSharp: ValueItem<T>
      VB: ValueItem(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.ValueItem<T>
      VB: ScriptableFramework.ValueItem(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ValueItem
      path: ''
      startLine: 1956
    summary: "\nAn abstract generic RuntimeObject which encapsulates a given value type.\nInherit from this class to create your own RuntimeValue sub class.\nGive your class the CreateAssetMenu attribute to serialize an instance of it.\nA default value can be optionally set in the inspector.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ValueItem<T> : RuntimeItem<T> where T : struct'
        VB: >-
          Public MustInherit Class ValueItem(Of T As Structure)

              Inherits RuntimeItem(Of T)
      typeParameters:
      - id: T
        description: A <code>struct</code> (value type) object to be stored in this asset.
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{{T}}
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.ValueItem`1.value
      commentId: F:ScriptableFramework.ValueItem`1.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: ValueItem<T>.value
        VB: ValueItem(Of T).value
      qualifiedName:
        CSharp: ScriptableFramework.ValueItem<T>.value
        VB: ScriptableFramework.ValueItem(Of T).value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: value
        path: ''
        startLine: 1962
      summary: "\nThe value type object being stored.\n"
      example: []
      syntax:
        content:
          CSharp: public T value
          VB: Public value As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ValueItem`1.customDefaultValue
      commentId: F:ScriptableFramework.ValueItem`1.customDefaultValue
      language: CSharp
      name:
        CSharp: customDefaultValue
        VB: customDefaultValue
      nameWithType:
        CSharp: ValueItem<T>.customDefaultValue
        VB: ValueItem(Of T).customDefaultValue
      qualifiedName:
        CSharp: ScriptableFramework.ValueItem<T>.customDefaultValue
        VB: ScriptableFramework.ValueItem(Of T).customDefaultValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: customDefaultValue
        path: ''
        startLine: 1970
      summary: "\nA default value for this object to initialise to if, in the inspector, \n<code>useCustomDefaultValue</code> was set to true.\n"
      example: []
      syntax:
        content:
          CSharp: public T customDefaultValue
          VB: Public customDefaultValue As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
      commentId: F:ScriptableFramework.ValueItem`1.useCustomDefaultValue
      language: CSharp
      name:
        CSharp: useCustomDefaultValue
        VB: useCustomDefaultValue
      nameWithType:
        CSharp: ValueItem<T>.useCustomDefaultValue
        VB: ValueItem(Of T).useCustomDefaultValue
      qualifiedName:
        CSharp: ScriptableFramework.ValueItem<T>.useCustomDefaultValue
        VB: ScriptableFramework.ValueItem(Of T).useCustomDefaultValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: useCustomDefaultValue
        path: ''
        startLine: 1975
      summary: "\nIf true, the <code>value</code> property will initialise to the user defined default value.\n"
      example: []
      syntax:
        content:
          CSharp: public bool useCustomDefaultValue
          VB: Public useCustomDefaultValue As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ValueItem`1.Clear
      commentId: M:ScriptableFramework.ValueItem`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ValueItem<T>.Clear()
        VB: ValueItem(Of T).Clear()
      qualifiedName:
        CSharp: ScriptableFramework.ValueItem<T>.Clear()
        VB: ScriptableFramework.ValueItem(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 1980
      summary: "\nCall the constructor of T and set value as the result.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.ValueItem`1.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.ValueItem`1.Reset
      commentId: M:ScriptableFramework.ValueItem`1.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: ValueItem<T>.Reset()
        VB: ValueItem(Of T).Reset()
      qualifiedName:
        CSharp: ScriptableFramework.ValueItem<T>.Reset()
        VB: ScriptableFramework.ValueItem(Of T).Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 1989
      summary: "\nIf <code>useCustomDefaultValue</code> was set to true, the <code>value</code> property will be set to\nthe user defined default. Otherwise, this will simply call <code>Clear ()</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.ValueItem`1.Reset*
      overridden: ScriptableFramework.RuntimeItem{{T}}.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.Vector3Value
    commentId: T:ScriptableFramework.Vector3Value
    language: CSharp
    name:
      CSharp: Vector3Value
      VB: Vector3Value
    nameWithType:
      CSharp: Vector3Value
      VB: Vector3Value
    qualifiedName:
      CSharp: ScriptableFramework.Vector3Value
      VB: ScriptableFramework.Vector3Value
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Vector3Value
      path: ''
      startLine: 2008
    summary: "\nA <code>ValueItem</code> which can hold a Vector3.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Vector3Value : ValueItem<Vector3>'
        VB: >-
          Public Class Vector3Value

              Inherits ValueItem(Of Vector3)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeItem{Vector3}
    - ScriptableFramework.ValueItem{Vector3}
    inheritedMembers:
    - ScriptableFramework.ValueItem{Vector3}.value
    - ScriptableFramework.ValueItem{Vector3}.customDefaultValue
    - ScriptableFramework.ValueItem{Vector3}.useCustomDefaultValue
    - ScriptableFramework.ValueItem{Vector3}.Clear
    - ScriptableFramework.ValueItem{Vector3}.Reset
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.RuntimeList`1
    commentId: T:ScriptableFramework.RuntimeList`1
    language: CSharp
    name:
      CSharp: RuntimeList<T>
      VB: RuntimeList(Of T)
    nameWithType:
      CSharp: RuntimeList<T>
      VB: RuntimeList(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.RuntimeList<T>
      VB: ScriptableFramework.RuntimeList(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: RuntimeList
      path: ''
      startLine: 2029
    summary: "\nAn abstract generic RuntimeObject which encapsulates the List class.\nInherit from this class to create your own RuntimeList sub class.\nGive your class the CreateAssetMenu attribute to serialize an instance of it.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class RuntimeList<T> : RuntimeObject, IList<T>'
        VB: >-
          Public MustInherit Class RuntimeList(Of T)

              Inherits RuntimeObject

              Implements IList(Of T)
      typeParameters:
      - id: T
        description: >-
          The type that will be stored in this object&apos;s internal

          generic <code>List</code>
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.RuntimeList`1.items
      commentId: F:ScriptableFramework.RuntimeList`1.items
      language: CSharp
      name:
        CSharp: items
        VB: items
      nameWithType:
        CSharp: RuntimeList<T>.items
        VB: RuntimeList(Of T).items
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.items
        VB: ScriptableFramework.RuntimeList(Of T).items
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: items
        path: ''
        startLine: 2037
      summary: "\nA list of the elements in this object to be accessed externally via square bracket operator.\n"
      example: []
      syntax:
        content:
          CSharp: protected List<T> items
          VB: Protected items As List(Of T)
        return:
          type: Global.List{{T}}
          description: The internal list that actually contains the elements of this object.
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
      commentId: P:ScriptableFramework.RuntimeList`1.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: RuntimeList<T>.Item[Int32]
        VB: RuntimeList(Of T).Item(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Item[System.Int32]
        VB: ScriptableFramework.RuntimeList(Of T).Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: this[]
        path: ''
        startLine: 2047
      syntax:
        content:
          CSharp: public T this[int index] { get; set; }
          VB: Public Property Item(index As Integer) As T
        parameters:
        - id: index
          type: System.Int32
        return:
          type: '{T}'
      overload: ScriptableFramework.RuntimeList`1.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ScriptableFramework.RuntimeList`1.Count
      commentId: P:ScriptableFramework.RuntimeList`1.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: RuntimeList<T>.Count
        VB: RuntimeList(Of T).Count
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Count
        VB: ScriptableFramework.RuntimeList(Of T).Count
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Count
        path: ''
        startLine: 2062
      summary: "\nReturns the number of elements currently in the list.\n"
      example: []
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ScriptableFramework.RuntimeList`1.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ScriptableFramework.RuntimeList`1.IsReadOnly
      commentId: P:ScriptableFramework.RuntimeList`1.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: RuntimeList<T>.IsReadOnly
        VB: RuntimeList(Of T).IsReadOnly
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.IsReadOnly
        VB: ScriptableFramework.RuntimeList(Of T).IsReadOnly
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: IsReadOnly
        path: ''
        startLine: 2067
      summary: "\nWill always return false.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ScriptableFramework.RuntimeList`1.IsReadOnly*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ScriptableFramework.RuntimeList`1.Add(`0)
      commentId: M:ScriptableFramework.RuntimeList`1.Add(`0)
      language: CSharp
      name:
        CSharp: Add(T)
        VB: Add(T)
      nameWithType:
        CSharp: RuntimeList<T>.Add(T)
        VB: RuntimeList(Of T).Add(T)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Add(T)
        VB: ScriptableFramework.RuntimeList(Of T).Add(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Add
        path: ''
        startLine: 2073
      summary: "\nAppend an object to the end of this list.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Add(T item)
          VB: Public Overridable Sub Add(item As T)
        parameters:
        - id: item
          type: '{T}'
          description: The object to be added as an element.
      overload: ScriptableFramework.RuntimeList`1.Add*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
      commentId: M:ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
      language: CSharp
      name:
        CSharp: AddRange(IEnumerable<T>)
        VB: AddRange(IEnumerable(Of T))
      nameWithType:
        CSharp: RuntimeList<T>.AddRange(IEnumerable<T>)
        VB: RuntimeList(Of T).AddRange(IEnumerable(Of T))
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.AddRange(IEnumerable<T>)
        VB: ScriptableFramework.RuntimeList(Of T).AddRange(IEnumerable(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: AddRange
        path: ''
        startLine: 2082
      summary: "\nAppend objects to the end of this list.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void AddRange(IEnumerable<T> items)
          VB: Public Overridable Sub AddRange(items As IEnumerable(Of T))
        parameters:
        - id: items
          type: Global.IEnumerable{{T}}
          description: A collection of objects to be appended to this list.
      overload: ScriptableFramework.RuntimeList`1.AddRange*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
      commentId: M:ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
      language: CSharp
      name:
        CSharp: Initialise(IEnumerable<T>)
        VB: Initialise(IEnumerable(Of T))
      nameWithType:
        CSharp: RuntimeList<T>.Initialise(IEnumerable<T>)
        VB: RuntimeList(Of T).Initialise(IEnumerable(Of T))
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Initialise(IEnumerable<T>)
        VB: ScriptableFramework.RuntimeList(Of T).Initialise(IEnumerable(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Initialise
        path: ''
        startLine: 2091
      summary: "\nShorthand for calling <code>Clear ()</code> and then <code>AddRange (items)</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialise(IEnumerable<T> items)
          VB: Public Overridable Sub Initialise(items As IEnumerable(Of T))
        parameters:
        - id: items
          type: Global.IEnumerable{{T}}
          description: A collection of objects to be appended to this list.
      overload: ScriptableFramework.RuntimeList`1.Initialise*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.Remove(`0)
      commentId: M:ScriptableFramework.RuntimeList`1.Remove(`0)
      language: CSharp
      name:
        CSharp: Remove(T)
        VB: Remove(T)
      nameWithType:
        CSharp: RuntimeList<T>.Remove(T)
        VB: RuntimeList(Of T).Remove(T)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Remove(T)
        VB: ScriptableFramework.RuntimeList(Of T).Remove(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Remove
        path: ''
        startLine: 2102
      summary: "\nIf the item exists as an element in this list, remove it and shift the index of the\nelements after it down by one.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Remove(T item)
          VB: Public Overridable Sub Remove(item As T)
        parameters:
        - id: item
          type: '{T}'
          description: The element to remove.
      overload: ScriptableFramework.RuntimeList`1.Remove*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
      commentId: M:ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
      language: CSharp
      name:
        CSharp: GetItem(Int32)
        VB: GetItem(Int32)
      nameWithType:
        CSharp: RuntimeList<T>.GetItem(Int32)
        VB: RuntimeList(Of T).GetItem(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.GetItem(System.Int32)
        VB: ScriptableFramework.RuntimeList(Of T).GetItem(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: GetItem
        path: ''
        startLine: 2112
      summary: "\nRead an element at a given index from this list. Called when the list is read from via square brackets.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual T GetItem(int index)
          VB: Protected Overridable Function GetItem(index As Integer) As T
        parameters:
        - id: index
          type: System.Int32
          description: The index of the element to be returned.
        return:
          type: '{T}'
          description: The element object at the given index.
      overload: ScriptableFramework.RuntimeList`1.GetItem*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
      commentId: M:ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
      language: CSharp
      name:
        CSharp: SetItem(Int32, T)
        VB: SetItem(Int32, T)
      nameWithType:
        CSharp: RuntimeList<T>.SetItem(Int32, T)
        VB: RuntimeList(Of T).SetItem(Int32, T)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.SetItem(System.Int32, T)
        VB: ScriptableFramework.RuntimeList(Of T).SetItem(System.Int32, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: SetItem
        path: ''
        startLine: 2123
      summary: "\nPass an object back into the list and raise an event if an event was set \nin the inspector. Called when the list is written to via square brackets.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SetItem(int index, T newItem)
          VB: Protected Overridable Sub SetItem(index As Integer, newItem As T)
        parameters:
        - id: index
          type: System.Int32
          description: The index of the element being written to.
        - id: newItem
          type: '{T}'
          description: The new value to set in place of the previous value in the given index.
      overload: ScriptableFramework.RuntimeList`1.SetItem*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.Clear
      commentId: M:ScriptableFramework.RuntimeList`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: RuntimeList<T>.Clear()
        VB: RuntimeList(Of T).Clear()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Clear()
        VB: ScriptableFramework.RuntimeList(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 2131
      summary: "\nEmpty this list of all elements.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.RuntimeList`1.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.RuntimeList`1.Reset
      commentId: M:ScriptableFramework.RuntimeList`1.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: RuntimeList<T>.Reset()
        VB: RuntimeList(Of T).Reset()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Reset()
        VB: ScriptableFramework.RuntimeList(Of T).Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 2139
      summary: "\nCalls <code>Clear ()</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.RuntimeList`1.Reset*
      overridden: ScriptableFramework.RuntimeObject.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
      commentId: M:ScriptableFramework.RuntimeList`1.IndexOf(`0)
      language: CSharp
      name:
        CSharp: IndexOf(T)
        VB: IndexOf(T)
      nameWithType:
        CSharp: RuntimeList<T>.IndexOf(T)
        VB: RuntimeList(Of T).IndexOf(T)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.IndexOf(T)
        VB: ScriptableFramework.RuntimeList(Of T).IndexOf(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: IndexOf
        path: ''
        startLine: 2149
      summary: "\nGet the index of a given item if it exists as an element in this list.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual int IndexOf(T item)
          VB: Public Overridable Function IndexOf(item As T) As Integer
        parameters:
        - id: item
          type: '{T}'
          description: ''
        return:
          type: System.Int32
          description: ''
      overload: ScriptableFramework.RuntimeList`1.IndexOf*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
      commentId: M:ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
      language: CSharp
      name:
        CSharp: Insert(Int32, T)
        VB: Insert(Int32, T)
      nameWithType:
        CSharp: RuntimeList<T>.Insert(Int32, T)
        VB: RuntimeList(Of T).Insert(Int32, T)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Insert(System.Int32, T)
        VB: ScriptableFramework.RuntimeList(Of T).Insert(System.Int32, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Insert
        path: ''
        startLine: 2154
      syntax:
        content:
          CSharp: public virtual void Insert(int index, T item)
          VB: Public Overridable Sub Insert(index As Integer, item As T)
        parameters:
        - id: index
          type: System.Int32
        - id: item
          type: '{T}'
      overload: ScriptableFramework.RuntimeList`1.Insert*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
      commentId: M:ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveAt(Int32)
        VB: RemoveAt(Int32)
      nameWithType:
        CSharp: RuntimeList<T>.RemoveAt(Int32)
        VB: RuntimeList(Of T).RemoveAt(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.RemoveAt(System.Int32)
        VB: ScriptableFramework.RuntimeList(Of T).RemoveAt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RemoveAt
        path: ''
        startLine: 2160
      syntax:
        content:
          CSharp: public virtual void RemoveAt(int index)
          VB: Public Overridable Sub RemoveAt(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: ScriptableFramework.RuntimeList`1.RemoveAt*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.Contains(`0)
      commentId: M:ScriptableFramework.RuntimeList`1.Contains(`0)
      language: CSharp
      name:
        CSharp: Contains(T)
        VB: Contains(T)
      nameWithType:
        CSharp: RuntimeList<T>.Contains(T)
        VB: RuntimeList(Of T).Contains(T)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.Contains(T)
        VB: ScriptableFramework.RuntimeList(Of T).Contains(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Contains
        path: ''
        startLine: 2166
      syntax:
        content:
          CSharp: public virtual bool Contains(T item)
          VB: Public Overridable Function Contains(item As T) As Boolean
        parameters:
        - id: item
          type: '{T}'
        return:
          type: System.Boolean
      overload: ScriptableFramework.RuntimeList`1.Contains*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
      commentId: M:ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(T[], Int32)
        VB: CopyTo(T(), Int32)
      nameWithType:
        CSharp: RuntimeList<T>.CopyTo(T[], Int32)
        VB: RuntimeList(Of T).CopyTo(T(), Int32)
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.CopyTo(T[], System.Int32)
        VB: ScriptableFramework.RuntimeList(Of T).CopyTo(T(), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CopyTo
        path: ''
        startLine: 2172
      syntax:
        content:
          CSharp: public virtual void CopyTo(T[] array, int arrayIndex)
          VB: Public Overridable Sub CopyTo(array As T(), arrayIndex As Integer)
        parameters:
        - id: array
          type: '{T}[]'
        - id: arrayIndex
          type: System.Int32
      overload: ScriptableFramework.RuntimeList`1.CopyTo*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.GetEnumerator
      commentId: M:ScriptableFramework.RuntimeList`1.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: RuntimeList<T>.GetEnumerator()
        VB: RuntimeList(Of T).GetEnumerator()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.GetEnumerator()
        VB: ScriptableFramework.RuntimeList(Of T).GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: GetEnumerator
        path: ''
        startLine: 2184
      syntax:
        content:
          CSharp: public IEnumerator<T> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of T)
        return:
          type: Global.IEnumerator{{T}}
      overload: ScriptableFramework.RuntimeList`1.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.RuntimeList`1.ToArray
      commentId: M:ScriptableFramework.RuntimeList`1.ToArray
      language: CSharp
      name:
        CSharp: ToArray()
        VB: ToArray()
      nameWithType:
        CSharp: RuntimeList<T>.ToArray()
        VB: RuntimeList(Of T).ToArray()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.ToArray()
        VB: ScriptableFramework.RuntimeList(Of T).ToArray()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToArray
        path: ''
        startLine: 2196
      syntax:
        content:
          CSharp: public virtual T[] ToArray()
          VB: Public Overridable Function ToArray As T()
        return:
          type: '{T}[]'
      overload: ScriptableFramework.RuntimeList`1.ToArray*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.RuntimeList`1.ToList
      commentId: M:ScriptableFramework.RuntimeList`1.ToList
      language: CSharp
      name:
        CSharp: ToList()
        VB: ToList()
      nameWithType:
        CSharp: RuntimeList<T>.ToList()
        VB: RuntimeList(Of T).ToList()
      qualifiedName:
        CSharp: ScriptableFramework.RuntimeList<T>.ToList()
        VB: ScriptableFramework.RuntimeList(Of T).ToList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToList
        path: ''
        startLine: 2201
      syntax:
        content:
          CSharp: public virtual List<T> ToList()
          VB: Public Overridable Function ToList As List(Of T)
        return:
          type: Global.List{{T}}
      overload: ScriptableFramework.RuntimeList`1.ToList*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: ScriptableFramework.GameObjectList
    commentId: T:ScriptableFramework.GameObjectList
    language: CSharp
    name:
      CSharp: GameObjectList
      VB: GameObjectList
    nameWithType:
      CSharp: GameObjectList
      VB: GameObjectList
    qualifiedName:
      CSharp: ScriptableFramework.GameObjectList
      VB: ScriptableFramework.GameObjectList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: GameObjectList
      path: ''
      startLine: 2217
    summary: "\nA <code>ReferenceList</code> which can hold a list of GameObjects.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameObjectList : ReferenceList<GameObject>, IList<GameObject>'
        VB: >-
          Public Class GameObjectList

              Inherits ReferenceList(Of GameObject)

              Implements IList(Of GameObject)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{GameObject}
    - ScriptableFramework.ReferenceList{GameObject}
    inheritedMembers:
    - ScriptableFramework.RuntimeList{GameObject}.items
    - ScriptableFramework.RuntimeList{GameObject}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{GameObject}.Count
    - ScriptableFramework.RuntimeList{GameObject}.IsReadOnly
    - ScriptableFramework.RuntimeList{GameObject}.Add(GameObject)
    - ScriptableFramework.RuntimeList{GameObject}.AddRange(IEnumerable{GameObject})
    - ScriptableFramework.RuntimeList{GameObject}.Initialise(IEnumerable{GameObject})
    - ScriptableFramework.RuntimeList{GameObject}.Remove(GameObject)
    - ScriptableFramework.RuntimeList{GameObject}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{GameObject}.SetItem(System.Int32,GameObject)
    - ScriptableFramework.RuntimeList{GameObject}.Clear
    - ScriptableFramework.RuntimeList{GameObject}.Reset
    - ScriptableFramework.RuntimeList{GameObject}.IndexOf(GameObject)
    - ScriptableFramework.RuntimeList{GameObject}.Insert(System.Int32,GameObject)
    - ScriptableFramework.RuntimeList{GameObject}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{GameObject}.Contains(GameObject)
    - ScriptableFramework.RuntimeList{GameObject}.CopyTo(GameObject[],System.Int32)
    - ScriptableFramework.RuntimeList{GameObject}.GetEnumerator
    - ScriptableFramework.RuntimeList{GameObject}.ToArray
    - ScriptableFramework.RuntimeList{GameObject}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.MeshRendererList
    commentId: T:ScriptableFramework.MeshRendererList
    language: CSharp
    name:
      CSharp: MeshRendererList
      VB: MeshRendererList
    nameWithType:
      CSharp: MeshRendererList
      VB: MeshRendererList
    qualifiedName:
      CSharp: ScriptableFramework.MeshRendererList
      VB: ScriptableFramework.MeshRendererList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: MeshRendererList
      path: ''
      startLine: 2232
    summary: "\nA <code>ReferenceList</code> which can hold a list of MeshRenderers.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MeshRendererList : ReferenceList<MeshRenderer>, IList<MeshRenderer>'
        VB: >-
          Public Class MeshRendererList

              Inherits ReferenceList(Of MeshRenderer)

              Implements IList(Of MeshRenderer)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{MeshRenderer}
    - ScriptableFramework.ReferenceList{MeshRenderer}
    inheritedMembers:
    - ScriptableFramework.RuntimeList{MeshRenderer}.items
    - ScriptableFramework.RuntimeList{MeshRenderer}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{MeshRenderer}.Count
    - ScriptableFramework.RuntimeList{MeshRenderer}.IsReadOnly
    - ScriptableFramework.RuntimeList{MeshRenderer}.Add(MeshRenderer)
    - ScriptableFramework.RuntimeList{MeshRenderer}.AddRange(IEnumerable{MeshRenderer})
    - ScriptableFramework.RuntimeList{MeshRenderer}.Initialise(IEnumerable{MeshRenderer})
    - ScriptableFramework.RuntimeList{MeshRenderer}.Remove(MeshRenderer)
    - ScriptableFramework.RuntimeList{MeshRenderer}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{MeshRenderer}.SetItem(System.Int32,MeshRenderer)
    - ScriptableFramework.RuntimeList{MeshRenderer}.Clear
    - ScriptableFramework.RuntimeList{MeshRenderer}.Reset
    - ScriptableFramework.RuntimeList{MeshRenderer}.IndexOf(MeshRenderer)
    - ScriptableFramework.RuntimeList{MeshRenderer}.Insert(System.Int32,MeshRenderer)
    - ScriptableFramework.RuntimeList{MeshRenderer}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{MeshRenderer}.Contains(MeshRenderer)
    - ScriptableFramework.RuntimeList{MeshRenderer}.CopyTo(MeshRenderer[],System.Int32)
    - ScriptableFramework.RuntimeList{MeshRenderer}.GetEnumerator
    - ScriptableFramework.RuntimeList{MeshRenderer}.ToArray
    - ScriptableFramework.RuntimeList{MeshRenderer}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ReferenceList`1
    commentId: T:ScriptableFramework.ReferenceList`1
    language: CSharp
    name:
      CSharp: ReferenceList<T>
      VB: ReferenceList(Of T)
    nameWithType:
      CSharp: ReferenceList<T>
      VB: ReferenceList(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.ReferenceList<T>
      VB: ScriptableFramework.ReferenceList(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ReferenceList
      path: ''
      startLine: 2250
    summary: "\nA constrained version of RuntimeList that can only be used on reference types.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ReferenceList<T> : RuntimeList<T>, IList<T> where T : class'
        VB: >-
          Public MustInherit Class ReferenceList(Of T As Class)

              Inherits RuntimeList(Of T)

              Implements IList(Of T)
      typeParameters:
      - id: T
        description: Must be at least a class NOT a struct.
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{{T}}
    inheritedMembers:
    - ScriptableFramework.RuntimeList{{T}}.items
    - ScriptableFramework.RuntimeList{{T}}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.Count
    - ScriptableFramework.RuntimeList{{T}}.IsReadOnly
    - ScriptableFramework.RuntimeList{{T}}.Add({T})
    - ScriptableFramework.RuntimeList{{T}}.AddRange(IEnumerable{{T}})
    - ScriptableFramework.RuntimeList{{T}}.Initialise(IEnumerable{{T}})
    - ScriptableFramework.RuntimeList{{T}}.Remove({T})
    - ScriptableFramework.RuntimeList{{T}}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.SetItem(System.Int32,{T})
    - ScriptableFramework.RuntimeList{{T}}.Clear
    - ScriptableFramework.RuntimeList{{T}}.Reset
    - ScriptableFramework.RuntimeList{{T}}.IndexOf({T})
    - ScriptableFramework.RuntimeList{{T}}.Insert(System.Int32,{T})
    - ScriptableFramework.RuntimeList{{T}}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.Contains({T})
    - ScriptableFramework.RuntimeList{{T}}.CopyTo({T}[],System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.GetEnumerator
    - ScriptableFramework.RuntimeList{{T}}.ToArray
    - ScriptableFramework.RuntimeList{{T}}.ToList
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: ScriptableFramework.TransformList
    commentId: T:ScriptableFramework.TransformList
    language: CSharp
    name:
      CSharp: TransformList
      VB: TransformList
    nameWithType:
      CSharp: TransformList
      VB: TransformList
    qualifiedName:
      CSharp: ScriptableFramework.TransformList
      VB: ScriptableFramework.TransformList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: TransformList
      path: ''
      startLine: 2264
    summary: "\nA <code>ReferenceList</code> which can hold a list of Transforms.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TransformList : ReferenceList<Transform>, IList<Transform>'
        VB: >-
          Public Class TransformList

              Inherits ReferenceList(Of Transform)

              Implements IList(Of Transform)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{Transform}
    - ScriptableFramework.ReferenceList{Transform}
    inheritedMembers:
    - ScriptableFramework.RuntimeList{Transform}.items
    - ScriptableFramework.RuntimeList{Transform}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{Transform}.Count
    - ScriptableFramework.RuntimeList{Transform}.IsReadOnly
    - ScriptableFramework.RuntimeList{Transform}.Add(Transform)
    - ScriptableFramework.RuntimeList{Transform}.AddRange(IEnumerable{Transform})
    - ScriptableFramework.RuntimeList{Transform}.Initialise(IEnumerable{Transform})
    - ScriptableFramework.RuntimeList{Transform}.Remove(Transform)
    - ScriptableFramework.RuntimeList{Transform}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{Transform}.SetItem(System.Int32,Transform)
    - ScriptableFramework.RuntimeList{Transform}.Clear
    - ScriptableFramework.RuntimeList{Transform}.Reset
    - ScriptableFramework.RuntimeList{Transform}.IndexOf(Transform)
    - ScriptableFramework.RuntimeList{Transform}.Insert(System.Int32,Transform)
    - ScriptableFramework.RuntimeList{Transform}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{Transform}.Contains(Transform)
    - ScriptableFramework.RuntimeList{Transform}.CopyTo(Transform[],System.Int32)
    - ScriptableFramework.RuntimeList{Transform}.GetEnumerator
    - ScriptableFramework.RuntimeList{Transform}.ToArray
    - ScriptableFramework.RuntimeList{Transform}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.GameObjectListPopulator
    commentId: T:ScriptableFramework.GameObjectListPopulator
    language: CSharp
    name:
      CSharp: GameObjectListPopulator
      VB: GameObjectListPopulator
    nameWithType:
      CSharp: GameObjectListPopulator
      VB: GameObjectListPopulator
    qualifiedName:
      CSharp: ScriptableFramework.GameObjectListPopulator
      VB: ScriptableFramework.GameObjectListPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: GameObjectListPopulator
      path: ''
      startLine: 2279
    summary: "\nUtility component to populate a <code>GameObjectList</code> with GameObjects in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameObjectListPopulator : MonoBehaviour'
        VB: >-
          Public Class GameObjectListPopulator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.GameObjectListPopulator.referenceList
      commentId: F:ScriptableFramework.GameObjectListPopulator.referenceList
      language: CSharp
      name:
        CSharp: referenceList
        VB: referenceList
      nameWithType:
        CSharp: GameObjectListPopulator.referenceList
        VB: GameObjectListPopulator.referenceList
      qualifiedName:
        CSharp: ScriptableFramework.GameObjectListPopulator.referenceList
        VB: ScriptableFramework.GameObjectListPopulator.referenceList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: referenceList
        path: ''
        startLine: 2285
      summary: "\nThe <code>ReferenceList</code> to be populated by this component.\n"
      example: []
      syntax:
        content:
          CSharp: public GameObjectList referenceList
          VB: Public referenceList As GameObjectList
        return:
          type: ScriptableFramework.GameObjectList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.GameObjectListPopulator.items
      commentId: F:ScriptableFramework.GameObjectListPopulator.items
      language: CSharp
      name:
        CSharp: items
        VB: items
      nameWithType:
        CSharp: GameObjectListPopulator.items
        VB: GameObjectListPopulator.items
      qualifiedName:
        CSharp: ScriptableFramework.GameObjectListPopulator.items
        VB: ScriptableFramework.GameObjectListPopulator.items
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: items
        path: ''
        startLine: 2290
      summary: "\nThe array of objects to populate the <code>ReferenceList</code> with.\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject[] items
          VB: Public items As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.MeshRendererListPopulator
    commentId: T:ScriptableFramework.MeshRendererListPopulator
    language: CSharp
    name:
      CSharp: MeshRendererListPopulator
      VB: MeshRendererListPopulator
    nameWithType:
      CSharp: MeshRendererListPopulator
      VB: MeshRendererListPopulator
    qualifiedName:
      CSharp: ScriptableFramework.MeshRendererListPopulator
      VB: ScriptableFramework.MeshRendererListPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: MeshRendererListPopulator
      path: ''
      startLine: 2310
    summary: "\nUtility component to populate a <code>MeshRendererList</code> with MeshRenderers in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MeshRendererListPopulator : MonoBehaviour'
        VB: >-
          Public Class MeshRendererListPopulator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.MeshRendererListPopulator.referenceList
      commentId: F:ScriptableFramework.MeshRendererListPopulator.referenceList
      language: CSharp
      name:
        CSharp: referenceList
        VB: referenceList
      nameWithType:
        CSharp: MeshRendererListPopulator.referenceList
        VB: MeshRendererListPopulator.referenceList
      qualifiedName:
        CSharp: ScriptableFramework.MeshRendererListPopulator.referenceList
        VB: ScriptableFramework.MeshRendererListPopulator.referenceList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: referenceList
        path: ''
        startLine: 2316
      summary: "\nThe <code>ReferenceList</code> to be populated by this component.\n"
      example: []
      syntax:
        content:
          CSharp: public MeshRendererList referenceList
          VB: Public referenceList As MeshRendererList
        return:
          type: ScriptableFramework.MeshRendererList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.MeshRendererListPopulator.items
      commentId: F:ScriptableFramework.MeshRendererListPopulator.items
      language: CSharp
      name:
        CSharp: items
        VB: items
      nameWithType:
        CSharp: MeshRendererListPopulator.items
        VB: MeshRendererListPopulator.items
      qualifiedName:
        CSharp: ScriptableFramework.MeshRendererListPopulator.items
        VB: ScriptableFramework.MeshRendererListPopulator.items
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: items
        path: ''
        startLine: 2321
      summary: "\nThe array of objects to populate the <code>ReferenceList</code> with.\n"
      example: []
      syntax:
        content:
          CSharp: public MeshRenderer[] items
          VB: Public items As MeshRenderer()
        return:
          type: Global.MeshRenderer[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.TransformListPopulator
    commentId: T:ScriptableFramework.TransformListPopulator
    language: CSharp
    name:
      CSharp: TransformListPopulator
      VB: TransformListPopulator
    nameWithType:
      CSharp: TransformListPopulator
      VB: TransformListPopulator
    qualifiedName:
      CSharp: ScriptableFramework.TransformListPopulator
      VB: ScriptableFramework.TransformListPopulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: TransformListPopulator
      path: ''
      startLine: 2341
    summary: "\nUtility component to populate a <code>TransformList</code> with Transforms in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TransformListPopulator : MonoBehaviour'
        VB: >-
          Public Class TransformListPopulator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.TransformListPopulator.referenceList
      commentId: F:ScriptableFramework.TransformListPopulator.referenceList
      language: CSharp
      name:
        CSharp: referenceList
        VB: referenceList
      nameWithType:
        CSharp: TransformListPopulator.referenceList
        VB: TransformListPopulator.referenceList
      qualifiedName:
        CSharp: ScriptableFramework.TransformListPopulator.referenceList
        VB: ScriptableFramework.TransformListPopulator.referenceList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: referenceList
        path: ''
        startLine: 2347
      summary: "\nThe <code>ReferenceList</code> to be populated by this component.\n"
      example: []
      syntax:
        content:
          CSharp: public TransformList referenceList
          VB: Public referenceList As TransformList
        return:
          type: ScriptableFramework.TransformList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.TransformListPopulator.items
      commentId: F:ScriptableFramework.TransformListPopulator.items
      language: CSharp
      name:
        CSharp: items
        VB: items
      nameWithType:
        CSharp: TransformListPopulator.items
        VB: TransformListPopulator.items
      qualifiedName:
        CSharp: ScriptableFramework.TransformListPopulator.items
        VB: ScriptableFramework.TransformListPopulator.items
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: items
        path: ''
        startLine: 2352
      summary: "\nThe array of objects to populate the <code>ReferenceList</code> with.\n"
      example: []
      syntax:
        content:
          CSharp: public Transform[] items
          VB: Public items As Transform()
        return:
          type: Global.Transform[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.BoolList
    commentId: T:ScriptableFramework.BoolList
    language: CSharp
    name:
      CSharp: BoolList
      VB: BoolList
    nameWithType:
      CSharp: BoolList
      VB: BoolList
    qualifiedName:
      CSharp: ScriptableFramework.BoolList
      VB: ScriptableFramework.BoolList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: BoolList
      path: ''
      startLine: 2372
    summary: "\nA <code>ValueList</code> which can hold a list of bools.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoolList : ValueList<bool>, IList<bool>'
        VB: >-
          Public Class BoolList

              Inherits ValueList(Of Boolean)

              Implements IList(Of Boolean)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{System.Boolean}
    - ScriptableFramework.ValueList{System.Boolean}
    inheritedMembers:
    - ScriptableFramework.ValueList{System.Boolean}.customDefaultValues
    - ScriptableFramework.ValueList{System.Boolean}.useCustomDefaultValues
    - ScriptableFramework.ValueList{System.Boolean}.Clear
    - ScriptableFramework.ValueList{System.Boolean}.Reset
    - ScriptableFramework.ValueList{System.Boolean}.ToNativeArray(Allocator)
    - ScriptableFramework.RuntimeList{System.Boolean}.items
    - ScriptableFramework.RuntimeList{System.Boolean}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{System.Boolean}.Count
    - ScriptableFramework.RuntimeList{System.Boolean}.IsReadOnly
    - ScriptableFramework.RuntimeList{System.Boolean}.Add(System.Boolean)
    - ScriptableFramework.RuntimeList{System.Boolean}.AddRange(IEnumerable{System.Boolean})
    - ScriptableFramework.RuntimeList{System.Boolean}.Initialise(IEnumerable{System.Boolean})
    - ScriptableFramework.RuntimeList{System.Boolean}.Remove(System.Boolean)
    - ScriptableFramework.RuntimeList{System.Boolean}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{System.Boolean}.SetItem(System.Int32,System.Boolean)
    - ScriptableFramework.RuntimeList{System.Boolean}.IndexOf(System.Boolean)
    - ScriptableFramework.RuntimeList{System.Boolean}.Insert(System.Int32,System.Boolean)
    - ScriptableFramework.RuntimeList{System.Boolean}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{System.Boolean}.Contains(System.Boolean)
    - ScriptableFramework.RuntimeList{System.Boolean}.CopyTo(System.Boolean[],System.Int32)
    - ScriptableFramework.RuntimeList{System.Boolean}.GetEnumerator
    - ScriptableFramework.RuntimeList{System.Boolean}.ToArray
    - ScriptableFramework.RuntimeList{System.Boolean}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.ColorList
    commentId: T:ScriptableFramework.ColorList
    language: CSharp
    name:
      CSharp: ColorList
      VB: ColorList
    nameWithType:
      CSharp: ColorList
      VB: ColorList
    qualifiedName:
      CSharp: ScriptableFramework.ColorList
      VB: ScriptableFramework.ColorList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ColorList
      path: ''
      startLine: 2387
    summary: "\nA <code>ValueList</code> which can hold a list of bools.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColorList : ValueList<Color>, IList<Color>'
        VB: >-
          Public Class ColorList

              Inherits ValueList(Of Color)

              Implements IList(Of Color)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{Color}
    - ScriptableFramework.ValueList{Color}
    inheritedMembers:
    - ScriptableFramework.ValueList{Color}.customDefaultValues
    - ScriptableFramework.ValueList{Color}.useCustomDefaultValues
    - ScriptableFramework.ValueList{Color}.Clear
    - ScriptableFramework.ValueList{Color}.Reset
    - ScriptableFramework.ValueList{Color}.ToNativeArray(Allocator)
    - ScriptableFramework.RuntimeList{Color}.items
    - ScriptableFramework.RuntimeList{Color}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{Color}.Count
    - ScriptableFramework.RuntimeList{Color}.IsReadOnly
    - ScriptableFramework.RuntimeList{Color}.Add(Color)
    - ScriptableFramework.RuntimeList{Color}.AddRange(IEnumerable{Color})
    - ScriptableFramework.RuntimeList{Color}.Initialise(IEnumerable{Color})
    - ScriptableFramework.RuntimeList{Color}.Remove(Color)
    - ScriptableFramework.RuntimeList{Color}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{Color}.SetItem(System.Int32,Color)
    - ScriptableFramework.RuntimeList{Color}.IndexOf(Color)
    - ScriptableFramework.RuntimeList{Color}.Insert(System.Int32,Color)
    - ScriptableFramework.RuntimeList{Color}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{Color}.Contains(Color)
    - ScriptableFramework.RuntimeList{Color}.CopyTo(Color[],System.Int32)
    - ScriptableFramework.RuntimeList{Color}.GetEnumerator
    - ScriptableFramework.RuntimeList{Color}.ToArray
    - ScriptableFramework.RuntimeList{Color}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.FloatList
    commentId: T:ScriptableFramework.FloatList
    language: CSharp
    name:
      CSharp: FloatList
      VB: FloatList
    nameWithType:
      CSharp: FloatList
      VB: FloatList
    qualifiedName:
      CSharp: ScriptableFramework.FloatList
      VB: ScriptableFramework.FloatList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: FloatList
      path: ''
      startLine: 2402
    summary: "\nA <code>ValueList</code> which can hold a list of floats.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FloatList : ValueList<float>, IList<float>'
        VB: >-
          Public Class FloatList

              Inherits ValueList(Of Single)

              Implements IList(Of Single)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{System.Single}
    - ScriptableFramework.ValueList{System.Single}
    inheritedMembers:
    - ScriptableFramework.ValueList{System.Single}.customDefaultValues
    - ScriptableFramework.ValueList{System.Single}.useCustomDefaultValues
    - ScriptableFramework.ValueList{System.Single}.Clear
    - ScriptableFramework.ValueList{System.Single}.Reset
    - ScriptableFramework.ValueList{System.Single}.ToNativeArray(Allocator)
    - ScriptableFramework.RuntimeList{System.Single}.items
    - ScriptableFramework.RuntimeList{System.Single}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{System.Single}.Count
    - ScriptableFramework.RuntimeList{System.Single}.IsReadOnly
    - ScriptableFramework.RuntimeList{System.Single}.Add(System.Single)
    - ScriptableFramework.RuntimeList{System.Single}.AddRange(IEnumerable{System.Single})
    - ScriptableFramework.RuntimeList{System.Single}.Initialise(IEnumerable{System.Single})
    - ScriptableFramework.RuntimeList{System.Single}.Remove(System.Single)
    - ScriptableFramework.RuntimeList{System.Single}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{System.Single}.SetItem(System.Int32,System.Single)
    - ScriptableFramework.RuntimeList{System.Single}.IndexOf(System.Single)
    - ScriptableFramework.RuntimeList{System.Single}.Insert(System.Int32,System.Single)
    - ScriptableFramework.RuntimeList{System.Single}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{System.Single}.Contains(System.Single)
    - ScriptableFramework.RuntimeList{System.Single}.CopyTo(System.Single[],System.Int32)
    - ScriptableFramework.RuntimeList{System.Single}.GetEnumerator
    - ScriptableFramework.RuntimeList{System.Single}.ToArray
    - ScriptableFramework.RuntimeList{System.Single}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.IntList
    commentId: T:ScriptableFramework.IntList
    language: CSharp
    name:
      CSharp: IntList
      VB: IntList
    nameWithType:
      CSharp: IntList
      VB: IntList
    qualifiedName:
      CSharp: ScriptableFramework.IntList
      VB: ScriptableFramework.IntList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: IntList
      path: ''
      startLine: 2417
    summary: "\nA <code>ValueList</code> which can hold a list of ints.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IntList : ValueList<int>, IList<int>'
        VB: >-
          Public Class IntList

              Inherits ValueList(Of Integer)

              Implements IList(Of Integer)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{System.Int32}
    - ScriptableFramework.ValueList{System.Int32}
    inheritedMembers:
    - ScriptableFramework.ValueList{System.Int32}.customDefaultValues
    - ScriptableFramework.ValueList{System.Int32}.useCustomDefaultValues
    - ScriptableFramework.ValueList{System.Int32}.Clear
    - ScriptableFramework.ValueList{System.Int32}.Reset
    - ScriptableFramework.ValueList{System.Int32}.ToNativeArray(Allocator)
    - ScriptableFramework.RuntimeList{System.Int32}.items
    - ScriptableFramework.RuntimeList{System.Int32}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.Count
    - ScriptableFramework.RuntimeList{System.Int32}.IsReadOnly
    - ScriptableFramework.RuntimeList{System.Int32}.Add(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.AddRange(IEnumerable{System.Int32})
    - ScriptableFramework.RuntimeList{System.Int32}.Initialise(IEnumerable{System.Int32})
    - ScriptableFramework.RuntimeList{System.Int32}.Remove(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.SetItem(System.Int32,System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.IndexOf(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.Insert(System.Int32,System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.Contains(System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.CopyTo(System.Int32[],System.Int32)
    - ScriptableFramework.RuntimeList{System.Int32}.GetEnumerator
    - ScriptableFramework.RuntimeList{System.Int32}.ToArray
    - ScriptableFramework.RuntimeList{System.Int32}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.StringList
    commentId: T:ScriptableFramework.StringList
    language: CSharp
    name:
      CSharp: StringList
      VB: StringList
    nameWithType:
      CSharp: StringList
      VB: StringList
    qualifiedName:
      CSharp: ScriptableFramework.StringList
      VB: ScriptableFramework.StringList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StringList
      path: ''
      startLine: 2432
    summary: "\nA <code>ValueList</code> which can hold a list of DataStrings which can be used in place of regular Strings.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StringList : ValueList<DataString>, IList<DataString>'
        VB: >-
          Public Class StringList

              Inherits ValueList(Of DataString)

              Implements IList(Of DataString)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    - ScriptableFramework.ValueList{ScriptableFramework.DataString}
    inheritedMembers:
    - ScriptableFramework.ValueList{ScriptableFramework.DataString}.customDefaultValues
    - ScriptableFramework.ValueList{ScriptableFramework.DataString}.useCustomDefaultValues
    - ScriptableFramework.ValueList{ScriptableFramework.DataString}.Clear
    - ScriptableFramework.ValueList{ScriptableFramework.DataString}.Reset
    - ScriptableFramework.ValueList{ScriptableFramework.DataString}.ToNativeArray(Allocator)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.items
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Count
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.IsReadOnly
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Add(ScriptableFramework.DataString)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.AddRange(IEnumerable{ScriptableFramework.DataString})
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Initialise(IEnumerable{ScriptableFramework.DataString})
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Remove(ScriptableFramework.DataString)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.SetItem(System.Int32,ScriptableFramework.DataString)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.IndexOf(ScriptableFramework.DataString)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Insert(System.Int32,ScriptableFramework.DataString)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Contains(ScriptableFramework.DataString)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.CopyTo(ScriptableFramework.DataString[],System.Int32)
    - ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.GetEnumerator
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.StringList.AddRange(IEnumerable{System.String})
      commentId: M:ScriptableFramework.StringList.AddRange(IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: AddRange(IEnumerable<String>)
        VB: AddRange(IEnumerable(Of String))
      nameWithType:
        CSharp: StringList.AddRange(IEnumerable<String>)
        VB: StringList.AddRange(IEnumerable(Of String))
      qualifiedName:
        CSharp: ScriptableFramework.StringList.AddRange(IEnumerable<System.String>)
        VB: ScriptableFramework.StringList.AddRange(IEnumerable(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: AddRange
        path: ''
        startLine: 2439
      summary: "\nAppend objects to the end of this list.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void AddRange(IEnumerable<string> items)
          VB: Public Overridable Sub AddRange(items As IEnumerable(Of String))
        parameters:
        - id: items
          type: Global.IEnumerable{System.String}
          description: A collection of objects to be appended to this list.
      overload: ScriptableFramework.StringList.AddRange*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.StringList.Initialise(IEnumerable{System.String})
      commentId: M:ScriptableFramework.StringList.Initialise(IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: Initialise(IEnumerable<String>)
        VB: Initialise(IEnumerable(Of String))
      nameWithType:
        CSharp: StringList.Initialise(IEnumerable<String>)
        VB: StringList.Initialise(IEnumerable(Of String))
      qualifiedName:
        CSharp: ScriptableFramework.StringList.Initialise(IEnumerable<System.String>)
        VB: ScriptableFramework.StringList.Initialise(IEnumerable(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Initialise
        path: ''
        startLine: 2451
      summary: "\nShorthand for calling <code>Clear ()</code> and then <code>AddRange (items)</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialise(IEnumerable<string> items)
          VB: Public Overridable Sub Initialise(items As IEnumerable(Of String))
        parameters:
        - id: items
          type: Global.IEnumerable{System.String}
          description: A collection of objects to be appended to this list.
      overload: ScriptableFramework.StringList.Initialise*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.StringList.ToList
      commentId: M:ScriptableFramework.StringList.ToList
      language: CSharp
      name:
        CSharp: ToList()
        VB: ToList()
      nameWithType:
        CSharp: StringList.ToList()
        VB: StringList.ToList()
      qualifiedName:
        CSharp: ScriptableFramework.StringList.ToList()
        VB: ScriptableFramework.StringList.ToList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToList
        path: ''
        startLine: 2461
      summary: "\nConverts the internal list of <code>DataString</code>s into a new list of regular stirngs.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual List<string> ToList()
          VB: Public Overridable Function ToList As List(Of String)
        return:
          type: Global.List{System.String}
          description: A list of strings with the same values.
      overload: ScriptableFramework.StringList.ToList*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.StringList.ToArray
      commentId: M:ScriptableFramework.StringList.ToArray
      language: CSharp
      name:
        CSharp: ToArray()
        VB: ToArray()
      nameWithType:
        CSharp: StringList.ToArray()
        VB: StringList.ToArray()
      qualifiedName:
        CSharp: ScriptableFramework.StringList.ToArray()
        VB: ScriptableFramework.StringList.ToArray()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToArray
        path: ''
        startLine: 2477
      summary: "\nConverts the internal list of <code>DataString</code>s into a new array of regular stirngs.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual string[] ToArray()
          VB: Public Overridable Function ToArray As String()
        return:
          type: System.String[]
          description: An array of strings with the same values.
      overload: ScriptableFramework.StringList.ToArray*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: ScriptableFramework.ValueList`1
    commentId: T:ScriptableFramework.ValueList`1
    language: CSharp
    name:
      CSharp: ValueList<T>
      VB: ValueList(Of T)
    nameWithType:
      CSharp: ValueList<T>
      VB: ValueList(Of T)
    qualifiedName:
      CSharp: ScriptableFramework.ValueList<T>
      VB: ScriptableFramework.ValueList(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: ValueList
      path: ''
      startLine: 2505
    summary: "\nAn abstract generic RuntimeList which encapsulates a given value type.\nInherit from this class to create your own ValueList sub class.\nGive your class the CreateAssetMenu attribute to serialize an instance of it.\nA default list can be optionally set in the inspector.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ValueList<T> : RuntimeList<T>, IList<T> where T : struct'
        VB: >-
          Public MustInherit Class ValueList(Of T As Structure)

              Inherits RuntimeList(Of T)

              Implements IList(Of T)
      typeParameters:
      - id: T
        description: This list will be constrained to <code>struct</code> (value type) objects.
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{{T}}
    inheritedMembers:
    - ScriptableFramework.RuntimeList{{T}}.items
    - ScriptableFramework.RuntimeList{{T}}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.Count
    - ScriptableFramework.RuntimeList{{T}}.IsReadOnly
    - ScriptableFramework.RuntimeList{{T}}.Add({T})
    - ScriptableFramework.RuntimeList{{T}}.AddRange(IEnumerable{{T}})
    - ScriptableFramework.RuntimeList{{T}}.Initialise(IEnumerable{{T}})
    - ScriptableFramework.RuntimeList{{T}}.Remove({T})
    - ScriptableFramework.RuntimeList{{T}}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.SetItem(System.Int32,{T})
    - ScriptableFramework.RuntimeList{{T}}.IndexOf({T})
    - ScriptableFramework.RuntimeList{{T}}.Insert(System.Int32,{T})
    - ScriptableFramework.RuntimeList{{T}}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.Contains({T})
    - ScriptableFramework.RuntimeList{{T}}.CopyTo({T}[],System.Int32)
    - ScriptableFramework.RuntimeList{{T}}.GetEnumerator
    - ScriptableFramework.RuntimeList{{T}}.ToArray
    - ScriptableFramework.RuntimeList{{T}}.ToList
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.ValueList`1.customDefaultValues
      commentId: F:ScriptableFramework.ValueList`1.customDefaultValues
      language: CSharp
      name:
        CSharp: customDefaultValues
        VB: customDefaultValues
      nameWithType:
        CSharp: ValueList<T>.customDefaultValues
        VB: ValueList(Of T).customDefaultValues
      qualifiedName:
        CSharp: ScriptableFramework.ValueList<T>.customDefaultValues
        VB: ScriptableFramework.ValueList(Of T).customDefaultValues
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: customDefaultValues
        path: ''
        startLine: 2513
      summary: "\nA default set of values for this object to initialise to if, in the inspector, \n<code>useCustomDefaultValues</code> was set to true.\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> customDefaultValues
          VB: Public customDefaultValues As List(Of T)
        return:
          type: Global.List{{T}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
      commentId: F:ScriptableFramework.ValueList`1.useCustomDefaultValues
      language: CSharp
      name:
        CSharp: useCustomDefaultValues
        VB: useCustomDefaultValues
      nameWithType:
        CSharp: ValueList<T>.useCustomDefaultValues
        VB: ValueList(Of T).useCustomDefaultValues
      qualifiedName:
        CSharp: ScriptableFramework.ValueList<T>.useCustomDefaultValues
        VB: ScriptableFramework.ValueList(Of T).useCustomDefaultValues
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: useCustomDefaultValues
        path: ''
        startLine: 2518
      summary: "\nIf true, the <code>values</code> property will initialise to the user defined default values.\n"
      example: []
      syntax:
        content:
          CSharp: public bool useCustomDefaultValues
          VB: Public useCustomDefaultValues As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.ValueList`1.Clear
      commentId: M:ScriptableFramework.ValueList`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ValueList<T>.Clear()
        VB: ValueList(Of T).Clear()
      qualifiedName:
        CSharp: ScriptableFramework.ValueList<T>.Clear()
        VB: ScriptableFramework.ValueList(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 2523
      summary: "\nEmpties the current internal list.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.ValueList`1.Clear*
      overridden: ScriptableFramework.RuntimeList{{T}}.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.ValueList`1.Reset
      commentId: M:ScriptableFramework.ValueList`1.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: ValueList<T>.Reset()
        VB: ValueList(Of T).Reset()
      qualifiedName:
        CSharp: ScriptableFramework.ValueList<T>.Reset()
        VB: ScriptableFramework.ValueList(Of T).Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 2532
      summary: "\nClears the <code>ValueList</code> then, if <code>useCustomDefaultValues</code> is true, reinitialises the list\nwith the contents of <code>customDefaultValues</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.ValueList`1.Reset*
      overridden: ScriptableFramework.RuntimeList{{T}}.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
      commentId: M:ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
      language: CSharp
      name:
        CSharp: ToNativeArray(Allocator)
        VB: ToNativeArray(Allocator)
      nameWithType:
        CSharp: ValueList<T>.ToNativeArray(Allocator)
        VB: ValueList(Of T).ToNativeArray(Allocator)
      qualifiedName:
        CSharp: ScriptableFramework.ValueList<T>.ToNativeArray(Allocator)
        VB: ScriptableFramework.ValueList(Of T).ToNativeArray(Allocator)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ToNativeArray
        path: ''
        startLine: 2548
      summary: "\nShorthand for creating a new <code>NativeArray</code> out of the current <code>ValueList</code> based on a\ngiven allocator type.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual NativeArray<T> ToNativeArray(Allocator allocator)
          VB: Public Overridable Function ToNativeArray(allocator As Allocator) As NativeArray(Of T)
        parameters:
        - id: allocator
          type: Global.Allocator
          description: Specifies which allocation type to use.
        return:
          type: Global.NativeArray{{T}}
          description: A new <code>NativeArray</code> copy of this list&apos;s values.
      overload: ScriptableFramework.ValueList`1.ToNativeArray*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: ScriptableFramework.Vector3List
    commentId: T:ScriptableFramework.Vector3List
    language: CSharp
    name:
      CSharp: Vector3List
      VB: Vector3List
    nameWithType:
      CSharp: Vector3List
      VB: Vector3List
    qualifiedName:
      CSharp: ScriptableFramework.Vector3List
      VB: ScriptableFramework.Vector3List
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: Vector3List
      path: ''
      startLine: 2563
    summary: "\nA <code>ValueList</code> which can hold a list of Vector3s.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Vector3List : ValueList<Vector3>, IList<Vector3>'
        VB: >-
          Public Class Vector3List

              Inherits ValueList(Of Vector3)

              Implements IList(Of Vector3)
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.RuntimeList{Vector3}
    - ScriptableFramework.ValueList{Vector3}
    inheritedMembers:
    - ScriptableFramework.ValueList{Vector3}.customDefaultValues
    - ScriptableFramework.ValueList{Vector3}.useCustomDefaultValues
    - ScriptableFramework.ValueList{Vector3}.Clear
    - ScriptableFramework.ValueList{Vector3}.Reset
    - ScriptableFramework.ValueList{Vector3}.ToNativeArray(Allocator)
    - ScriptableFramework.RuntimeList{Vector3}.items
    - ScriptableFramework.RuntimeList{Vector3}.Item(System.Int32)
    - ScriptableFramework.RuntimeList{Vector3}.Count
    - ScriptableFramework.RuntimeList{Vector3}.IsReadOnly
    - ScriptableFramework.RuntimeList{Vector3}.Add(Vector3)
    - ScriptableFramework.RuntimeList{Vector3}.AddRange(IEnumerable{Vector3})
    - ScriptableFramework.RuntimeList{Vector3}.Initialise(IEnumerable{Vector3})
    - ScriptableFramework.RuntimeList{Vector3}.Remove(Vector3)
    - ScriptableFramework.RuntimeList{Vector3}.GetItem(System.Int32)
    - ScriptableFramework.RuntimeList{Vector3}.SetItem(System.Int32,Vector3)
    - ScriptableFramework.RuntimeList{Vector3}.IndexOf(Vector3)
    - ScriptableFramework.RuntimeList{Vector3}.Insert(System.Int32,Vector3)
    - ScriptableFramework.RuntimeList{Vector3}.RemoveAt(System.Int32)
    - ScriptableFramework.RuntimeList{Vector3}.Contains(Vector3)
    - ScriptableFramework.RuntimeList{Vector3}.CopyTo(Vector3[],System.Int32)
    - ScriptableFramework.RuntimeList{Vector3}.GetEnumerator
    - ScriptableFramework.RuntimeList{Vector3}.ToArray
    - ScriptableFramework.RuntimeList{Vector3}.ToList
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.DefaultState
    commentId: T:ScriptableFramework.DefaultState
    language: CSharp
    name:
      CSharp: DefaultState
      VB: DefaultState
    nameWithType:
      CSharp: DefaultState
      VB: DefaultState
    qualifiedName:
      CSharp: ScriptableFramework.DefaultState
      VB: ScriptableFramework.DefaultState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: DefaultState
      path: ''
      startLine: 2578
    summary: "\nA set of possible states a <code>StateMachine</code> can default to.\n"
    example: []
    syntax:
      content:
        CSharp: public enum DefaultState
        VB: Public Enum DefaultState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ScriptableFramework.DefaultState.FirstActive
      commentId: F:ScriptableFramework.DefaultState.FirstActive
      language: CSharp
      name:
        CSharp: FirstActive
        VB: FirstActive
      nameWithType:
        CSharp: DefaultState.FirstActive
        VB: DefaultState.FirstActive
      qualifiedName:
        CSharp: ScriptableFramework.DefaultState.FirstActive
        VB: ScriptableFramework.DefaultState.FirstActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: FirstActive
        path: ''
        startLine: 2580
      syntax:
        content:
          CSharp: FirstActive = 0
          VB: FirstActive = 0
        return:
          type: ScriptableFramework.DefaultState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ScriptableFramework.DefaultState.AllActive
      commentId: F:ScriptableFramework.DefaultState.AllActive
      language: CSharp
      name:
        CSharp: AllActive
        VB: AllActive
      nameWithType:
        CSharp: DefaultState.AllActive
        VB: DefaultState.AllActive
      qualifiedName:
        CSharp: ScriptableFramework.DefaultState.AllActive
        VB: ScriptableFramework.DefaultState.AllActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: AllActive
        path: ''
        startLine: 2581
      syntax:
        content:
          CSharp: AllActive = 1
          VB: AllActive = 1
        return:
          type: ScriptableFramework.DefaultState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ScriptableFramework.DefaultState.NoneActive
      commentId: F:ScriptableFramework.DefaultState.NoneActive
      language: CSharp
      name:
        CSharp: NoneActive
        VB: NoneActive
      nameWithType:
        CSharp: DefaultState.NoneActive
        VB: DefaultState.NoneActive
      qualifiedName:
        CSharp: ScriptableFramework.DefaultState.NoneActive
        VB: ScriptableFramework.DefaultState.NoneActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: NoneActive
        path: ''
        startLine: 2582
      syntax:
        content:
          CSharp: NoneActive = 2
          VB: NoneActive = 2
        return:
          type: ScriptableFramework.DefaultState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ScriptableFramework.StateChange
    commentId: T:ScriptableFramework.StateChange
    language: CSharp
    name:
      CSharp: StateChange
      VB: StateChange
    nameWithType:
      CSharp: StateChange
      VB: StateChange
    qualifiedName:
      CSharp: ScriptableFramework.StateChange
      VB: ScriptableFramework.StateChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StateChange
      path: ''
      startLine: 2595
    summary: "\nA helper component designed for quickly allowing control over a StateMachine by hooking it up to UI objects through\neither static or dynamic function assignment.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateChange : MonoBehaviour'
        VB: >-
          Public Class StateChange

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.StateChange.stateMachine
      commentId: F:ScriptableFramework.StateChange.stateMachine
      language: CSharp
      name:
        CSharp: stateMachine
        VB: stateMachine
      nameWithType:
        CSharp: StateChange.stateMachine
        VB: StateChange.stateMachine
      qualifiedName:
        CSharp: ScriptableFramework.StateChange.stateMachine
        VB: ScriptableFramework.StateChange.stateMachine
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: stateMachine
        path: ''
        startLine: 2602
      summary: "\nThe StateMachine to be controlled by the UI object.\n"
      example: []
      syntax:
        content:
          CSharp: public StateMachine stateMachine
          VB: Public stateMachine As StateMachine
        return:
          type: ScriptableFramework.StateMachine
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateChange.UpdateStateMachine(System.Int32)
      commentId: M:ScriptableFramework.StateChange.UpdateStateMachine(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateStateMachine(Int32)
        VB: UpdateStateMachine(Int32)
      nameWithType:
        CSharp: StateChange.UpdateStateMachine(Int32)
        VB: StateChange.UpdateStateMachine(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateChange.UpdateStateMachine(System.Int32)
        VB: ScriptableFramework.StateChange.UpdateStateMachine(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateStateMachine
        path: ''
        startLine: 2609
      summary: "\nUpdates the GameObjects under the state machine.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateStateMachine(int value)
          VB: Public Sub UpdateStateMachine(value As Integer)
        parameters:
        - id: value
          type: System.Int32
          description: The index to update the state machine to.
      overload: ScriptableFramework.StateChange.UpdateStateMachine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateChange.UpdateStateMachine(System.Boolean)
      commentId: M:ScriptableFramework.StateChange.UpdateStateMachine(System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateStateMachine(Boolean)
        VB: UpdateStateMachine(Boolean)
      nameWithType:
        CSharp: StateChange.UpdateStateMachine(Boolean)
        VB: StateChange.UpdateStateMachine(Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateChange.UpdateStateMachine(System.Boolean)
        VB: ScriptableFramework.StateChange.UpdateStateMachine(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateStateMachine
        path: ''
        startLine: 2621
      summary: "\nUpdates the GameObjects under the state machine.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateStateMachine(bool value)
          VB: Public Sub UpdateStateMachine(value As Boolean)
        parameters:
        - id: value
          type: System.Boolean
          description: The value to apply the same state to all GameObjects in the current list.
      overload: ScriptableFramework.StateChange.UpdateStateMachine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.StateMachine
    commentId: T:ScriptableFramework.StateMachine
    language: CSharp
    name:
      CSharp: StateMachine
      VB: StateMachine
    nameWithType:
      CSharp: StateMachine
      VB: StateMachine
    qualifiedName:
      CSharp: ScriptableFramework.StateMachine
      VB: ScriptableFramework.StateMachine
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StateMachine
      path: ''
      startLine: 2637
    summary: "\nA high level wrapper class that encapsulates a <code>GameObjectList</code> and drives the active state of each\nobject according to a given list index that represents a state.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateMachine : StateMachineBase'
        VB: >-
          Public Class StateMachine

              Inherits StateMachineBase
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.StateMachineBase
    inheritedMembers:
    - ScriptableFramework.StateMachineBase.defaultState
    - ScriptableFramework.StateMachineBase.selectionIndex
    - ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
    - ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
    - ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
    - ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.StateMachine.gameObjects
      commentId: F:ScriptableFramework.StateMachine.gameObjects
      language: CSharp
      name:
        CSharp: gameObjects
        VB: gameObjects
      nameWithType:
        CSharp: StateMachine.gameObjects
        VB: StateMachine.gameObjects
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.gameObjects
        VB: ScriptableFramework.StateMachine.gameObjects
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: gameObjects
        path: ''
        startLine: 2645
      summary: "\nA list of GameObjects that represent the current object state. The order of the objects is expected\nto match the order of the states.\n"
      example: []
      syntax:
        content:
          CSharp: public GameObjectList gameObjects
          VB: Public gameObjects As GameObjectList
        return:
          type: ScriptableFramework.GameObjectList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachine.ApplyState(System.Int32)
      commentId: M:ScriptableFramework.StateMachine.ApplyState(System.Int32)
      language: CSharp
      name:
        CSharp: ApplyState(Int32)
        VB: ApplyState(Int32)
      nameWithType:
        CSharp: StateMachine.ApplyState(Int32)
        VB: StateMachine.ApplyState(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.ApplyState(System.Int32)
        VB: ScriptableFramework.StateMachine.ApplyState(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2652
      summary: "\nActually runs the loop which sets the GameObjects on or off.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(int newSelectionIndex)
          VB: Protected Overrides Function ApplyState(newSelectionIndex As Integer) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: Index of the object to be left on.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachine.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.ApplyState(System.Boolean)
      commentId: M:ScriptableFramework.StateMachine.ApplyState(System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Boolean)
        VB: ApplyState(Boolean)
      nameWithType:
        CSharp: StateMachine.ApplyState(Boolean)
        VB: StateMachine.ApplyState(Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.ApplyState(System.Boolean)
        VB: ScriptableFramework.StateMachine.ApplyState(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2671
      summary: "\nActually runs the loop which sets all the GameObjects on or off.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(bool stateForAll)
          VB: Protected Overrides Function ApplyState(stateForAll As Boolean) As Boolean
        parameters:
        - id: stateForAll
          type: System.Boolean
          description: The new state for all GameObjects.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachine.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.ApplyState(System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachine.ApplyState(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Int32, Boolean)
        VB: ApplyState(Int32, Boolean)
      nameWithType:
        CSharp: StateMachine.ApplyState(Int32, Boolean)
        VB: StateMachine.ApplyState(Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.ApplyState(System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachine.ApplyState(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2691
      summary: "\nActually applies the new state to the selected object.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(int newSelectionIndex, bool stateAtThisObject)
          VB: Protected Overrides Function ApplyState(newSelectionIndex As Integer, stateAtThisObject As Boolean) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: The index of the object to update.
        - id: stateAtThisObject
          type: System.Boolean
          description: The state to provide that object with.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachine.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.ApplyState(System.Int32,System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachine.ApplyState(System.Int32,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Int32, Int32, Boolean)
        VB: ApplyState(Int32, Int32, Boolean)
      nameWithType:
        CSharp: StateMachine.ApplyState(Int32, Int32, Boolean)
        VB: StateMachine.ApplyState(Int32, Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.ApplyState(System.Int32, System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachine.ApplyState(System.Int32, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2712
      summary: "\nActually runs the loop which applies your given range of objects and the rest with another.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(int startIndex, int length, bool stateToApply)
          VB: Protected Overrides Function ApplyState(startIndex As Integer, length As Integer, stateToApply As Boolean) As Boolean
        parameters:
        - id: startIndex
          type: System.Int32
          description: Where to start applying your state (inclusive).
        - id: length
          type: System.Int32
          description: How many objects to affect.
        - id: stateToApply
          type: System.Boolean
          description: The state to apply within your given range.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachine.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.CheckListBeforeUpdate
      commentId: M:ScriptableFramework.StateMachine.CheckListBeforeUpdate
      language: CSharp
      name:
        CSharp: CheckListBeforeUpdate()
        VB: CheckListBeforeUpdate()
      nameWithType:
        CSharp: StateMachine.CheckListBeforeUpdate()
        VB: StateMachine.CheckListBeforeUpdate()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.CheckListBeforeUpdate()
        VB: ScriptableFramework.StateMachine.CheckListBeforeUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckListBeforeUpdate
        path: ''
        startLine: 2734
      summary: "\nChecks if the list is null. Since the list can be a varying type, defining this as \nan abstract function is needed to help reduce code.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool CheckListBeforeUpdate()
          VB: Protected Overrides Function CheckListBeforeUpdate As Boolean
        return:
          type: System.Boolean
          description: If the list is null or not.
      overload: ScriptableFramework.StateMachine.CheckListBeforeUpdate*
      overridden: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate(System.Int32)
      commentId: M:ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: CheckSelectionIndexBeforeUpdate(Int32)
        VB: CheckSelectionIndexBeforeUpdate(Int32)
      nameWithType:
        CSharp: StateMachine.CheckSelectionIndexBeforeUpdate(Int32)
        VB: StateMachine.CheckSelectionIndexBeforeUpdate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate(System.Int32)
        VB: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckSelectionIndexBeforeUpdate
        path: ''
        startLine: 2750
      summary: "\nChecks if the index is greater than -1 but less than the length of the list.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool CheckSelectionIndexBeforeUpdate(int objectIndex)
          VB: Protected Overrides Function CheckSelectionIndexBeforeUpdate(objectIndex As Integer) As Boolean
        parameters:
        - id: objectIndex
          type: System.Int32
          description: The index of the object to check.
        return:
          type: System.Boolean
          description: True if the index is within a range that won&apos;t throw an out of range exception.
      overload: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate*
      overridden: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate(System.Int32)
      commentId: M:ScriptableFramework.StateMachine.CheckListItemBeforeUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: CheckListItemBeforeUpdate(Int32)
        VB: CheckListItemBeforeUpdate(Int32)
      nameWithType:
        CSharp: StateMachine.CheckListItemBeforeUpdate(Int32)
        VB: StateMachine.CheckListItemBeforeUpdate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate(System.Int32)
        VB: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckListItemBeforeUpdate
        path: ''
        startLine: 2767
      summary: "\nChecks if an item in the list is null. Since the list can be a varying type, defining this as \nan abstract function is needed to help reduce code.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool CheckListItemBeforeUpdate(int objectIndex)
          VB: Protected Overrides Function CheckListItemBeforeUpdate(objectIndex As Integer) As Boolean
        parameters:
        - id: objectIndex
          type: System.Int32
          description: The index of the object to check.
        return:
          type: System.Boolean
          description: If the item is null or not.
      overload: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate*
      overridden: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachine.Clear
      commentId: M:ScriptableFramework.StateMachine.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: StateMachine.Clear()
        VB: StateMachine.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.Clear()
        VB: ScriptableFramework.StateMachine.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 2781
      summary: "\nIf the list is not null, and has a count beyond 0, sets the current state according to <code>defaultState</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.StateMachine.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.StateMachine.Reset
      commentId: M:ScriptableFramework.StateMachine.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: StateMachine.Reset()
        VB: StateMachine.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachine.Reset()
        VB: ScriptableFramework.StateMachine.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 2804
      summary: "\nCalls <code>Clear ()</code>\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.StateMachine.Reset*
      overridden: ScriptableFramework.RuntimeObject.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.StateMachineBase
    commentId: T:ScriptableFramework.StateMachineBase
    language: CSharp
    name:
      CSharp: StateMachineBase
      VB: StateMachineBase
    nameWithType:
      CSharp: StateMachineBase
      VB: StateMachineBase
    qualifiedName:
      CSharp: ScriptableFramework.StateMachineBase
      VB: ScriptableFramework.StateMachineBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StateMachineBase
      path: ''
      startLine: 2824
    syntax:
      content:
        CSharp: 'public abstract class StateMachineBase : RuntimeObject'
        VB: >-
          Public MustInherit Class StateMachineBase

              Inherits RuntimeObject
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    inheritedMembers:
    - ScriptableFramework.RuntimeObject.Clear
    - ScriptableFramework.RuntimeObject.Reset
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ScriptableFramework.StateMachineBase.defaultState
      commentId: F:ScriptableFramework.StateMachineBase.defaultState
      language: CSharp
      name:
        CSharp: defaultState
        VB: defaultState
      nameWithType:
        CSharp: StateMachineBase.defaultState
        VB: StateMachineBase.defaultState
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.defaultState
        VB: ScriptableFramework.StateMachineBase.defaultState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: defaultState
        path: ''
        startLine: 2830
      summary: "\nA enum to determine how the <code>Clear ()</code> and <code>Reset ()</code> functions behave.\n"
      example: []
      syntax:
        content:
          CSharp: public DefaultState defaultState
          VB: Public defaultState As DefaultState
        return:
          type: ScriptableFramework.DefaultState
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineBase.selectionIndex
      commentId: F:ScriptableFramework.StateMachineBase.selectionIndex
      language: CSharp
      name:
        CSharp: selectionIndex
        VB: selectionIndex
      nameWithType:
        CSharp: StateMachineBase.selectionIndex
        VB: StateMachineBase.selectionIndex
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.selectionIndex
        VB: ScriptableFramework.StateMachineBase.selectionIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: selectionIndex
        path: ''
        startLine: 2836
      summary: "\nThe current index of the state machine. Default value is 0. When <code>Clear ()</code> is called and\n<code>defaultState</code> is not set to first active, will be set to -1.\n"
      example: []
      syntax:
        content:
          CSharp: public int selectionIndex
          VB: Public selectionIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
      commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateState(Int32)
        VB: UpdateState(Int32)
      nameWithType:
        CSharp: StateMachineBase.UpdateState(Int32)
        VB: StateMachineBase.UpdateState(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
        VB: ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateState
        path: ''
        startLine: 2844
      summary: "\nApplies a new single state to the list.\n"
      example: []
      syntax:
        content:
          CSharp: public bool UpdateState(int newSelectionIndex)
          VB: Public Function UpdateState(newSelectionIndex As Integer) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: Index of the state to be active.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.UpdateState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
      commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateState(Boolean)
        VB: UpdateState(Boolean)
      nameWithType:
        CSharp: StateMachineBase.UpdateState(Boolean)
        VB: StateMachineBase.UpdateState(Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
        VB: ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateState
        path: ''
        startLine: 2858
      summary: "\nApplies the same state to all objects in the current list.\n"
      example: []
      syntax:
        content:
          CSharp: public bool UpdateState(bool stateForAll)
          VB: Public Function UpdateState(stateForAll As Boolean) As Boolean
        parameters:
        - id: stateForAll
          type: System.Boolean
          description: The new state for all contained object.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.UpdateState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateState(Int32, Boolean)
        VB: UpdateState(Int32, Boolean)
      nameWithType:
        CSharp: StateMachineBase.UpdateState(Int32, Boolean)
        VB: StateMachineBase.UpdateState(Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.UpdateState(System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachineBase.UpdateState(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateState
        path: ''
        startLine: 2871
      summary: "\nApplies a state to a single object without affecting other objects in the list.\n"
      example: []
      syntax:
        content:
          CSharp: public bool UpdateState(int newSelectionIndex, bool stateAtThisObject)
          VB: Public Function UpdateState(newSelectionIndex As Integer, stateAtThisObject As Boolean) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: The index of the object to update.
        - id: stateAtThisObject
          type: System.Boolean
          description: The state to provide that object with.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.UpdateState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateState(Int32, Int32, Boolean)
        VB: UpdateState(Int32, Int32, Boolean)
      nameWithType:
        CSharp: StateMachineBase.UpdateState(Int32, Int32, Boolean)
        VB: StateMachineBase.UpdateState(Int32, Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.UpdateState(System.Int32, System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachineBase.UpdateState(System.Int32, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateState
        path: ''
        startLine: 2888
      summary: "\nApplies a state to all objects in the given range and the opposite state to the objects\noutside of the range.\n"
      example: []
      syntax:
        content:
          CSharp: public bool UpdateState(int startIndex, int length, bool stateToApply)
          VB: Public Function UpdateState(startIndex As Integer, length As Integer, stateToApply As Boolean) As Boolean
        parameters:
        - id: startIndex
          type: System.Int32
          description: Where to start applying your state (inclusive).
        - id: length
          type: System.Int32
          description: How many objects to affect.
        - id: stateToApply
          type: System.Boolean
          description: The state to apply within your given range.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.UpdateState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
      commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
      language: CSharp
      name:
        CSharp: ApplyState(Int32)
        VB: ApplyState(Int32)
      nameWithType:
        CSharp: StateMachineBase.ApplyState(Int32)
        VB: StateMachineBase.ApplyState(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
        VB: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2901
      summary: "\nActually runs the loop which updates the state.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool ApplyState(int newSelectionIndex)
          VB: Protected MustOverride Function ApplyState(newSelectionIndex As Integer) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: Index of the state to be active.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.ApplyState*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
      commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Boolean)
        VB: ApplyState(Boolean)
      nameWithType:
        CSharp: StateMachineBase.ApplyState(Boolean)
        VB: StateMachineBase.ApplyState(Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
        VB: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2908
      summary: "\nActually runs the loop which sets the state of all objects in the list.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool ApplyState(bool stateForAll)
          VB: Protected MustOverride Function ApplyState(stateForAll As Boolean) As Boolean
        parameters:
        - id: stateForAll
          type: System.Boolean
          description: State to apply for all.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.ApplyState*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Int32, Boolean)
        VB: ApplyState(Int32, Boolean)
      nameWithType:
        CSharp: StateMachineBase.ApplyState(Int32, Boolean)
        VB: StateMachineBase.ApplyState(Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.ApplyState(System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachineBase.ApplyState(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2916
      summary: "\nActually applies the new state to the selected object.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool ApplyState(int newSelectionIndex, bool stateAtThisObject)
          VB: Protected MustOverride Function ApplyState(newSelectionIndex As Integer, stateAtThisObject As Boolean) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: The index of the object to update.
        - id: stateAtThisObject
          type: System.Boolean
          description: The state to provide that object with.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.ApplyState*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Int32, Int32, Boolean)
        VB: ApplyState(Int32, Int32, Boolean)
      nameWithType:
        CSharp: StateMachineBase.ApplyState(Int32, Int32, Boolean)
        VB: StateMachineBase.ApplyState(Int32, Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.ApplyState(System.Int32, System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachineBase.ApplyState(System.Int32, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2925
      summary: "\nActually runs the loop which applies your given range of objects and the rest with another.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool ApplyState(int startIndex, int length, bool stateToApply)
          VB: Protected MustOverride Function ApplyState(startIndex As Integer, length As Integer, stateToApply As Boolean) As Boolean
        parameters:
        - id: startIndex
          type: System.Int32
          description: Where to start applying your state (inclusive).
        - id: length
          type: System.Int32
          description: How many objects to affect.
        - id: stateToApply
          type: System.Boolean
          description: The state to apply within your given range.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineBase.ApplyState*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      commentId: M:ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      language: CSharp
      name:
        CSharp: CheckListBeforeUpdate()
        VB: CheckListBeforeUpdate()
      nameWithType:
        CSharp: StateMachineBase.CheckListBeforeUpdate()
        VB: StateMachineBase.CheckListBeforeUpdate()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate()
        VB: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckListBeforeUpdate
        path: ''
        startLine: 2932
      summary: "\nChecks if the list is null. Since the list can be a varying type, defining this as \nan abstract function is needed to help reduce code.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool CheckListBeforeUpdate()
          VB: Protected MustOverride Function CheckListBeforeUpdate As Boolean
        return:
          type: System.Boolean
          description: If the list is null or not.
      overload: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
      commentId: M:ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: CheckSelectionIndexBeforeUpdate(Int32)
        VB: CheckSelectionIndexBeforeUpdate(Int32)
      nameWithType:
        CSharp: StateMachineBase.CheckSelectionIndexBeforeUpdate(Int32)
        VB: StateMachineBase.CheckSelectionIndexBeforeUpdate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
        VB: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckSelectionIndexBeforeUpdate
        path: ''
        startLine: 2939
      summary: "\nChecks if the index is greater than -1 but less than the length of the list.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool CheckSelectionIndexBeforeUpdate(int objectIndex)
          VB: Protected MustOverride Function CheckSelectionIndexBeforeUpdate(objectIndex As Integer) As Boolean
        parameters:
        - id: objectIndex
          type: System.Int32
          description: The index of the object to check.
        return:
          type: System.Boolean
          description: True if the index is within a range that won&apos;t throw an out of range exception.
      overload: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
      commentId: M:ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: CheckListItemBeforeUpdate(Int32)
        VB: CheckListItemBeforeUpdate(Int32)
      nameWithType:
        CSharp: StateMachineBase.CheckListItemBeforeUpdate(Int32)
        VB: StateMachineBase.CheckListItemBeforeUpdate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
        VB: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckListItemBeforeUpdate
        path: ''
        startLine: 2947
      summary: "\nChecks if an item in the list is null. Since the list can be a varying type, defining this as \nan abstract function is needed to help reduce code.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract bool CheckListItemBeforeUpdate(int objectIndex)
          VB: Protected MustOverride Function CheckListItemBeforeUpdate(objectIndex As Integer) As Boolean
        parameters:
        - id: objectIndex
          type: System.Int32
          description: The index of the object to check.
        return:
          type: System.Boolean
          description: If the item is null or not.
      overload: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
  - id: ScriptableFramework.StateMachineController
    commentId: T:ScriptableFramework.StateMachineController
    language: CSharp
    name:
      CSharp: StateMachineController
      VB: StateMachineController
    nameWithType:
      CSharp: StateMachineController
      VB: StateMachineController
    qualifiedName:
      CSharp: ScriptableFramework.StateMachineController
      VB: ScriptableFramework.StateMachineController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StateMachineController
      path: ''
      startLine: 2960
    summary: "\nA high level wrapper class that encapsulates a list of <code>StateMachine</code>s and drives the active state of each\nsub object according to a given list index that represents a state.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateMachineController : StateMachineBase'
        VB: >-
          Public Class StateMachineController

              Inherits StateMachineBase
    inheritance:
    - System.Object
    - ScriptableFramework.RuntimeObject
    - ScriptableFramework.StateMachineBase
    inheritedMembers:
    - ScriptableFramework.StateMachineBase.defaultState
    - ScriptableFramework.StateMachineBase.selectionIndex
    - ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
    - ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
    - ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
    - ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.StateMachineController.subStateMachines
      commentId: F:ScriptableFramework.StateMachineController.subStateMachines
      language: CSharp
      name:
        CSharp: subStateMachines
        VB: subStateMachines
      nameWithType:
        CSharp: StateMachineController.subStateMachines
        VB: StateMachineController.subStateMachines
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.subStateMachines
        VB: ScriptableFramework.StateMachineController.subStateMachines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: subStateMachines
        path: ''
        startLine: 2968
      summary: "\nA list of StateMachines that represent the current object state. The order of the objects is expected\nto match the order of the states.\n"
      example: []
      syntax:
        content:
          CSharp: public List<StateMachineBase> subStateMachines
          VB: Public subStateMachines As List(Of StateMachineBase)
        return:
          type: Global.List{ScriptableFramework.StateMachineBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateMachineController.ApplyState(System.Int32)
      commentId: M:ScriptableFramework.StateMachineController.ApplyState(System.Int32)
      language: CSharp
      name:
        CSharp: ApplyState(Int32)
        VB: ApplyState(Int32)
      nameWithType:
        CSharp: StateMachineController.ApplyState(Int32)
        VB: StateMachineController.ApplyState(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.ApplyState(System.Int32)
        VB: ScriptableFramework.StateMachineController.ApplyState(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2975
      summary: "\nActually runs the loop which sets each object&apos;s state on or off.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(int newSelectionIndex)
          VB: Protected Overrides Function ApplyState(newSelectionIndex As Integer) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: Index of the state to be active.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineController.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.ApplyState(System.Boolean)
      commentId: M:ScriptableFramework.StateMachineController.ApplyState(System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Boolean)
        VB: ApplyState(Boolean)
      nameWithType:
        CSharp: StateMachineController.ApplyState(Boolean)
        VB: StateMachineController.ApplyState(Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.ApplyState(System.Boolean)
        VB: ScriptableFramework.StateMachineController.ApplyState(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 2994
      summary: "\nActually runs the loop which sets each object&apos;s state on or off.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(bool stateForAll)
          VB: Protected Overrides Function ApplyState(stateForAll As Boolean) As Boolean
        parameters:
        - id: stateForAll
          type: System.Boolean
          description: The new state for all objects.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineController.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.ApplyState(System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachineController.ApplyState(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Int32, Boolean)
        VB: ApplyState(Int32, Boolean)
      nameWithType:
        CSharp: StateMachineController.ApplyState(Int32, Boolean)
        VB: StateMachineController.ApplyState(Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.ApplyState(System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachineController.ApplyState(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 3014
      summary: "\nActually applies the new state to the selected object.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(int newSelectionIndex, bool stateAtThisObject)
          VB: Protected Overrides Function ApplyState(newSelectionIndex As Integer, stateAtThisObject As Boolean) As Boolean
        parameters:
        - id: newSelectionIndex
          type: System.Int32
          description: The index of the object to update.
        - id: stateAtThisObject
          type: System.Boolean
          description: The state to provide that object with.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineController.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.ApplyState(System.Int32,System.Int32,System.Boolean)
      commentId: M:ScriptableFramework.StateMachineController.ApplyState(System.Int32,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: ApplyState(Int32, Int32, Boolean)
        VB: ApplyState(Int32, Int32, Boolean)
      nameWithType:
        CSharp: StateMachineController.ApplyState(Int32, Int32, Boolean)
        VB: StateMachineController.ApplyState(Int32, Int32, Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.ApplyState(System.Int32, System.Int32, System.Boolean)
        VB: ScriptableFramework.StateMachineController.ApplyState(System.Int32, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: ApplyState
        path: ''
        startLine: 3032
      summary: "\nActually runs the loop which applies your given range of objects and the rest with another.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool ApplyState(int startIndex, int length, bool stateToApply)
          VB: Protected Overrides Function ApplyState(startIndex As Integer, length As Integer, stateToApply As Boolean) As Boolean
        parameters:
        - id: startIndex
          type: System.Int32
          description: Where to start applying your state (inclusive).
        - id: length
          type: System.Int32
          description: How many objects to affect.
        - id: stateToApply
          type: System.Boolean
          description: The state to apply within your given range.
        return:
          type: System.Boolean
          description: Whether or not the operation succeeded.
      overload: ScriptableFramework.StateMachineController.ApplyState*
      overridden: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.CheckListBeforeUpdate
      commentId: M:ScriptableFramework.StateMachineController.CheckListBeforeUpdate
      language: CSharp
      name:
        CSharp: CheckListBeforeUpdate()
        VB: CheckListBeforeUpdate()
      nameWithType:
        CSharp: StateMachineController.CheckListBeforeUpdate()
        VB: StateMachineController.CheckListBeforeUpdate()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.CheckListBeforeUpdate()
        VB: ScriptableFramework.StateMachineController.CheckListBeforeUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckListBeforeUpdate
        path: ''
        startLine: 3054
      summary: "\nChecks if the list is null. Since the list can be a varying type, defining this as \nan abstract function is needed to help reduce code.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool CheckListBeforeUpdate()
          VB: Protected Overrides Function CheckListBeforeUpdate As Boolean
        return:
          type: System.Boolean
          description: If the list is null or not.
      overload: ScriptableFramework.StateMachineController.CheckListBeforeUpdate*
      overridden: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate(System.Int32)
      commentId: M:ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: CheckSelectionIndexBeforeUpdate(Int32)
        VB: CheckSelectionIndexBeforeUpdate(Int32)
      nameWithType:
        CSharp: StateMachineController.CheckSelectionIndexBeforeUpdate(Int32)
        VB: StateMachineController.CheckSelectionIndexBeforeUpdate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate(System.Int32)
        VB: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckSelectionIndexBeforeUpdate
        path: ''
        startLine: 3070
      summary: "\nChecks if the index is greater than -1 but less than the length of the list.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool CheckSelectionIndexBeforeUpdate(int objectIndex)
          VB: Protected Overrides Function CheckSelectionIndexBeforeUpdate(objectIndex As Integer) As Boolean
        parameters:
        - id: objectIndex
          type: System.Int32
          description: The index of the object to check.
        return:
          type: System.Boolean
          description: True if the index is within a range that won&apos;t throw an out of range exception.
      overload: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate*
      overridden: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate(System.Int32)
      commentId: M:ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: CheckListItemBeforeUpdate(Int32)
        VB: CheckListItemBeforeUpdate(Int32)
      nameWithType:
        CSharp: StateMachineController.CheckListItemBeforeUpdate(Int32)
        VB: StateMachineController.CheckListItemBeforeUpdate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate(System.Int32)
        VB: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: CheckListItemBeforeUpdate
        path: ''
        startLine: 3087
      summary: "\nChecks if an item in the list is null. Since the list can be a varying type, defining this as \nan abstract function is needed to help reduce code.\n"
      example: []
      syntax:
        content:
          CSharp: protected override bool CheckListItemBeforeUpdate(int objectIndex)
          VB: Protected Overrides Function CheckListItemBeforeUpdate(objectIndex As Integer) As Boolean
        parameters:
        - id: objectIndex
          type: System.Int32
          description: The index of the object to check.
        return:
          type: System.Boolean
          description: If the item is null or not.
      overload: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate*
      overridden: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ScriptableFramework.StateMachineController.Clear
      commentId: M:ScriptableFramework.StateMachineController.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: StateMachineController.Clear()
        VB: StateMachineController.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.Clear()
        VB: ScriptableFramework.StateMachineController.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Clear
        path: ''
        startLine: 3101
      summary: "\nIf the list is not null, and has a count beyond 0, sets the current state according to <code>defaultState</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Clear()
          VB: Public Overrides Sub Clear
      overload: ScriptableFramework.StateMachineController.Clear*
      overridden: ScriptableFramework.RuntimeObject.Clear
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.StateMachineController.Reset
      commentId: M:ScriptableFramework.StateMachineController.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: StateMachineController.Reset()
        VB: StateMachineController.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.StateMachineController.Reset()
        VB: ScriptableFramework.StateMachineController.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: Reset
        path: ''
        startLine: 3129
      summary: "\nCalls <code>Clear ()</code>\n"
      example: []
      syntax:
        content:
          CSharp: public override void Reset()
          VB: Public Overrides Sub Reset
      overload: ScriptableFramework.StateMachineController.Reset*
      overridden: ScriptableFramework.RuntimeObject.Reset
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.StateMachineReset
    commentId: T:ScriptableFramework.StateMachineReset
    language: CSharp
    name:
      CSharp: StateMachineReset
      VB: StateMachineReset
    nameWithType:
      CSharp: StateMachineReset
      VB: StateMachineReset
    qualifiedName:
      CSharp: ScriptableFramework.StateMachineReset
      VB: ScriptableFramework.StateMachineReset
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StateMachineReset
      path: ''
      startLine: 3146
    summary: "\nIf using the StateMachineAPI in your scene, it is recommended to have an instance of this in your scene as well\nto allow for proper initialisation.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateMachineReset : MonoBehaviour'
        VB: >-
          Public Class StateMachineReset

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.StateToggle
    commentId: T:ScriptableFramework.StateToggle
    language: CSharp
    name:
      CSharp: StateToggle
      VB: StateToggle
    nameWithType:
      CSharp: StateToggle
      VB: StateToggle
    qualifiedName:
      CSharp: ScriptableFramework.StateToggle
      VB: ScriptableFramework.StateToggle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework
    source:
      id: StateToggle
      path: ''
      startLine: 3169
    summary: "\nA helper component designed for quickly allowing control over a StateMachine by hooking it up to Toggles through\ndynamic function assignment. The Toggle would also respond to changes made to the StateMachine.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StateToggle : MonoBehaviour'
        VB: >-
          Public Class StateToggle

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.StateToggle.stateMachine
      commentId: F:ScriptableFramework.StateToggle.stateMachine
      language: CSharp
      name:
        CSharp: stateMachine
        VB: stateMachine
      nameWithType:
        CSharp: StateToggle.stateMachine
        VB: StateToggle.stateMachine
      qualifiedName:
        CSharp: ScriptableFramework.StateToggle.stateMachine
        VB: ScriptableFramework.StateToggle.stateMachine
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: stateMachine
        path: ''
        startLine: 3177
      summary: "\nThe StateMachine being controlled.\n"
      example: []
      syntax:
        content:
          CSharp: public StateMachine stateMachine
          VB: Public stateMachine As StateMachine
        return:
          type: ScriptableFramework.StateMachine
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateToggle.events
      commentId: F:ScriptableFramework.StateToggle.events
      language: CSharp
      name:
        CSharp: events
        VB: events
      nameWithType:
        CSharp: StateToggle.events
        VB: StateToggle.events
      qualifiedName:
        CSharp: ScriptableFramework.StateToggle.events
        VB: ScriptableFramework.StateToggle.events
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: events
        path: ''
        startLine: 3182
      summary: "\nAn array of events to collectively run when the toggle is fired.\n"
      example: []
      syntax:
        content:
          CSharp: public AppEvent[] events
          VB: Public events As AppEvent()
        return:
          type: ScriptableFramework.AppEvent[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateToggle.UpdateStateMachine(System.Boolean)
      commentId: M:ScriptableFramework.StateToggle.UpdateStateMachine(System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateStateMachine(Boolean)
        VB: UpdateStateMachine(Boolean)
      nameWithType:
        CSharp: StateToggle.UpdateStateMachine(Boolean)
        VB: StateToggle.UpdateStateMachine(Boolean)
      qualifiedName:
        CSharp: ScriptableFramework.StateToggle.UpdateStateMachine(System.Boolean)
        VB: ScriptableFramework.StateToggle.UpdateStateMachine(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: UpdateStateMachine
        path: ''
        startLine: 3202
      summary: "\nThe Toggle calls this function to update the StateMachine state according to its sibling index.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateStateMachine(bool value)
          VB: Public Sub UpdateStateMachine(value As Boolean)
        parameters:
        - id: value
          type: System.Boolean
          description: ''
      overload: ScriptableFramework.StateToggle.UpdateStateMachine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.StateToggle.RespondToStateMachineChange(System.Int32)
      commentId: M:ScriptableFramework.StateToggle.RespondToStateMachineChange(System.Int32)
      language: CSharp
      name:
        CSharp: RespondToStateMachineChange(Int32)
        VB: RespondToStateMachineChange(Int32)
      nameWithType:
        CSharp: StateToggle.RespondToStateMachineChange(Int32)
        VB: StateToggle.RespondToStateMachineChange(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.StateToggle.RespondToStateMachineChange(System.Int32)
        VB: ScriptableFramework.StateToggle.RespondToStateMachineChange(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework
      source:
        id: RespondToStateMachineChange
        path: ''
        startLine: 3222
      summary: "\nIf the StateMachine were to be updated through some other means, use this function as a response to an int event\nand pass that value here to make the Toggle reflect the state of the StateMachine.\n"
      example: []
      syntax:
        content:
          CSharp: public void RespondToStateMachineChange(int activeIndex)
          VB: Public Sub RespondToStateMachineChange(activeIndex As Integer)
        parameters:
        - id: activeIndex
          type: System.Int32
          description: ''
      overload: ScriptableFramework.StateToggle.RespondToStateMachineChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: ScriptableFramework.CustomEditors
  commentId: N:ScriptableFramework.CustomEditors
  language: CSharp
  name:
    CSharp: ScriptableFramework.CustomEditors
    VB: ScriptableFramework.CustomEditors
  nameWithType:
    CSharp: ScriptableFramework.CustomEditors
    VB: ScriptableFramework.CustomEditors
  qualifiedName:
    CSharp: ScriptableFramework.CustomEditors
    VB: ScriptableFramework.CustomEditors
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: ScriptableFramework.CustomEditors.AppVersionEditor
    commentId: T:ScriptableFramework.CustomEditors.AppVersionEditor
    language: CSharp
    name:
      CSharp: AppVersionEditor
      VB: AppVersionEditor
    nameWithType:
      CSharp: AppVersionEditor
      VB: AppVersionEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.AppVersionEditor
      VB: ScriptableFramework.CustomEditors.AppVersionEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: AppVersionEditor
      path: ''
      startLine: 3235
    syntax:
      content:
        CSharp: 'public class AppVersionEditor : Editor'
        VB: >-
          Public Class AppVersionEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable
      commentId: M:ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: AppVersionEditor.OnEnable()
        VB: AppVersionEditor.OnEnable()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable()
        VB: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnEnable
        path: ''
        startLine: 3240
      syntax:
        content:
          CSharp: public void OnEnable()
          VB: Public Sub OnEnable
      overload: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI
      commentId: M:ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: AppVersionEditor.OnInspectorGUI()
        VB: AppVersionEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI()
        VB: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 3246
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.DataStringEditor
    commentId: T:ScriptableFramework.CustomEditors.DataStringEditor
    language: CSharp
    name:
      CSharp: DataStringEditor
      VB: DataStringEditor
    nameWithType:
      CSharp: DataStringEditor
      VB: DataStringEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.DataStringEditor
      VB: ScriptableFramework.CustomEditors.DataStringEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: DataStringEditor
      path: ''
      startLine: 3265
    syntax:
      content:
        CSharp: 'public class DataStringEditor : PropertyDrawer'
        VB: >-
          Public Class DataStringEditor

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:ScriptableFramework.CustomEditors.DataStringEditor.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: DataStringEditor.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: DataStringEditor.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnGUI
        path: ''
        startLine: 3268
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor
    commentId: T:ScriptableFramework.CustomEditors.RuntimeObjectEditor
    language: CSharp
    name:
      CSharp: RuntimeObjectEditor
      VB: RuntimeObjectEditor
    nameWithType:
      CSharp: RuntimeObjectEditor
      VB: RuntimeObjectEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.RuntimeObjectEditor
      VB: ScriptableFramework.CustomEditors.RuntimeObjectEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: RuntimeObjectEditor
      path: ''
      startLine: 3287
    syntax:
      content:
        CSharp: 'public class RuntimeObjectEditor : EditorOverride'
        VB: >-
          Public Class RuntimeObjectEditor

              Inherits EditorOverride
    inheritance:
    - System.Object
    - ScriptableFramework.CustomEditors.EditorOverride
    inheritedMembers:
    - ScriptableFramework.CustomEditors.EditorOverride.cache
    - ScriptableFramework.CustomEditors.EditorOverride.props
    - ScriptableFramework.CustomEditors.EditorOverride.propScript
    - ScriptableFramework.CustomEditors.EditorOverride.type
    - ScriptableFramework.CustomEditors.EditorOverride.length
    - ScriptableFramework.CustomEditors.EditorOverride.objectFields
    - ScriptableFramework.CustomEditors.EditorOverride.initialized
    - ScriptableFramework.CustomEditors.EditorOverride.colors
    - ScriptableFramework.CustomEditors.EditorOverride.prevFold
    - ScriptableFramework.CustomEditors.EditorOverride.style
    - ScriptableFramework.CustomEditors.EditorOverride.Awake
    - ScriptableFramework.CustomEditors.EditorOverride.OnDisable
    - ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
      commentId: M:ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: RuntimeObjectEditor.OnEnable()
        VB: RuntimeObjectEditor.OnEnable()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable()
        VB: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnEnable
        path: ''
        startLine: 3294
      syntax:
        content:
          CSharp: public override void OnEnable()
          VB: Public Overrides Sub OnEnable
      overload: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable*
      overridden: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
      commentId: M:ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: RuntimeObjectEditor.OnInspectorGUI()
        VB: RuntimeObjectEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI()
        VB: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 3301
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI*
      overridden: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
    commentId: T:ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
    language: CSharp
    name:
      CSharp: RuntimeObjectManagerEditor
      VB: RuntimeObjectManagerEditor
    nameWithType:
      CSharp: RuntimeObjectManagerEditor
      VB: RuntimeObjectManagerEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
      VB: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: RuntimeObjectManagerEditor
      path: ''
      startLine: 3327
    syntax:
      content:
        CSharp: public static class RuntimeObjectManagerEditor
        VB: Public Module RuntimeObjectManagerEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem
      commentId: M:ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem
      language: CSharp
      name:
        CSharp: ResetAllMenuItem()
        VB: ResetAllMenuItem()
      nameWithType:
        CSharp: RuntimeObjectManagerEditor.ResetAllMenuItem()
        VB: RuntimeObjectManagerEditor.ResetAllMenuItem()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem()
        VB: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: ResetAllMenuItem
        path: ''
        startLine: 3329
      syntax:
        content:
          CSharp: public static void ResetAllMenuItem()
          VB: Public Shared Sub ResetAllMenuItem
      overload: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem
      commentId: M:ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem
      language: CSharp
      name:
        CSharp: ClearAllMenuItem()
        VB: ClearAllMenuItem()
      nameWithType:
        CSharp: RuntimeObjectManagerEditor.ClearAllMenuItem()
        VB: RuntimeObjectManagerEditor.ClearAllMenuItem()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem()
        VB: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: ClearAllMenuItem
        path: ''
        startLine: 3335
      syntax:
        content:
          CSharp: public static void ClearAllMenuItem()
          VB: Public Shared Sub ClearAllMenuItem
      overload: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ScriptableFramework.CustomEditors.SceneAssetEditor
    commentId: T:ScriptableFramework.CustomEditors.SceneAssetEditor
    language: CSharp
    name:
      CSharp: SceneAssetEditor
      VB: SceneAssetEditor
    nameWithType:
      CSharp: SceneAssetEditor
      VB: SceneAssetEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.SceneAssetEditor
      VB: ScriptableFramework.CustomEditors.SceneAssetEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: SceneAssetEditor
      path: ''
      startLine: 3357
    summary: "\nEditor for a scene asset that can display error prompts and offer\nsolutions when the scene is not valid.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SceneAssetEditor : PropertyDrawer'
        VB: >-
          Public Class SceneAssetEditor

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: SceneAssetEditor.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: SceneAssetEditor.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnGUI
        path: ''
        startLine: 3387
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.EditorOverride
    commentId: T:ScriptableFramework.CustomEditors.EditorOverride
    language: CSharp
    name:
      CSharp: EditorOverride
      VB: EditorOverride
    nameWithType:
      CSharp: EditorOverride
      VB: EditorOverride
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.EditorOverride
      VB: ScriptableFramework.CustomEditors.EditorOverride
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: EditorOverride
      path: ''
      startLine: 3606
    syntax:
      content:
        CSharp: 'public class EditorOverride : Editor'
        VB: >-
          Public Class EditorOverride

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.EditorOverride.cache
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.cache
      language: CSharp
      name:
        CSharp: cache
        VB: cache
      nameWithType:
        CSharp: EditorOverride.cache
        VB: EditorOverride.cache
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.cache
        VB: ScriptableFramework.CustomEditors.EditorOverride.cache
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: cache
        path: ''
        startLine: 3610
      syntax:
        content:
          CSharp: protected Dictionary<string, EditorOverride.Cache> cache
          VB: Protected cache As Dictionary(Of String, EditorOverride.Cache)
        return:
          type: Global.Dictionary{System.String,ScriptableFramework.CustomEditors.EditorOverride.Cache}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.props
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.props
      language: CSharp
      name:
        CSharp: props
        VB: props
      nameWithType:
        CSharp: EditorOverride.props
        VB: EditorOverride.props
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.props
        VB: ScriptableFramework.CustomEditors.EditorOverride.props
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: props
        path: ''
        startLine: 3611
      syntax:
        content:
          CSharp: protected List<SerializedProperty> props
          VB: Protected props As List(Of SerializedProperty)
        return:
          type: Global.List{SerializedProperty}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.propScript
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.propScript
      language: CSharp
      name:
        CSharp: propScript
        VB: propScript
      nameWithType:
        CSharp: EditorOverride.propScript
        VB: EditorOverride.propScript
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.propScript
        VB: ScriptableFramework.CustomEditors.EditorOverride.propScript
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: propScript
        path: ''
        startLine: 3612
      syntax:
        content:
          CSharp: protected SerializedProperty propScript
          VB: Protected propScript As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.type
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: EditorOverride.type
        VB: EditorOverride.type
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.type
        VB: ScriptableFramework.CustomEditors.EditorOverride.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: type
        path: ''
        startLine: 3613
      syntax:
        content:
          CSharp: protected Type type
          VB: Protected type As Type
        return:
          type: Global.Type
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.length
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.length
      language: CSharp
      name:
        CSharp: length
        VB: length
      nameWithType:
        CSharp: EditorOverride.length
        VB: EditorOverride.length
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.length
        VB: ScriptableFramework.CustomEditors.EditorOverride.length
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: length
        path: ''
        startLine: 3614
      syntax:
        content:
          CSharp: protected int length
          VB: Protected length As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.objectFields
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.objectFields
      language: CSharp
      name:
        CSharp: objectFields
        VB: objectFields
      nameWithType:
        CSharp: EditorOverride.objectFields
        VB: EditorOverride.objectFields
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.objectFields
        VB: ScriptableFramework.CustomEditors.EditorOverride.objectFields
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: objectFields
        path: ''
        startLine: 3615
      syntax:
        content:
          CSharp: protected List<FieldInfo> objectFields
          VB: Protected objectFields As List(Of FieldInfo)
        return:
          type: Global.List{FieldInfo}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.initialized
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.initialized
      language: CSharp
      name:
        CSharp: initialized
        VB: initialized
      nameWithType:
        CSharp: EditorOverride.initialized
        VB: EditorOverride.initialized
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.initialized
        VB: ScriptableFramework.CustomEditors.EditorOverride.initialized
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: initialized
        path: ''
        startLine: 3616
      syntax:
        content:
          CSharp: protected bool initialized
          VB: Protected initialized As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.colors
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: EditorOverride.colors
        VB: EditorOverride.colors
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.colors
        VB: ScriptableFramework.CustomEditors.EditorOverride.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: colors
        path: ''
        startLine: 3617
      syntax:
        content:
          CSharp: protected EditorOverride.Colors colors
          VB: Protected colors As EditorOverride.Colors
        return:
          type: ScriptableFramework.CustomEditors.EditorOverride.Colors
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.prevFold
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.prevFold
      language: CSharp
      name:
        CSharp: prevFold
        VB: prevFold
      nameWithType:
        CSharp: EditorOverride.prevFold
        VB: EditorOverride.prevFold
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.prevFold
        VB: ScriptableFramework.CustomEditors.EditorOverride.prevFold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: prevFold
        path: ''
        startLine: 3618
      syntax:
        content:
          CSharp: protected FoldoutAttribute prevFold
          VB: Protected prevFold As FoldoutAttribute
        return:
          type: ScriptableFramework.FoldoutAttribute
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.style
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.style
      language: CSharp
      name:
        CSharp: style
        VB: style
      nameWithType:
        CSharp: EditorOverride.style
        VB: EditorOverride.style
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.style
        VB: ScriptableFramework.CustomEditors.EditorOverride.style
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: style
        path: ''
        startLine: 3619
      syntax:
        content:
          CSharp: protected GUIStyle style
          VB: Protected style As GUIStyle
        return:
          type: Global.GUIStyle
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ScriptableFramework.CustomEditors.EditorOverride.Awake
      commentId: M:ScriptableFramework.CustomEditors.EditorOverride.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: EditorOverride.Awake()
        VB: EditorOverride.Awake()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Awake()
        VB: ScriptableFramework.CustomEditors.EditorOverride.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: Awake
        path: ''
        startLine: 3621
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: ScriptableFramework.CustomEditors.EditorOverride.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
      commentId: M:ScriptableFramework.CustomEditors.EditorOverride.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: EditorOverride.OnEnable()
        VB: EditorOverride.OnEnable()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.OnEnable()
        VB: ScriptableFramework.CustomEditors.EditorOverride.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnEnable
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: public virtual void OnEnable()
          VB: Public Overridable Sub OnEnable
      overload: ScriptableFramework.CustomEditors.EditorOverride.OnEnable*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
      commentId: M:ScriptableFramework.CustomEditors.EditorOverride.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: EditorOverride.OnDisable()
        VB: EditorOverride.OnDisable()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.OnDisable()
        VB: ScriptableFramework.CustomEditors.EditorOverride.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnDisable
        path: ''
        startLine: 3682
      syntax:
        content:
          CSharp: public virtual void OnDisable()
          VB: Public Overridable Sub OnDisable
      overload: ScriptableFramework.CustomEditors.EditorOverride.OnDisable*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
      commentId: M:ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: EditorOverride.OnInspectorGUI()
        VB: EditorOverride.OnInspectorGUI()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI()
        VB: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 3691
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
      commentId: M:ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
      language: CSharp
      name:
        CSharp: HandleProp(SerializedProperty)
        VB: HandleProp(SerializedProperty)
      nameWithType:
        CSharp: EditorOverride.HandleProp(SerializedProperty)
        VB: EditorOverride.HandleProp(SerializedProperty)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
        VB: ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: HandleProp
        path: ''
        startLine: 3814
      syntax:
        content:
          CSharp: public void HandleProp(SerializedProperty prop)
          VB: Public Sub HandleProp(prop As SerializedProperty)
        parameters:
        - id: prop
          type: Global.SerializedProperty
      overload: ScriptableFramework.CustomEditors.EditorOverride.HandleProp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.CustomEditors.EditorOverride.Colors
    commentId: T:ScriptableFramework.CustomEditors.EditorOverride.Colors
    language: CSharp
    name:
      CSharp: EditorOverride.Colors
      VB: EditorOverride.Colors
    nameWithType:
      CSharp: EditorOverride.Colors
      VB: EditorOverride.Colors
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.EditorOverride.Colors
      VB: ScriptableFramework.CustomEditors.EditorOverride.Colors
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: Colors
      path: ''
      startLine: 3836
    syntax:
      content:
        CSharp: protected struct Colors
        VB: Protected Structure Colors
    modifiers:
      CSharp:
      - protected
      - struct
      VB:
      - Protected
      - Structure
    items:
    - id: ScriptableFramework.CustomEditors.EditorOverride.Colors.col0
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Colors.col0
      language: CSharp
      name:
        CSharp: col0
        VB: col0
      nameWithType:
        CSharp: EditorOverride.Colors.col0
        VB: EditorOverride.Colors.col0
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Colors.col0
        VB: ScriptableFramework.CustomEditors.EditorOverride.Colors.col0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: col0
        path: ''
        startLine: 3838
      syntax:
        content:
          CSharp: public Color col0
          VB: Public col0 As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.EditorOverride.Colors.col1
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Colors.col1
      language: CSharp
      name:
        CSharp: col1
        VB: col1
      nameWithType:
        CSharp: EditorOverride.Colors.col1
        VB: EditorOverride.Colors.col1
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Colors.col1
        VB: ScriptableFramework.CustomEditors.EditorOverride.Colors.col1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: col1
        path: ''
        startLine: 3839
      syntax:
        content:
          CSharp: public Color col1
          VB: Public col1 As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.EditorOverride.Colors.col2
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Colors.col2
      language: CSharp
      name:
        CSharp: col2
        VB: col2
      nameWithType:
        CSharp: EditorOverride.Colors.col2
        VB: EditorOverride.Colors.col2
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Colors.col2
        VB: ScriptableFramework.CustomEditors.EditorOverride.Colors.col2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: col2
        path: ''
        startLine: 3840
      syntax:
        content:
          CSharp: public Color col2
          VB: Public col2 As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.CustomEditors.EditorOverride.Cache
    commentId: T:ScriptableFramework.CustomEditors.EditorOverride.Cache
    language: CSharp
    name:
      CSharp: EditorOverride.Cache
      VB: EditorOverride.Cache
    nameWithType:
      CSharp: EditorOverride.Cache
      VB: EditorOverride.Cache
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.EditorOverride.Cache
      VB: ScriptableFramework.CustomEditors.EditorOverride.Cache
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: Cache
      path: ''
      startLine: 3843
    syntax:
      content:
        CSharp: protected class Cache
        VB: Protected Class Cache
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - protected
      - class
      VB:
      - Protected
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.types
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Cache.types
      language: CSharp
      name:
        CSharp: types
        VB: types
      nameWithType:
        CSharp: EditorOverride.Cache.types
        VB: EditorOverride.Cache.types
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Cache.types
        VB: ScriptableFramework.CustomEditors.EditorOverride.Cache.types
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: types
        path: ''
        startLine: 3845
      syntax:
        content:
          CSharp: public HashSet<string> types
          VB: Public types As HashSet(Of String)
        return:
          type: Global.HashSet{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.props
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Cache.props
      language: CSharp
      name:
        CSharp: props
        VB: props
      nameWithType:
        CSharp: EditorOverride.Cache.props
        VB: EditorOverride.Cache.props
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Cache.props
        VB: ScriptableFramework.CustomEditors.EditorOverride.Cache.props
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: props
        path: ''
        startLine: 3846
      syntax:
        content:
          CSharp: public List<SerializedProperty> props
          VB: Public props As List(Of SerializedProperty)
        return:
          type: Global.List{SerializedProperty}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.atr
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Cache.atr
      language: CSharp
      name:
        CSharp: atr
        VB: atr
      nameWithType:
        CSharp: EditorOverride.Cache.atr
        VB: EditorOverride.Cache.atr
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Cache.atr
        VB: ScriptableFramework.CustomEditors.EditorOverride.Cache.atr
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: atr
        path: ''
        startLine: 3847
      syntax:
        content:
          CSharp: public FoldoutAttribute atr
          VB: Public atr As FoldoutAttribute
        return:
          type: ScriptableFramework.FoldoutAttribute
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.expanded
      commentId: F:ScriptableFramework.CustomEditors.EditorOverride.Cache.expanded
      language: CSharp
      name:
        CSharp: expanded
        VB: expanded
      nameWithType:
        CSharp: EditorOverride.Cache.expanded
        VB: EditorOverride.Cache.expanded
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Cache.expanded
        VB: ScriptableFramework.CustomEditors.EditorOverride.Cache.expanded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: expanded
        path: ''
        startLine: 3848
      syntax:
        content:
          CSharp: public bool expanded
          VB: Public expanded As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose
      commentId: M:ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: EditorOverride.Cache.Dispose()
        VB: EditorOverride.Cache.Dispose()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose()
        VB: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: Dispose
        path: ''
        startLine: 3850
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.CustomEditors.FrameworkExtensions
    commentId: T:ScriptableFramework.CustomEditors.FrameworkExtensions
    language: CSharp
    name:
      CSharp: FrameworkExtensions
      VB: FrameworkExtensions
    nameWithType:
      CSharp: FrameworkExtensions
      VB: FrameworkExtensions
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.FrameworkExtensions
      VB: ScriptableFramework.CustomEditors.FrameworkExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: FrameworkExtensions
      path: ''
      startLine: 3859
    syntax:
      content:
        CSharp: public static class FrameworkExtensions
        VB: Public Module FrameworkExtensions
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase(System.String)
      commentId: M:ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase(System.String)
      language: CSharp
      name:
        CSharp: FirstLetterToUpperCase(String)
        VB: FirstLetterToUpperCase(String)
      nameWithType:
        CSharp: FrameworkExtensions.FirstLetterToUpperCase(String)
        VB: FrameworkExtensions.FirstLetterToUpperCase(String)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase(System.String)
        VB: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: FirstLetterToUpperCase
        path: ''
        startLine: 3861
      syntax:
        content:
          CSharp: public static string FirstLetterToUpperCase(this string s)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FirstLetterToUpperCase(s As String) As String
        parameters:
        - id: s
          type: System.String
        return:
          type: System.String
      overload: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree(Type)
      commentId: M:ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree(Type)
      language: CSharp
      name:
        CSharp: GetTypeTree(Type)
        VB: GetTypeTree(Type)
      nameWithType:
        CSharp: FrameworkExtensions.GetTypeTree(Type)
        VB: FrameworkExtensions.GetTypeTree(Type)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree(Type)
        VB: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree(Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: GetTypeTree
        path: ''
        startLine: 3871
      syntax:
        content:
          CSharp: public static IList<Type> GetTypeTree(this Type t)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetTypeTree(t As Type) As IList(Of Type)
        parameters:
        - id: t
          type: Global.Type
        return:
          type: Global.IList{Type}
      overload: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ScriptableFramework.CustomEditors.SearchableEnumDrawer
    commentId: T:ScriptableFramework.CustomEditors.SearchableEnumDrawer
    language: CSharp
    name:
      CSharp: SearchableEnumDrawer
      VB: SearchableEnumDrawer
    nameWithType:
      CSharp: SearchableEnumDrawer
      VB: SearchableEnumDrawer
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.SearchableEnumDrawer
      VB: ScriptableFramework.CustomEditors.SearchableEnumDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: SearchableEnumDrawer
      path: ''
      startLine: 3899
    summary: "\nDraws the custom enum selector popup for enum fileds using the\nSearchableEnumAttribute.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SearchableEnumDrawer : PropertyDrawer'
        VB: >-
          Public Class SearchableEnumDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: SearchableEnumDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: SearchableEnumDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnGUI
        path: ''
        startLine: 3910
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.SearchablePopup
    commentId: T:ScriptableFramework.CustomEditors.SearchablePopup
    language: CSharp
    name:
      CSharp: SearchablePopup
      VB: SearchablePopup
    nameWithType:
      CSharp: SearchablePopup
      VB: SearchablePopup
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.SearchablePopup
      VB: ScriptableFramework.CustomEditors.SearchablePopup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: SearchablePopup
      path: ''
      startLine: 3998
    summary: "\nA popup window that displays a list of options and may use a search\nstring to filter the displayed content. \n"
    example: []
    syntax:
      content:
        CSharp: 'public class SearchablePopup : PopupWindowContent'
        VB: >-
          Public Class SearchablePopup

              Inherits PopupWindowContent
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.SearchablePopup.Show(Rect,System.String[],System.Int32,Action{System.Int32})
      commentId: M:ScriptableFramework.CustomEditors.SearchablePopup.Show(Rect,System.String[],System.Int32,Action{System.Int32})
      language: CSharp
      name:
        CSharp: Show(Rect, String[], Int32, Action<Int32>)
        VB: Show(Rect, String(), Int32, Action(Of Int32))
      nameWithType:
        CSharp: SearchablePopup.Show(Rect, String[], Int32, Action<Int32>)
        VB: SearchablePopup.Show(Rect, String(), Int32, Action(Of Int32))
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SearchablePopup.Show(Rect, System.String[], System.Int32, Action<System.Int32>)
        VB: ScriptableFramework.CustomEditors.SearchablePopup.Show(Rect, System.String(), System.Int32, Action(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: Show
        path: ''
        startLine: 4023
      summary: 'Show a new SearchablePopup. '
      example: []
      syntax:
        content:
          CSharp: public static void Show(Rect activatorRect, string[] options, int current, Action<int> onSelectionMade)
          VB: Public Shared Sub Show(activatorRect As Rect, options As String(), current As Integer, onSelectionMade As Action(Of Integer))
        parameters:
        - id: activatorRect
          type: Global.Rect
          description: "\nRectangle of the button that triggered the popup.\n"
        - id: options
          type: System.String[]
          description: List of strings to choose from.
        - id: current
          type: System.Int32
          description: "\nIndex of the currently selected string.\n"
        - id: onSelectionMade
          type: Global.Action{System.Int32}
          description: "\nCallback to trigger when a choice is made.\n"
      overload: ScriptableFramework.CustomEditors.SearchablePopup.Show*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen
      commentId: M:ScriptableFramework.CustomEditors.SearchablePopup.OnOpen
      language: CSharp
      name:
        CSharp: OnOpen()
        VB: OnOpen()
      nameWithType:
        CSharp: SearchablePopup.OnOpen()
        VB: SearchablePopup.OnOpen()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen()
        VB: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnOpen
        path: ''
        startLine: 4186
      syntax:
        content:
          CSharp: public override void OnOpen()
          VB: Public Overrides Sub OnOpen
      overload: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.CustomEditors.SearchablePopup.OnClose
      commentId: M:ScriptableFramework.CustomEditors.SearchablePopup.OnClose
      language: CSharp
      name:
        CSharp: OnClose()
        VB: OnClose()
      nameWithType:
        CSharp: SearchablePopup.OnClose()
        VB: SearchablePopup.OnClose()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SearchablePopup.OnClose()
        VB: ScriptableFramework.CustomEditors.SearchablePopup.OnClose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnClose
        path: ''
        startLine: 4193
      syntax:
        content:
          CSharp: public override void OnClose()
          VB: Public Overrides Sub OnClose
      overload: ScriptableFramework.CustomEditors.SearchablePopup.OnClose*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize
      commentId: M:ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize
      language: CSharp
      name:
        CSharp: GetWindowSize()
        VB: GetWindowSize()
      nameWithType:
        CSharp: SearchablePopup.GetWindowSize()
        VB: SearchablePopup.GetWindowSize()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize()
        VB: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: GetWindowSize
        path: ''
        startLine: 4199
      syntax:
        content:
          CSharp: public override Vector2 GetWindowSize()
          VB: Public Overrides Function GetWindowSize As Vector2
        return:
          type: Global.Vector2
      overload: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI(Rect)
      commentId: M:ScriptableFramework.CustomEditors.SearchablePopup.OnGUI(Rect)
      language: CSharp
      name:
        CSharp: OnGUI(Rect)
        VB: OnGUI(Rect)
      nameWithType:
        CSharp: SearchablePopup.OnGUI(Rect)
        VB: SearchablePopup.OnGUI(Rect)
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI(Rect)
        VB: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI(Rect)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnGUI
        path: ''
        startLine: 4206
      syntax:
        content:
          CSharp: public override void OnGUI(Rect rect)
          VB: Public Overrides Sub OnGUI(rect As Rect)
        parameters:
        - id: rect
          type: Global.Rect
      overload: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.AppEventEditor
    commentId: T:ScriptableFramework.CustomEditors.AppEventEditor
    language: CSharp
    name:
      CSharp: AppEventEditor
      VB: AppEventEditor
    nameWithType:
      CSharp: AppEventEditor
      VB: AppEventEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.AppEventEditor
      VB: ScriptableFramework.CustomEditors.AppEventEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: AppEventEditor
      path: ''
      startLine: 4355
    syntax:
      content:
        CSharp: 'public class AppEventEditor : RuntimeObjectEditor'
        VB: >-
          Public Class AppEventEditor

              Inherits RuntimeObjectEditor
    inheritance:
    - System.Object
    - ScriptableFramework.CustomEditors.EditorOverride
    - ScriptableFramework.CustomEditors.RuntimeObjectEditor
    inheritedMembers:
    - ScriptableFramework.CustomEditors.EditorOverride.cache
    - ScriptableFramework.CustomEditors.EditorOverride.props
    - ScriptableFramework.CustomEditors.EditorOverride.propScript
    - ScriptableFramework.CustomEditors.EditorOverride.type
    - ScriptableFramework.CustomEditors.EditorOverride.length
    - ScriptableFramework.CustomEditors.EditorOverride.objectFields
    - ScriptableFramework.CustomEditors.EditorOverride.initialized
    - ScriptableFramework.CustomEditors.EditorOverride.colors
    - ScriptableFramework.CustomEditors.EditorOverride.prevFold
    - ScriptableFramework.CustomEditors.EditorOverride.style
    - ScriptableFramework.CustomEditors.EditorOverride.Awake
    - ScriptableFramework.CustomEditors.EditorOverride.OnDisable
    - ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable
      commentId: M:ScriptableFramework.CustomEditors.AppEventEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: AppEventEditor.OnEnable()
        VB: AppEventEditor.OnEnable()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable()
        VB: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnEnable
        path: ''
        startLine: 4360
      syntax:
        content:
          CSharp: public override void OnEnable()
          VB: Public Overrides Sub OnEnable
      overload: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable*
      overridden: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI
      commentId: M:ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: AppEventEditor.OnInspectorGUI()
        VB: AppEventEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI()
        VB: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 4366
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI*
      overridden: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ScriptableFramework.CustomEditors.AppEventListenerEditor
    commentId: T:ScriptableFramework.CustomEditors.AppEventListenerEditor
    language: CSharp
    name:
      CSharp: AppEventListenerEditor
      VB: AppEventListenerEditor
    nameWithType:
      CSharp: AppEventListenerEditor
      VB: AppEventListenerEditor
    qualifiedName:
      CSharp: ScriptableFramework.CustomEditors.AppEventListenerEditor
      VB: ScriptableFramework.CustomEditors.AppEventListenerEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.CustomEditors
    source:
      id: AppEventListenerEditor
      path: ''
      startLine: 4383
    syntax:
      content:
        CSharp: 'public class AppEventListenerEditor : Editor'
        VB: >-
          Public Class AppEventListenerEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable
      commentId: M:ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: AppEventListenerEditor.OnEnable()
        VB: AppEventListenerEditor.OnEnable()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable()
        VB: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnEnable
        path: ''
        startLine: 4389
      syntax:
        content:
          CSharp: public void OnEnable()
          VB: Public Sub OnEnable
      overload: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI
      commentId: M:ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: AppEventListenerEditor.OnInspectorGUI()
        VB: AppEventListenerEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI()
        VB: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.CustomEditors
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 4394
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: ScriptableFramework.Tests
  commentId: N:ScriptableFramework.Tests
  language: CSharp
  name:
    CSharp: ScriptableFramework.Tests
    VB: ScriptableFramework.Tests
  nameWithType:
    CSharp: ScriptableFramework.Tests
    VB: ScriptableFramework.Tests
  qualifiedName:
    CSharp: ScriptableFramework.Tests
    VB: ScriptableFramework.Tests
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: ScriptableFramework.Tests.DataStringTests
    commentId: T:ScriptableFramework.Tests.DataStringTests
    language: CSharp
    name:
      CSharp: DataStringTests
      VB: DataStringTests
    nameWithType:
      CSharp: DataStringTests
      VB: DataStringTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.DataStringTests
      VB: ScriptableFramework.Tests.DataStringTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: DataStringTests
      path: ''
      startLine: 4414
    syntax:
      content:
        CSharp: public class DataStringTests
        VB: Public Class DataStringTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.DataStringTests.AssignFromString
      commentId: M:ScriptableFramework.Tests.DataStringTests.AssignFromString
      language: CSharp
      name:
        CSharp: AssignFromString()
        VB: AssignFromString()
      nameWithType:
        CSharp: DataStringTests.AssignFromString()
        VB: DataStringTests.AssignFromString()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.DataStringTests.AssignFromString()
        VB: ScriptableFramework.Tests.DataStringTests.AssignFromString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AssignFromString
        path: ''
        startLine: 4419
      syntax:
        content:
          CSharp: public void AssignFromString()
          VB: Public Sub AssignFromString
      overload: ScriptableFramework.Tests.DataStringTests.AssignFromString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.DataStringTests.AssignToString
      commentId: M:ScriptableFramework.Tests.DataStringTests.AssignToString
      language: CSharp
      name:
        CSharp: AssignToString()
        VB: AssignToString()
      nameWithType:
        CSharp: DataStringTests.AssignToString()
        VB: DataStringTests.AssignToString()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.DataStringTests.AssignToString()
        VB: ScriptableFramework.Tests.DataStringTests.AssignToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AssignToString
        path: ''
        startLine: 4427
      syntax:
        content:
          CSharp: public void AssignToString()
          VB: Public Sub AssignToString
      overload: ScriptableFramework.Tests.DataStringTests.AssignToString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.DataStringTests.ConvertToString
      commentId: M:ScriptableFramework.Tests.DataStringTests.ConvertToString
      language: CSharp
      name:
        CSharp: ConvertToString()
        VB: ConvertToString()
      nameWithType:
        CSharp: DataStringTests.ConvertToString()
        VB: DataStringTests.ConvertToString()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.DataStringTests.ConvertToString()
        VB: ScriptableFramework.Tests.DataStringTests.ConvertToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ConvertToString
        path: ''
        startLine: 4435
      syntax:
        content:
          CSharp: public void ConvertToString()
          VB: Public Sub ConvertToString
      overload: ScriptableFramework.Tests.DataStringTests.ConvertToString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StringListTests
    commentId: T:ScriptableFramework.Tests.StringListTests
    language: CSharp
    name:
      CSharp: StringListTests
      VB: StringListTests
    nameWithType:
      CSharp: StringListTests
      VB: StringListTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StringListTests
      VB: ScriptableFramework.Tests.StringListTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: StringListTests
      path: ''
      startLine: 4452
    syntax:
      content:
        CSharp: public class StringListTests
        VB: Public Class StringListTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StringListTests.CreateAppEvent
      commentId: M:ScriptableFramework.Tests.StringListTests.CreateAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEvent()
        VB: CreateAppEvent()
      nameWithType:
        CSharp: StringListTests.CreateAppEvent()
        VB: StringListTests.CreateAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StringListTests.CreateAppEvent()
        VB: ScriptableFramework.Tests.StringListTests.CreateAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEvent
        path: ''
        startLine: 4457
      syntax:
        content:
          CSharp: public void CreateAppEvent()
          VB: Public Sub CreateAppEvent
      overload: ScriptableFramework.Tests.StringListTests.CreateAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StringListTests.ToListSize
      commentId: M:ScriptableFramework.Tests.StringListTests.ToListSize
      language: CSharp
      name:
        CSharp: ToListSize()
        VB: ToListSize()
      nameWithType:
        CSharp: StringListTests.ToListSize()
        VB: StringListTests.ToListSize()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StringListTests.ToListSize()
        VB: ScriptableFramework.Tests.StringListTests.ToListSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ToListSize
        path: ''
        startLine: 4468
      syntax:
        content:
          CSharp: public void ToListSize()
          VB: Public Sub ToListSize
      overload: ScriptableFramework.Tests.StringListTests.ToListSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StringListTests.ToListContent
      commentId: M:ScriptableFramework.Tests.StringListTests.ToListContent
      language: CSharp
      name:
        CSharp: ToListContent()
        VB: ToListContent()
      nameWithType:
        CSharp: StringListTests.ToListContent()
        VB: StringListTests.ToListContent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StringListTests.ToListContent()
        VB: ScriptableFramework.Tests.StringListTests.ToListContent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ToListContent
        path: ''
        startLine: 4474
      syntax:
        content:
          CSharp: public void ToListContent()
          VB: Public Sub ToListContent
      overload: ScriptableFramework.Tests.StringListTests.ToListContent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StringListTests.ToArraySize
      commentId: M:ScriptableFramework.Tests.StringListTests.ToArraySize
      language: CSharp
      name:
        CSharp: ToArraySize()
        VB: ToArraySize()
      nameWithType:
        CSharp: StringListTests.ToArraySize()
        VB: StringListTests.ToArraySize()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StringListTests.ToArraySize()
        VB: ScriptableFramework.Tests.StringListTests.ToArraySize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ToArraySize
        path: ''
        startLine: 4480
      syntax:
        content:
          CSharp: public void ToArraySize()
          VB: Public Sub ToArraySize
      overload: ScriptableFramework.Tests.StringListTests.ToArraySize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StringListTests.ToArrayContent
      commentId: M:ScriptableFramework.Tests.StringListTests.ToArrayContent
      language: CSharp
      name:
        CSharp: ToArrayContent()
        VB: ToArrayContent()
      nameWithType:
        CSharp: StringListTests.ToArrayContent()
        VB: StringListTests.ToArrayContent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StringListTests.ToArrayContent()
        VB: ScriptableFramework.Tests.StringListTests.ToArrayContent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ToArrayContent
        path: ''
        startLine: 4486
      syntax:
        content:
          CSharp: public void ToArrayContent()
          VB: Public Sub ToArrayContent
      overload: ScriptableFramework.Tests.StringListTests.ToArrayContent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventGenericTests
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests
    language: CSharp
    name:
      CSharp: AppEventGenericTests
      VB: AppEventGenericTests
    nameWithType:
      CSharp: AppEventGenericTests
      VB: AppEventGenericTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventGenericTests
      VB: ScriptableFramework.Tests.AppEventGenericTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: AppEventGenericTests
      path: ''
      startLine: 4502
    syntax:
      content:
        CSharp: public class AppEventGenericTests
        VB: Public Class AppEventGenericTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
    language: CSharp
    name:
      CSharp: AppEventGenericTests.RegisterListener
      VB: AppEventGenericTests.RegisterListener
    nameWithType:
      CSharp: AppEventGenericTests.RegisterListener
      VB: AppEventGenericTests.RegisterListener
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
      VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RegisterListener
      path: ''
      startLine: 4504
    syntax:
      content:
        CSharp: public class RegisterListener
        VB: Public Class RegisterListener
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent
      language: CSharp
      name:
        CSharp: CreateIntEvent()
        VB: CreateIntEvent()
      nameWithType:
        CSharp: AppEventGenericTests.RegisterListener.CreateIntEvent()
        VB: AppEventGenericTests.RegisterListener.CreateIntEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateIntEvent
        path: ''
        startLine: 4508
      syntax:
        content:
          CSharp: public void CreateIntEvent()
          VB: Public Sub CreateIntEvent
      overload: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventGenericTests.RegisterListener.CreateListener()
        VB: AppEventGenericTests.RegisterListener.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4514
      syntax:
        content:
          CSharp: public IntEventListener CreateListener()
          VB: Public Function CreateListener As IntEventListener
        return:
          type: ScriptableFramework.IntEventListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener
      language: CSharp
      name:
        CSharp: RegersterOneListener()
        VB: RegersterOneListener()
      nameWithType:
        CSharp: AppEventGenericTests.RegisterListener.RegersterOneListener()
        VB: AppEventGenericTests.RegisterListener.RegersterOneListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterOneListener
        path: ''
        startLine: 4519
      syntax:
        content:
          CSharp: public void RegersterOneListener()
          VB: Public Sub RegersterOneListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
      language: CSharp
      name:
        CSharp: RegersterTwoDifferentListeners()
        VB: RegersterTwoDifferentListeners()
      nameWithType:
        CSharp: AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners()
        VB: AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterTwoDifferentListeners
        path: ''
        startLine: 4525
      syntax:
        content:
          CSharp: public void RegersterTwoDifferentListeners()
          VB: Public Sub RegersterTwoDifferentListeners
      overload: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
      language: CSharp
      name:
        CSharp: RegersterTheSameListenerTwice()
        VB: RegersterTheSameListenerTwice()
      nameWithType:
        CSharp: AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice()
        VB: AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterTheSameListenerTwice
        path: ''
        startLine: 4534
      syntax:
        content:
          CSharp: public void RegersterTheSameListenerTwice()
          VB: Public Sub RegersterTheSameListenerTwice
      overload: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener
      language: CSharp
      name:
        CSharp: RegersterNullListener()
        VB: RegersterNullListener()
      nameWithType:
        CSharp: AppEventGenericTests.RegisterListener.RegersterNullListener()
        VB: AppEventGenericTests.RegisterListener.RegersterNullListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterNullListener
        path: ''
        startLine: 4545
      syntax:
        content:
          CSharp: public void RegersterNullListener()
          VB: Public Sub RegersterNullListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
    language: CSharp
    name:
      CSharp: AppEventGenericTests.UnregisterListener
      VB: AppEventGenericTests.UnregisterListener
    nameWithType:
      CSharp: AppEventGenericTests.UnregisterListener
      VB: AppEventGenericTests.UnregisterListener
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
      VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UnregisterListener
      path: ''
      startLine: 4552
    syntax:
      content:
        CSharp: public class UnregisterListener
        VB: Public Class UnregisterListener
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent
      language: CSharp
      name:
        CSharp: CreateIntEvent()
        VB: CreateIntEvent()
      nameWithType:
        CSharp: AppEventGenericTests.UnregisterListener.CreateIntEvent()
        VB: AppEventGenericTests.UnregisterListener.CreateIntEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent()
        VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateIntEvent
        path: ''
        startLine: 4556
      syntax:
        content:
          CSharp: public void CreateIntEvent()
          VB: Public Sub CreateIntEvent
      overload: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventGenericTests.UnregisterListener.CreateListener()
        VB: AppEventGenericTests.UnregisterListener.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4562
      syntax:
        content:
          CSharp: public IntEventListener CreateListener()
          VB: Public Function CreateListener As IntEventListener
        return:
          type: ScriptableFramework.IntEventListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener
      language: CSharp
      name:
        CSharp: UnregersterOneListener()
        VB: UnregersterOneListener()
      nameWithType:
        CSharp: AppEventGenericTests.UnregisterListener.UnregersterOneListener()
        VB: AppEventGenericTests.UnregisterListener.UnregersterOneListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterOneListener
        path: ''
        startLine: 4567
      syntax:
        content:
          CSharp: public void UnregersterOneListener()
          VB: Public Sub UnregersterOneListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
      language: CSharp
      name:
        CSharp: UnregersterTwoDifferentListeners()
        VB: UnregersterTwoDifferentListeners()
      nameWithType:
        CSharp: AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners()
        VB: AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners()
        VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterTwoDifferentListeners
        path: ''
        startLine: 4577
      syntax:
        content:
          CSharp: public void UnregersterTwoDifferentListeners()
          VB: Public Sub UnregersterTwoDifferentListeners
      overload: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
      language: CSharp
      name:
        CSharp: UnregersterTheSameListenerTwice()
        VB: UnregersterTheSameListenerTwice()
      nameWithType:
        CSharp: AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice()
        VB: AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice()
        VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterTheSameListenerTwice
        path: ''
        startLine: 4592
      syntax:
        content:
          CSharp: public void UnregersterTheSameListenerTwice()
          VB: Public Sub UnregersterTheSameListenerTwice
      overload: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener
      language: CSharp
      name:
        CSharp: UnregersterNullListener()
        VB: UnregersterNullListener()
      nameWithType:
        CSharp: AppEventGenericTests.UnregisterListener.UnregersterNullListener()
        VB: AppEventGenericTests.UnregisterListener.UnregersterNullListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterNullListener
        path: ''
        startLine: 4606
      syntax:
        content:
          CSharp: public void UnregersterNullListener()
          VB: Public Sub UnregersterNullListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
    language: CSharp
    name:
      CSharp: AppEventGenericTests.RaiseEvent
      VB: AppEventGenericTests.RaiseEvent
    nameWithType:
      CSharp: AppEventGenericTests.RaiseEvent
      VB: AppEventGenericTests.RaiseEvent
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
      VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RaiseEvent
      path: ''
      startLine: 4615
    syntax:
      content:
        CSharp: public class RaiseEvent
        VB: Public Class RaiseEvent
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent
      language: CSharp
      name:
        CSharp: CreateIntEvent()
        VB: CreateIntEvent()
      nameWithType:
        CSharp: AppEventGenericTests.RaiseEvent.CreateIntEvent()
        VB: AppEventGenericTests.RaiseEvent.CreateIntEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateIntEvent
        path: ''
        startLine: 4619
      syntax:
        content:
          CSharp: public void CreateIntEvent()
          VB: Public Sub CreateIntEvent
      overload: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventGenericTests.RaiseEvent.CreateListener()
        VB: AppEventGenericTests.RaiseEvent.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4625
      syntax:
        content:
          CSharp: public IntEventListener CreateListener()
          VB: Public Function CreateListener As IntEventListener
        return:
          type: ScriptableFramework.IntEventListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
      language: CSharp
      name:
        CSharp: RaiseEventWithZeroListeners()
        VB: RaiseEventWithZeroListeners()
      nameWithType:
        CSharp: AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners()
        VB: AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithZeroListeners
        path: ''
        startLine: 4630
      syntax:
        content:
          CSharp: public void RaiseEventWithZeroListeners()
          VB: Public Sub RaiseEventWithZeroListeners
      overload: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener
      language: CSharp
      name:
        CSharp: RaiseEventWithListener()
        VB: RaiseEventWithListener()
      nameWithType:
        CSharp: AppEventGenericTests.RaiseEvent.RaiseEventWithListener()
        VB: AppEventGenericTests.RaiseEvent.RaiseEventWithListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithListener
        path: ''
        startLine: 4636
      syntax:
        content:
          CSharp: public void RaiseEventWithListener()
          VB: Public Sub RaiseEventWithListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
      language: CSharp
      name:
        CSharp: RaiseEventWithNullListener()
        VB: RaiseEventWithNullListener()
      nameWithType:
        CSharp: AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener()
        VB: AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithNullListener
        path: ''
        startLine: 4644
      syntax:
        content:
          CSharp: public void RaiseEventWithNullListener()
          VB: Public Sub RaiseEventWithNullListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
      language: CSharp
      name:
        CSharp: RaiseEventWithListenerAndDefaultParameter()
        VB: RaiseEventWithListenerAndDefaultParameter()
      nameWithType:
        CSharp: AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter()
        VB: AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter()
        VB: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithListenerAndDefaultParameter
        path: ''
        startLine: 4652
      syntax:
        content:
          CSharp: public void RaiseEventWithListenerAndDefaultParameter()
          VB: Public Sub RaiseEventWithListenerAndDefaultParameter
      overload: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.ClearData
    language: CSharp
    name:
      CSharp: AppEventGenericTests.ClearData
      VB: AppEventGenericTests.ClearData
    nameWithType:
      CSharp: AppEventGenericTests.ClearData
      VB: AppEventGenericTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventGenericTests.ClearData
      VB: ScriptableFramework.Tests.AppEventGenericTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 4663
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent
      language: CSharp
      name:
        CSharp: CreateIntEvent()
        VB: CreateIntEvent()
      nameWithType:
        CSharp: AppEventGenericTests.ClearData.CreateIntEvent()
        VB: AppEventGenericTests.ClearData.CreateIntEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent()
        VB: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateIntEvent
        path: ''
        startLine: 4667
      syntax:
        content:
          CSharp: public void CreateIntEvent()
          VB: Public Sub CreateIntEvent
      overload: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventGenericTests.ClearData.CreateListener()
        VB: AppEventGenericTests.ClearData.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener()
        VB: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4673
      syntax:
        content:
          CSharp: public IntEventListener CreateListener()
          VB: Public Function CreateListener As IntEventListener
        return:
          type: ScriptableFramework.IntEventListener
      overload: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: AppEventGenericTests.ClearData.Clear()
        VB: AppEventGenericTests.ClearData.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear()
        VB: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Clear
        path: ''
        startLine: 4678
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset
      commentId: M:ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: AppEventGenericTests.ClearData.Reset()
        VB: AppEventGenericTests.ClearData.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset()
        VB: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Reset
        path: ''
        startLine: 4688
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventTests
    commentId: T:ScriptableFramework.Tests.AppEventTests
    language: CSharp
    name:
      CSharp: AppEventTests
      VB: AppEventTests
    nameWithType:
      CSharp: AppEventTests
      VB: AppEventTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventTests
      VB: ScriptableFramework.Tests.AppEventTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: AppEventTests
      path: ''
      startLine: 4709
    syntax:
      content:
        CSharp: public class AppEventTests
        VB: Public Class AppEventTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.AppEventTests.RegisterListener
    commentId: T:ScriptableFramework.Tests.AppEventTests.RegisterListener
    language: CSharp
    name:
      CSharp: AppEventTests.RegisterListener
      VB: AppEventTests.RegisterListener
    nameWithType:
      CSharp: AppEventTests.RegisterListener
      VB: AppEventTests.RegisterListener
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener
      VB: ScriptableFramework.Tests.AppEventTests.RegisterListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RegisterListener
      path: ''
      startLine: 4711
    syntax:
      content:
        CSharp: public class RegisterListener
        VB: Public Class RegisterListener
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEvent()
        VB: CreateAppEvent()
      nameWithType:
        CSharp: AppEventTests.RegisterListener.CreateAppEvent()
        VB: AppEventTests.RegisterListener.CreateAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent()
        VB: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEvent
        path: ''
        startLine: 4715
      syntax:
        content:
          CSharp: public void CreateAppEvent()
          VB: Public Sub CreateAppEvent
      overload: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventTests.RegisterListener.CreateListener()
        VB: AppEventTests.RegisterListener.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener()
        VB: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4721
      syntax:
        content:
          CSharp: public AppEventListener CreateListener()
          VB: Public Function CreateListener As AppEventListener
        return:
          type: ScriptableFramework.AppEventListener
      overload: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener
      language: CSharp
      name:
        CSharp: RegersterOneListener()
        VB: RegersterOneListener()
      nameWithType:
        CSharp: AppEventTests.RegisterListener.RegersterOneListener()
        VB: AppEventTests.RegisterListener.RegersterOneListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener()
        VB: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterOneListener
        path: ''
        startLine: 4726
      syntax:
        content:
          CSharp: public void RegersterOneListener()
          VB: Public Sub RegersterOneListener
      overload: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners
      commentId: M:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners
      language: CSharp
      name:
        CSharp: RegersterTwoDifferentListeners()
        VB: RegersterTwoDifferentListeners()
      nameWithType:
        CSharp: AppEventTests.RegisterListener.RegersterTwoDifferentListeners()
        VB: AppEventTests.RegisterListener.RegersterTwoDifferentListeners()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners()
        VB: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterTwoDifferentListeners
        path: ''
        startLine: 4732
      syntax:
        content:
          CSharp: public void RegersterTwoDifferentListeners()
          VB: Public Sub RegersterTwoDifferentListeners
      overload: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice
      commentId: M:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice
      language: CSharp
      name:
        CSharp: RegersterTheSameListenerTwice()
        VB: RegersterTheSameListenerTwice()
      nameWithType:
        CSharp: AppEventTests.RegisterListener.RegersterTheSameListenerTwice()
        VB: AppEventTests.RegisterListener.RegersterTheSameListenerTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice()
        VB: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterTheSameListenerTwice
        path: ''
        startLine: 4741
      syntax:
        content:
          CSharp: public void RegersterTheSameListenerTwice()
          VB: Public Sub RegersterTheSameListenerTwice
      overload: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener
      language: CSharp
      name:
        CSharp: RegersterNullListener()
        VB: RegersterNullListener()
      nameWithType:
        CSharp: AppEventTests.RegisterListener.RegersterNullListener()
        VB: AppEventTests.RegisterListener.RegersterNullListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener()
        VB: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegersterNullListener
        path: ''
        startLine: 4752
      syntax:
        content:
          CSharp: public void RegersterNullListener()
          VB: Public Sub RegersterNullListener
      overload: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener
    commentId: T:ScriptableFramework.Tests.AppEventTests.UnregisterListener
    language: CSharp
    name:
      CSharp: AppEventTests.UnregisterListener
      VB: AppEventTests.UnregisterListener
    nameWithType:
      CSharp: AppEventTests.UnregisterListener
      VB: AppEventTests.UnregisterListener
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener
      VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UnregisterListener
      path: ''
      startLine: 4759
    syntax:
      content:
        CSharp: public class UnregisterListener
        VB: Public Class UnregisterListener
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEvent()
        VB: CreateAppEvent()
      nameWithType:
        CSharp: AppEventTests.UnregisterListener.CreateAppEvent()
        VB: AppEventTests.UnregisterListener.CreateAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent()
        VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEvent
        path: ''
        startLine: 4763
      syntax:
        content:
          CSharp: public void CreateAppEvent()
          VB: Public Sub CreateAppEvent
      overload: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventTests.UnregisterListener.CreateListener()
        VB: AppEventTests.UnregisterListener.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener()
        VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4769
      syntax:
        content:
          CSharp: public AppEventListener CreateListener()
          VB: Public Function CreateListener As AppEventListener
        return:
          type: ScriptableFramework.AppEventListener
      overload: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener
      language: CSharp
      name:
        CSharp: UnregersterOneListener()
        VB: UnregersterOneListener()
      nameWithType:
        CSharp: AppEventTests.UnregisterListener.UnregersterOneListener()
        VB: AppEventTests.UnregisterListener.UnregersterOneListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener()
        VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterOneListener
        path: ''
        startLine: 4774
      syntax:
        content:
          CSharp: public void UnregersterOneListener()
          VB: Public Sub UnregersterOneListener
      overload: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
      commentId: M:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
      language: CSharp
      name:
        CSharp: UnregersterTwoDifferentListeners()
        VB: UnregersterTwoDifferentListeners()
      nameWithType:
        CSharp: AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners()
        VB: AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners()
        VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterTwoDifferentListeners
        path: ''
        startLine: 4784
      syntax:
        content:
          CSharp: public void UnregersterTwoDifferentListeners()
          VB: Public Sub UnregersterTwoDifferentListeners
      overload: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
      commentId: M:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
      language: CSharp
      name:
        CSharp: UnregersterTheSameListenerTwice()
        VB: UnregersterTheSameListenerTwice()
      nameWithType:
        CSharp: AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice()
        VB: AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice()
        VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterTheSameListenerTwice
        path: ''
        startLine: 4799
      syntax:
        content:
          CSharp: public void UnregersterTheSameListenerTwice()
          VB: Public Sub UnregersterTheSameListenerTwice
      overload: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener
      language: CSharp
      name:
        CSharp: UnregersterNullListener()
        VB: UnregersterNullListener()
      nameWithType:
        CSharp: AppEventTests.UnregisterListener.UnregersterNullListener()
        VB: AppEventTests.UnregisterListener.UnregersterNullListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener()
        VB: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregersterNullListener
        path: ''
        startLine: 4813
      syntax:
        content:
          CSharp: public void UnregersterNullListener()
          VB: Public Sub UnregersterNullListener
      overload: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent
    commentId: T:ScriptableFramework.Tests.AppEventTests.RaiseEvent
    language: CSharp
    name:
      CSharp: AppEventTests.RaiseEvent
      VB: AppEventTests.RaiseEvent
    nameWithType:
      CSharp: AppEventTests.RaiseEvent
      VB: AppEventTests.RaiseEvent
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventTests.RaiseEvent
      VB: ScriptableFramework.Tests.AppEventTests.RaiseEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RaiseEvent
      path: ''
      startLine: 4822
    syntax:
      content:
        CSharp: public class RaiseEvent
        VB: Public Class RaiseEvent
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEvent()
        VB: CreateAppEvent()
      nameWithType:
        CSharp: AppEventTests.RaiseEvent.CreateAppEvent()
        VB: AppEventTests.RaiseEvent.CreateAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent()
        VB: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEvent
        path: ''
        startLine: 4826
      syntax:
        content:
          CSharp: public void CreateAppEvent()
          VB: Public Sub CreateAppEvent
      overload: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventTests.RaiseEvent.CreateListener()
        VB: AppEventTests.RaiseEvent.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener()
        VB: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4832
      syntax:
        content:
          CSharp: public AppEventListener CreateListener()
          VB: Public Function CreateListener As AppEventListener
        return:
          type: ScriptableFramework.AppEventListener
      overload: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
      commentId: M:ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
      language: CSharp
      name:
        CSharp: RaiseEventWithZeroListeners()
        VB: RaiseEventWithZeroListeners()
      nameWithType:
        CSharp: AppEventTests.RaiseEvent.RaiseEventWithZeroListeners()
        VB: AppEventTests.RaiseEvent.RaiseEventWithZeroListeners()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners()
        VB: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithZeroListeners
        path: ''
        startLine: 4837
      syntax:
        content:
          CSharp: public void RaiseEventWithZeroListeners()
          VB: Public Sub RaiseEventWithZeroListeners
      overload: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener
      language: CSharp
      name:
        CSharp: RaiseEventWithListener()
        VB: RaiseEventWithListener()
      nameWithType:
        CSharp: AppEventTests.RaiseEvent.RaiseEventWithListener()
        VB: AppEventTests.RaiseEvent.RaiseEventWithListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener()
        VB: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithListener
        path: ''
        startLine: 4843
      syntax:
        content:
          CSharp: public void RaiseEventWithListener()
          VB: Public Sub RaiseEventWithListener
      overload: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener
      language: CSharp
      name:
        CSharp: RaiseEventWithNullListener()
        VB: RaiseEventWithNullListener()
      nameWithType:
        CSharp: AppEventTests.RaiseEvent.RaiseEventWithNullListener()
        VB: AppEventTests.RaiseEvent.RaiseEventWithNullListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener()
        VB: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RaiseEventWithNullListener
        path: ''
        startLine: 4851
      syntax:
        content:
          CSharp: public void RaiseEventWithNullListener()
          VB: Public Sub RaiseEventWithNullListener
      overload: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventTests.ClearData
    commentId: T:ScriptableFramework.Tests.AppEventTests.ClearData
    language: CSharp
    name:
      CSharp: AppEventTests.ClearData
      VB: AppEventTests.ClearData
    nameWithType:
      CSharp: AppEventTests.ClearData
      VB: AppEventTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventTests.ClearData
      VB: ScriptableFramework.Tests.AppEventTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 4860
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEvent()
        VB: CreateAppEvent()
      nameWithType:
        CSharp: AppEventTests.ClearData.CreateAppEvent()
        VB: AppEventTests.ClearData.CreateAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent()
        VB: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEvent
        path: ''
        startLine: 4864
      syntax:
        content:
          CSharp: public void CreateAppEvent()
          VB: Public Sub CreateAppEvent
      overload: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener
      commentId: M:ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener
      language: CSharp
      name:
        CSharp: CreateListener()
        VB: CreateListener()
      nameWithType:
        CSharp: AppEventTests.ClearData.CreateListener()
        VB: AppEventTests.ClearData.CreateListener()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener()
        VB: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateListener
        path: ''
        startLine: 4870
      syntax:
        content:
          CSharp: public AppEventListener CreateListener()
          VB: Public Function CreateListener As AppEventListener
        return:
          type: ScriptableFramework.AppEventListener
      overload: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.ClearData.Clear
      commentId: M:ScriptableFramework.Tests.AppEventTests.ClearData.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: AppEventTests.ClearData.Clear()
        VB: AppEventTests.ClearData.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.ClearData.Clear()
        VB: ScriptableFramework.Tests.AppEventTests.ClearData.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Clear
        path: ''
        startLine: 4875
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: ScriptableFramework.Tests.AppEventTests.ClearData.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventTests.ClearData.Reset
      commentId: M:ScriptableFramework.Tests.AppEventTests.ClearData.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: AppEventTests.ClearData.Reset()
        VB: AppEventTests.ClearData.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventTests.ClearData.Reset()
        VB: ScriptableFramework.Tests.AppEventTests.ClearData.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Reset
        path: ''
        startLine: 4885
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: ScriptableFramework.Tests.AppEventTests.ClearData.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventListenerGenericTests
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests
    language: CSharp
    name:
      CSharp: AppEventListenerGenericTests
      VB: AppEventListenerGenericTests
    nameWithType:
      CSharp: AppEventListenerGenericTests
      VB: AppEventListenerGenericTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests
      VB: ScriptableFramework.Tests.AppEventListenerGenericTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: AppEventListenerGenericTests
      path: ''
      startLine: 4908
    syntax:
      content:
        CSharp: public class AppEventListenerGenericTests
        VB: Public Class AppEventListenerGenericTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
    language: CSharp
    name:
      CSharp: AppEventListenerGenericTests.RegisterSelf
      VB: AppEventListenerGenericTests.RegisterSelf
    nameWithType:
      CSharp: AppEventListenerGenericTests.RegisterSelf
      VB: AppEventListenerGenericTests.RegisterSelf
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
      VB: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RegisterSelf
      path: ''
      startLine: 4910
    syntax:
      content:
        CSharp: public class RegisterSelf
        VB: Public Class RegisterSelf
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEventListenerAndAppEvent()
        VB: CreateAppEventListenerAndAppEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
        VB: AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEventListenerAndAppEvent
        path: ''
        startLine: 4915
      syntax:
        content:
          CSharp: public void CreateAppEventListenerAndAppEvent()
          VB: Public Sub CreateAppEventListenerAndAppEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
      language: CSharp
      name:
        CSharp: RegisterSelfWithEvent()
        VB: RegisterSelfWithEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent()
        VB: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegisterSelfWithEvent
        path: ''
        startLine: 4922
      syntax:
        content:
          CSharp: public void RegisterSelfWithEvent()
          VB: Public Sub RegisterSelfWithEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
      language: CSharp
      name:
        CSharp: RegisterSelfWithEventTwice()
        VB: RegisterSelfWithEventTwice()
      nameWithType:
        CSharp: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice()
        VB: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegisterSelfWithEventTwice
        path: ''
        startLine: 4931
      syntax:
        content:
          CSharp: public void RegisterSelfWithEventTwice()
          VB: Public Sub RegisterSelfWithEventTwice
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
      language: CSharp
      name:
        CSharp: RegisterSelfWithNullEvent()
        VB: RegisterSelfWithNullEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent()
        VB: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegisterSelfWithNullEvent
        path: ''
        startLine: 4942
      syntax:
        content:
          CSharp: public void RegisterSelfWithNullEvent()
          VB: Public Sub RegisterSelfWithNullEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
    language: CSharp
    name:
      CSharp: AppEventListenerGenericTests.UnregisterSelf
      VB: AppEventListenerGenericTests.UnregisterSelf
    nameWithType:
      CSharp: AppEventListenerGenericTests.UnregisterSelf
      VB: AppEventListenerGenericTests.UnregisterSelf
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
      VB: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UnregisterSelf
      path: ''
      startLine: 4949
    syntax:
      content:
        CSharp: public class UnregisterSelf
        VB: Public Class UnregisterSelf
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEventListenerAndAppEvent()
        VB: CreateAppEventListenerAndAppEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
        VB: AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEventListenerAndAppEvent
        path: ''
        startLine: 4954
      syntax:
        content:
          CSharp: public void CreateAppEventListenerAndAppEvent()
          VB: Public Sub CreateAppEventListenerAndAppEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
      language: CSharp
      name:
        CSharp: UnregisterSelfWithEvent()
        VB: UnregisterSelfWithEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent()
        VB: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregisterSelfWithEvent
        path: ''
        startLine: 4961
      syntax:
        content:
          CSharp: public void UnregisterSelfWithEvent()
          VB: Public Sub UnregisterSelfWithEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
      language: CSharp
      name:
        CSharp: UnregisterSelfWithEventTwice()
        VB: UnregisterSelfWithEventTwice()
      nameWithType:
        CSharp: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice()
        VB: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregisterSelfWithEventTwice
        path: ''
        startLine: 4972
      syntax:
        content:
          CSharp: public void UnregisterSelfWithEventTwice()
          VB: Public Sub UnregisterSelfWithEventTwice
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
      language: CSharp
      name:
        CSharp: UnregisterSelfWithNullEvent()
        VB: UnregisterSelfWithNullEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent()
        VB: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregisterSelfWithNullEvent
        path: ''
        startLine: 4984
      syntax:
        content:
          CSharp: public void UnregisterSelfWithNullEvent()
          VB: Public Sub UnregisterSelfWithNullEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
    language: CSharp
    name:
      CSharp: AppEventListenerGenericTests.OnEventRaised
      VB: AppEventListenerGenericTests.OnEventRaised
    nameWithType:
      CSharp: AppEventListenerGenericTests.OnEventRaised
      VB: AppEventListenerGenericTests.OnEventRaised
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
      VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: OnEventRaised
      path: ''
      startLine: 4991
    syntax:
      content:
        CSharp: public class OnEventRaised
        VB: Public Class OnEventRaised
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEventListenerAndAppEvent()
        VB: CreateAppEventListenerAndAppEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
        VB: AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEventListenerAndAppEvent
        path: ''
        startLine: 4996
      syntax:
        content:
          CSharp: public void CreateAppEventListenerAndAppEvent()
          VB: Public Sub CreateAppEventListenerAndAppEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
      language: CSharp
      name:
        CSharp: RespondToEventWithNullResponse()
        VB: RespondToEventWithNullResponse()
      nameWithType:
        CSharp: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse()
        VB: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithNullResponse
        path: ''
        startLine: 5003
      syntax:
        content:
          CSharp: public void RespondToEventWithNullResponse()
          VB: Public Sub RespondToEventWithNullResponse
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
      language: CSharp
      name:
        CSharp: RespondToEventWithResponseWithNoDelegates()
        VB: RespondToEventWithResponseWithNoDelegates()
      nameWithType:
        CSharp: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
        VB: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithResponseWithNoDelegates
        path: ''
        startLine: 5009
      syntax:
        content:
          CSharp: public void RespondToEventWithResponseWithNoDelegates()
          VB: Public Sub RespondToEventWithResponseWithNoDelegates
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent
      language: CSharp
      name:
        CSharp: RespondToEvent()
        VB: RespondToEvent()
      nameWithType:
        CSharp: AppEventListenerGenericTests.OnEventRaised.RespondToEvent()
        VB: AppEventListenerGenericTests.OnEventRaised.RespondToEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEvent
        path: ''
        startLine: 5018
      syntax:
        content:
          CSharp: public void RespondToEvent()
          VB: Public Sub RespondToEvent
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
      language: CSharp
      name:
        CSharp: RespondToEventWithTwoDelegates()
        VB: RespondToEventWithTwoDelegates()
      nameWithType:
        CSharp: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates()
        VB: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithTwoDelegates
        path: ''
        startLine: 5034
      syntax:
        content:
          CSharp: public void RespondToEventWithTwoDelegates()
          VB: Public Sub RespondToEventWithTwoDelegates
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
      commentId: M:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
      language: CSharp
      name:
        CSharp: RespondToEventWithNoParameter()
        VB: RespondToEventWithNoParameter()
      nameWithType:
        CSharp: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter()
        VB: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter()
        VB: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithNoParameter
        path: ''
        startLine: 5051
      syntax:
        content:
          CSharp: public void RespondToEventWithNoParameter()
          VB: Public Sub RespondToEventWithNoParameter
      overload: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventListenerTests
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests
    language: CSharp
    name:
      CSharp: AppEventListenerTests
      VB: AppEventListenerTests
    nameWithType:
      CSharp: AppEventListenerTests
      VB: AppEventListenerTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerTests
      VB: ScriptableFramework.Tests.AppEventListenerTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: AppEventListenerTests
      path: ''
      startLine: 5080
    syntax:
      content:
        CSharp: public class AppEventListenerTests
        VB: Public Class AppEventListenerTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
    language: CSharp
    name:
      CSharp: AppEventListenerTests.RegisterSelf
      VB: AppEventListenerTests.RegisterSelf
    nameWithType:
      CSharp: AppEventListenerTests.RegisterSelf
      VB: AppEventListenerTests.RegisterSelf
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
      VB: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RegisterSelf
      path: ''
      startLine: 5082
    syntax:
      content:
        CSharp: public class RegisterSelf
        VB: Public Class RegisterSelf
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEventListenerAndAppEvent()
        VB: CreateAppEventListenerAndAppEvent()
      nameWithType:
        CSharp: AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
        VB: AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEventListenerAndAppEvent
        path: ''
        startLine: 5087
      syntax:
        content:
          CSharp: public void CreateAppEventListenerAndAppEvent()
          VB: Public Sub CreateAppEventListenerAndAppEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
      language: CSharp
      name:
        CSharp: RegisterSelfWithEvent()
        VB: RegisterSelfWithEvent()
      nameWithType:
        CSharp: AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent()
        VB: AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegisterSelfWithEvent
        path: ''
        startLine: 5094
      syntax:
        content:
          CSharp: public void RegisterSelfWithEvent()
          VB: Public Sub RegisterSelfWithEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
      language: CSharp
      name:
        CSharp: RegisterSelfWithEventTwice()
        VB: RegisterSelfWithEventTwice()
      nameWithType:
        CSharp: AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice()
        VB: AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice()
        VB: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegisterSelfWithEventTwice
        path: ''
        startLine: 5102
      syntax:
        content:
          CSharp: public void RegisterSelfWithEventTwice()
          VB: Public Sub RegisterSelfWithEventTwice
      overload: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
      language: CSharp
      name:
        CSharp: RegisterSelfWithNullEvent()
        VB: RegisterSelfWithNullEvent()
      nameWithType:
        CSharp: AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent()
        VB: AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RegisterSelfWithNullEvent
        path: ''
        startLine: 5112
      syntax:
        content:
          CSharp: public void RegisterSelfWithNullEvent()
          VB: Public Sub RegisterSelfWithNullEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
    language: CSharp
    name:
      CSharp: AppEventListenerTests.UnregisterSelf
      VB: AppEventListenerTests.UnregisterSelf
    nameWithType:
      CSharp: AppEventListenerTests.UnregisterSelf
      VB: AppEventListenerTests.UnregisterSelf
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
      VB: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UnregisterSelf
      path: ''
      startLine: 5119
    syntax:
      content:
        CSharp: public class UnregisterSelf
        VB: Public Class UnregisterSelf
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEventListenerAndAppEvent()
        VB: CreateAppEventListenerAndAppEvent()
      nameWithType:
        CSharp: AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
        VB: AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEventListenerAndAppEvent
        path: ''
        startLine: 5124
      syntax:
        content:
          CSharp: public void CreateAppEventListenerAndAppEvent()
          VB: Public Sub CreateAppEventListenerAndAppEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
      language: CSharp
      name:
        CSharp: UnregisterSelfWithEvent()
        VB: UnregisterSelfWithEvent()
      nameWithType:
        CSharp: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent()
        VB: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregisterSelfWithEvent
        path: ''
        startLine: 5131
      syntax:
        content:
          CSharp: public void UnregisterSelfWithEvent()
          VB: Public Sub UnregisterSelfWithEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
      language: CSharp
      name:
        CSharp: UnregisterSelfWithEventTwice()
        VB: UnregisterSelfWithEventTwice()
      nameWithType:
        CSharp: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice()
        VB: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice()
        VB: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregisterSelfWithEventTwice
        path: ''
        startLine: 5141
      syntax:
        content:
          CSharp: public void UnregisterSelfWithEventTwice()
          VB: Public Sub UnregisterSelfWithEventTwice
      overload: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
      language: CSharp
      name:
        CSharp: UnregisterSelfWithNullEvent()
        VB: UnregisterSelfWithNullEvent()
      nameWithType:
        CSharp: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent()
        VB: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UnregisterSelfWithNullEvent
        path: ''
        startLine: 5152
      syntax:
        content:
          CSharp: public void UnregisterSelfWithNullEvent()
          VB: Public Sub UnregisterSelfWithNullEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
    language: CSharp
    name:
      CSharp: AppEventListenerTests.OnEventRaised
      VB: AppEventListenerTests.OnEventRaised
    nameWithType:
      CSharp: AppEventListenerTests.OnEventRaised
      VB: AppEventListenerTests.OnEventRaised
    qualifiedName:
      CSharp: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
      VB: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: OnEventRaised
      path: ''
      startLine: 5159
    syntax:
      content:
        CSharp: public class OnEventRaised
        VB: Public Class OnEventRaised
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
      language: CSharp
      name:
        CSharp: CreateAppEventListenerAndAppEvent()
        VB: CreateAppEventListenerAndAppEvent()
      nameWithType:
        CSharp: AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
        VB: AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateAppEventListenerAndAppEvent
        path: ''
        startLine: 5164
      syntax:
        content:
          CSharp: public void CreateAppEventListenerAndAppEvent()
          VB: Public Sub CreateAppEventListenerAndAppEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
      language: CSharp
      name:
        CSharp: RespondToEventWithNullResponse()
        VB: RespondToEventWithNullResponse()
      nameWithType:
        CSharp: AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse()
        VB: AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse()
        VB: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithNullResponse
        path: ''
        startLine: 5171
      syntax:
        content:
          CSharp: public void RespondToEventWithNullResponse()
          VB: Public Sub RespondToEventWithNullResponse
      overload: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
      language: CSharp
      name:
        CSharp: RespondToEventWithResponseWithNoDelegates()
        VB: RespondToEventWithResponseWithNoDelegates()
      nameWithType:
        CSharp: AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
        VB: AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
        VB: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithResponseWithNoDelegates
        path: ''
        startLine: 5177
      syntax:
        content:
          CSharp: public void RespondToEventWithResponseWithNoDelegates()
          VB: Public Sub RespondToEventWithResponseWithNoDelegates
      overload: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent
      language: CSharp
      name:
        CSharp: RespondToEvent()
        VB: RespondToEvent()
      nameWithType:
        CSharp: AppEventListenerTests.OnEventRaised.RespondToEvent()
        VB: AppEventListenerTests.OnEventRaised.RespondToEvent()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent()
        VB: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEvent
        path: ''
        startLine: 5185
      syntax:
        content:
          CSharp: public void RespondToEvent()
          VB: Public Sub RespondToEvent
      overload: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
      commentId: M:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
      language: CSharp
      name:
        CSharp: RespondToEventWithTwoDelegates()
        VB: RespondToEventWithTwoDelegates()
      nameWithType:
        CSharp: AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates()
        VB: AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates()
        VB: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: RespondToEventWithTwoDelegates
        path: ''
        startLine: 5199
      syntax:
        content:
          CSharp: public void RespondToEventWithTwoDelegates()
          VB: Public Sub RespondToEventWithTwoDelegates
      overload: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.ListenerResponder
    commentId: T:ScriptableFramework.Tests.ListenerResponder
    language: CSharp
    name:
      CSharp: ListenerResponder
      VB: ListenerResponder
    nameWithType:
      CSharp: ListenerResponder
      VB: ListenerResponder
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ListenerResponder
      VB: ScriptableFramework.Tests.ListenerResponder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ListenerResponder
      path: ''
      startLine: 5225
    syntax:
      content:
        CSharp: 'public class ListenerResponder : ScriptableObject'
        VB: >-
          Public Class ListenerResponder

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.ListenerResponder.responseCount
      commentId: F:ScriptableFramework.Tests.ListenerResponder.responseCount
      language: CSharp
      name:
        CSharp: responseCount
        VB: responseCount
      nameWithType:
        CSharp: ListenerResponder.responseCount
        VB: ListenerResponder.responseCount
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ListenerResponder.responseCount
        VB: ScriptableFramework.Tests.ListenerResponder.responseCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: responseCount
        path: ''
        startLine: 5227
      syntax:
        content:
          CSharp: public int responseCount
          VB: Public responseCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate
      commentId: M:ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate
      language: CSharp
      name:
        CSharp: FunctionToDelegate()
        VB: FunctionToDelegate()
      nameWithType:
        CSharp: ListenerResponder.FunctionToDelegate()
        VB: ListenerResponder.FunctionToDelegate()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate()
        VB: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: FunctionToDelegate
        path: ''
        startLine: 5229
      syntax:
        content:
          CSharp: public void FunctionToDelegate()
          VB: Public Sub FunctionToDelegate
      overload: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate(System.Int32)
      commentId: M:ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate(System.Int32)
      language: CSharp
      name:
        CSharp: FunctionToDelegate(Int32)
        VB: FunctionToDelegate(Int32)
      nameWithType:
        CSharp: ListenerResponder.FunctionToDelegate(Int32)
        VB: ListenerResponder.FunctionToDelegate(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate(System.Int32)
        VB: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: FunctionToDelegate
        path: ''
        startLine: 5234
      syntax:
        content:
          CSharp: public void FunctionToDelegate(int value)
          VB: Public Sub FunctionToDelegate(value As Integer)
        parameters:
        - id: value
          type: System.Int32
      overload: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.ReferenceItemTests
    commentId: T:ScriptableFramework.Tests.ReferenceItemTests
    language: CSharp
    name:
      CSharp: ReferenceItemTests
      VB: ReferenceItemTests
    nameWithType:
      CSharp: ReferenceItemTests
      VB: ReferenceItemTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ReferenceItemTests
      VB: ScriptableFramework.Tests.ReferenceItemTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ReferenceItemTests
      path: ''
      startLine: 5249
    syntax:
      content:
        CSharp: public class ReferenceItemTests
        VB: Public Class ReferenceItemTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData
    commentId: T:ScriptableFramework.Tests.ReferenceItemTests.ClearData
    language: CSharp
    name:
      CSharp: ReferenceItemTests.ClearData
      VB: ReferenceItemTests.ClearData
    nameWithType:
      CSharp: ReferenceItemTests.ClearData
      VB: ReferenceItemTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ReferenceItemTests.ClearData
      VB: ScriptableFramework.Tests.ReferenceItemTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 5251
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference
      commentId: M:ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference
      language: CSharp
      name:
        CSharp: CreateGameObjectReference()
        VB: CreateGameObjectReference()
      nameWithType:
        CSharp: ReferenceItemTests.ClearData.CreateGameObjectReference()
        VB: ReferenceItemTests.ClearData.CreateGameObjectReference()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference()
        VB: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateGameObjectReference
        path: ''
        startLine: 5255
      syntax:
        content:
          CSharp: public void CreateGameObjectReference()
          VB: Public Sub CreateGameObjectReference
      overload: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset
      commentId: M:ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: ReferenceItemTests.ClearData.Reset()
        VB: ReferenceItemTests.ClearData.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset()
        VB: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Reset
        path: ''
        startLine: 5261
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear
      commentId: M:ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ReferenceItemTests.ClearData.Clear()
        VB: ReferenceItemTests.ClearData.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear()
        VB: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Clear
        path: ''
        startLine: 5271
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.ValueItemTests
    commentId: T:ScriptableFramework.Tests.ValueItemTests
    language: CSharp
    name:
      CSharp: ValueItemTests
      VB: ValueItemTests
    nameWithType:
      CSharp: ValueItemTests
      VB: ValueItemTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ValueItemTests
      VB: ScriptableFramework.Tests.ValueItemTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ValueItemTests
      path: ''
      startLine: 5292
    syntax:
      content:
        CSharp: public class ValueItemTests
        VB: Public Class ValueItemTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.ValueItemTests.ClearData
    commentId: T:ScriptableFramework.Tests.ValueItemTests.ClearData
    language: CSharp
    name:
      CSharp: ValueItemTests.ClearData
      VB: ValueItemTests.ClearData
    nameWithType:
      CSharp: ValueItemTests.ClearData
      VB: ValueItemTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ValueItemTests.ClearData
      VB: ScriptableFramework.Tests.ValueItemTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 5294
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue
      commentId: M:ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue
      language: CSharp
      name:
        CSharp: CreateFloatValue()
        VB: CreateFloatValue()
      nameWithType:
        CSharp: ValueItemTests.ClearData.CreateFloatValue()
        VB: ValueItemTests.ClearData.CreateFloatValue()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue()
        VB: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateFloatValue
        path: ''
        startLine: 5298
      syntax:
        content:
          CSharp: public void CreateFloatValue()
          VB: Public Sub CreateFloatValue
      overload: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault
      commentId: M:ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault
      language: CSharp
      name:
        CSharp: ResetWithDefault()
        VB: ResetWithDefault()
      nameWithType:
        CSharp: ValueItemTests.ClearData.ResetWithDefault()
        VB: ValueItemTests.ClearData.ResetWithDefault()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault()
        VB: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ResetWithDefault
        path: ''
        startLine: 5304
      syntax:
        content:
          CSharp: public void ResetWithDefault()
          VB: Public Sub ResetWithDefault
      overload: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault
      commentId: M:ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault
      language: CSharp
      name:
        CSharp: ResetWithoutDefault()
        VB: ResetWithoutDefault()
      nameWithType:
        CSharp: ValueItemTests.ClearData.ResetWithoutDefault()
        VB: ValueItemTests.ClearData.ResetWithoutDefault()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault()
        VB: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ResetWithoutDefault
        path: ''
        startLine: 5315
      syntax:
        content:
          CSharp: public void ResetWithoutDefault()
          VB: Public Sub ResetWithoutDefault
      overload: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear
      commentId: M:ScriptableFramework.Tests.ValueItemTests.ClearData.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ValueItemTests.ClearData.Clear()
        VB: ValueItemTests.ClearData.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear()
        VB: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Clear
        path: ''
        startLine: 5325
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.ReferenceListTests
    commentId: T:ScriptableFramework.Tests.ReferenceListTests
    language: CSharp
    name:
      CSharp: ReferenceListTests
      VB: ReferenceListTests
    nameWithType:
      CSharp: ReferenceListTests
      VB: ReferenceListTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ReferenceListTests
      VB: ScriptableFramework.Tests.ReferenceListTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ReferenceListTests
      path: ''
      startLine: 5346
    syntax:
      content:
        CSharp: public class ReferenceListTests
        VB: Public Class ReferenceListTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.ReferenceListTests.ClearData
    commentId: T:ScriptableFramework.Tests.ReferenceListTests.ClearData
    language: CSharp
    name:
      CSharp: ReferenceListTests.ClearData
      VB: ReferenceListTests.ClearData
    nameWithType:
      CSharp: ReferenceListTests.ClearData
      VB: ReferenceListTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ReferenceListTests.ClearData
      VB: ScriptableFramework.Tests.ReferenceListTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 5348
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList
      commentId: M:ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList
      language: CSharp
      name:
        CSharp: CreateGameObjectList()
        VB: CreateGameObjectList()
      nameWithType:
        CSharp: ReferenceListTests.ClearData.CreateGameObjectList()
        VB: ReferenceListTests.ClearData.CreateGameObjectList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList()
        VB: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateGameObjectList
        path: ''
        startLine: 5352
      syntax:
        content:
          CSharp: public void CreateGameObjectList()
          VB: Public Sub CreateGameObjectList
      overload: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset
      commentId: M:ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: ReferenceListTests.ClearData.Reset()
        VB: ReferenceListTests.ClearData.Reset()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset()
        VB: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Reset
        path: ''
        startLine: 5358
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear
      commentId: M:ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ReferenceListTests.ClearData.Clear()
        VB: ReferenceListTests.ClearData.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear()
        VB: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Clear
        path: ''
        startLine: 5368
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.ValueListTests
    commentId: T:ScriptableFramework.Tests.ValueListTests
    language: CSharp
    name:
      CSharp: ValueListTests
      VB: ValueListTests
    nameWithType:
      CSharp: ValueListTests
      VB: ValueListTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ValueListTests
      VB: ScriptableFramework.Tests.ValueListTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ValueListTests
      path: ''
      startLine: 5389
    syntax:
      content:
        CSharp: public class ValueListTests
        VB: Public Class ValueListTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.ValueListTests.ClearData
    commentId: T:ScriptableFramework.Tests.ValueListTests.ClearData
    language: CSharp
    name:
      CSharp: ValueListTests.ClearData
      VB: ValueListTests.ClearData
    nameWithType:
      CSharp: ValueListTests.ClearData
      VB: ValueListTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.ValueListTests.ClearData
      VB: ScriptableFramework.Tests.ValueListTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 5391
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList
      commentId: M:ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList
      language: CSharp
      name:
        CSharp: CreateGameObjectList()
        VB: CreateGameObjectList()
      nameWithType:
        CSharp: ValueListTests.ClearData.CreateGameObjectList()
        VB: ValueListTests.ClearData.CreateGameObjectList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList()
        VB: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateGameObjectList
        path: ''
        startLine: 5395
      syntax:
        content:
          CSharp: public void CreateGameObjectList()
          VB: Public Sub CreateGameObjectList
      overload: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault
      commentId: M:ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault
      language: CSharp
      name:
        CSharp: ResetWithDefault()
        VB: ResetWithDefault()
      nameWithType:
        CSharp: ValueListTests.ClearData.ResetWithDefault()
        VB: ValueListTests.ClearData.ResetWithDefault()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault()
        VB: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ResetWithDefault
        path: ''
        startLine: 5401
      syntax:
        content:
          CSharp: public void ResetWithDefault()
          VB: Public Sub ResetWithDefault
      overload: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault
      commentId: M:ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault
      language: CSharp
      name:
        CSharp: ResetWithoutDefault()
        VB: ResetWithoutDefault()
      nameWithType:
        CSharp: ValueListTests.ClearData.ResetWithoutDefault()
        VB: ValueListTests.ClearData.ResetWithoutDefault()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault()
        VB: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ResetWithoutDefault
        path: ''
        startLine: 5418
      syntax:
        content:
          CSharp: public void ResetWithoutDefault()
          VB: Public Sub ResetWithoutDefault
      overload: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.ValueListTests.ClearData.Clear
      commentId: M:ScriptableFramework.Tests.ValueListTests.ClearData.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ValueListTests.ClearData.Clear()
        VB: ValueListTests.ClearData.Clear()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.ValueListTests.ClearData.Clear()
        VB: ScriptableFramework.Tests.ValueListTests.ClearData.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: Clear
        path: ''
        startLine: 5433
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: ScriptableFramework.Tests.ValueListTests.ClearData.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateMachineTests
    commentId: T:ScriptableFramework.Tests.StateMachineTests
    language: CSharp
    name:
      CSharp: StateMachineTests
      VB: StateMachineTests
    nameWithType:
      CSharp: StateMachineTests
      VB: StateMachineTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests
      VB: ScriptableFramework.Tests.StateMachineTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: StateMachineTests
      path: ''
      startLine: 5458
    syntax:
      content:
        CSharp: public class StateMachineTests
        VB: Public Class StateMachineTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
    language: CSharp
    name:
      CSharp: StateMachineTests.UpdateStateForIndex
      VB: StateMachineTests.UpdateStateForIndex
    nameWithType:
      CSharp: StateMachineTests.UpdateStateForIndex
      VB: StateMachineTests.UpdateStateForIndex
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
      VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UpdateStateForIndex
      path: ''
      startLine: 5460
    syntax:
      content:
        CSharp: public class UpdateStateForIndex
        VB: Public Class UpdateStateForIndex
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects()
        VB: StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5465
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.AddToList(Int32)
        VB: StateMachineTests.UpdateStateForIndex.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5473
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
      language: CSharp
      name:
        CSharp: UpdateStateSuccess()
        VB: UpdateStateSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateSuccess()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateSuccess
        path: ''
        startLine: 5485
      syntax:
        content:
          CSharp: public void UpdateStateSuccess()
          VB: Public Sub UpdateStateSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: UpdateStateActiveGameObjectSuccess()
        VB: UpdateStateActiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateActiveGameObjectSuccess
        path: ''
        startLine: 5491
      syntax:
        content:
          CSharp: public void UpdateStateActiveGameObjectSuccess()
          VB: Public Sub UpdateStateActiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: UpdateStateInactiveGameObjectSuccess()
        VB: UpdateStateInactiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateInactiveGameObjectSuccess
        path: ''
        startLine: 5498
      syntax:
        content:
          CSharp: public void UpdateStateInactiveGameObjectSuccess()
          VB: Public Sub UpdateStateInactiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
      language: CSharp
      name:
        CSharp: UpdateStateTwiceSuccess()
        VB: UpdateStateTwiceSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateTwiceSuccess
        path: ''
        startLine: 5505
      syntax:
        content:
          CSharp: public void UpdateStateTwiceSuccess()
          VB: Public Sub UpdateStateTwiceSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
      language: CSharp
      name:
        CSharp: UpdateStateWithNegative()
        VB: UpdateStateWithNegative()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNegative
        path: ''
        startLine: 5513
      syntax:
        content:
          CSharp: public void UpdateStateWithNegative()
          VB: Public Sub UpdateStateWithNegative
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
      language: CSharp
      name:
        CSharp: UpdateStateWithOutOfRangeIndex()
        VB: UpdateStateWithOutOfRangeIndex()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithOutOfRangeIndex
        path: ''
        startLine: 5520
      syntax:
        content:
          CSharp: public void UpdateStateWithOutOfRangeIndex()
          VB: Public Sub UpdateStateWithOutOfRangeIndex
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
      language: CSharp
      name:
        CSharp: UpdateStateWithSameIndex()
        VB: UpdateStateWithSameIndex()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithSameIndex
        path: ''
        startLine: 5527
      syntax:
        content:
          CSharp: public void UpdateStateWithSameIndex()
          VB: Public Sub UpdateStateWithSameIndex
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullList()
        VB: UpdateStateWithNullList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullList
        path: ''
        startLine: 5533
      syntax:
        content:
          CSharp: public void UpdateStateWithNullList()
          VB: Public Sub UpdateStateWithNullList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullItemInList()
        VB: UpdateStateWithNullItemInList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList()
        VB: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullItemInList
        path: ''
        startLine: 5542
      syntax:
        content:
          CSharp: public void UpdateStateWithNullItemInList()
          VB: Public Sub UpdateStateWithNullItemInList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
    language: CSharp
    name:
      CSharp: StateMachineTests.UpdateStateForAll
      VB: StateMachineTests.UpdateStateForAll
    nameWithType:
      CSharp: StateMachineTests.UpdateStateForAll
      VB: StateMachineTests.UpdateStateForAll
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
      VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UpdateStateForAll
      path: ''
      startLine: 5551
    syntax:
      content:
        CSharp: public class UpdateStateForAll
        VB: Public Class UpdateStateForAll
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.CreateRuntimeObjects()
        VB: StateMachineTests.UpdateStateForAll.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5556
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.AddToList(Int32)
        VB: StateMachineTests.UpdateStateForAll.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5564
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess
      language: CSharp
      name:
        CSharp: UpdateStateSuccess()
        VB: UpdateStateSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.UpdateStateSuccess()
        VB: StateMachineTests.UpdateStateForAll.UpdateStateSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateSuccess
        path: ''
        startLine: 5576
      syntax:
        content:
          CSharp: public void UpdateStateSuccess()
          VB: Public Sub UpdateStateSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
      language: CSharp
      name:
        CSharp: UpdateStateActiveGameObjectsSuccess()
        VB: UpdateStateActiveGameObjectsSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess()
        VB: StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateActiveGameObjectsSuccess
        path: ''
        startLine: 5582
      syntax:
        content:
          CSharp: public void UpdateStateActiveGameObjectsSuccess()
          VB: Public Sub UpdateStateActiveGameObjectsSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
      language: CSharp
      name:
        CSharp: UpdateStateInactiveGameObjectsSuccess()
        VB: UpdateStateInactiveGameObjectsSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess()
        VB: StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateInactiveGameObjectsSuccess
        path: ''
        startLine: 5590
      syntax:
        content:
          CSharp: public void UpdateStateInactiveGameObjectsSuccess()
          VB: Public Sub UpdateStateInactiveGameObjectsSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullList()
        VB: UpdateStateWithNullList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.UpdateStateWithNullList()
        VB: StateMachineTests.UpdateStateForAll.UpdateStateWithNullList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullList
        path: ''
        startLine: 5598
      syntax:
        content:
          CSharp: public void UpdateStateWithNullList()
          VB: Public Sub UpdateStateWithNullList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullItemInList()
        VB: UpdateStateWithNullItemInList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList()
        VB: StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullItemInList
        path: ''
        startLine: 5607
      syntax:
        content:
          CSharp: public void UpdateStateWithNullItemInList()
          VB: Public Sub UpdateStateWithNullItemInList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
    language: CSharp
    name:
      CSharp: StateMachineTests.UpdateStateForSingle
      VB: StateMachineTests.UpdateStateForSingle
    nameWithType:
      CSharp: StateMachineTests.UpdateStateForSingle
      VB: StateMachineTests.UpdateStateForSingle
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
      VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UpdateStateForSingle
      path: ''
      startLine: 5616
    syntax:
      content:
        CSharp: public class UpdateStateForSingle
        VB: Public Class UpdateStateForSingle
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects()
        VB: StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5621
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.AddToList(Int32)
        VB: StateMachineTests.UpdateStateForSingle.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5629
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
      language: CSharp
      name:
        CSharp: UpdateStateSuccess()
        VB: UpdateStateSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateSuccess()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateSuccess
        path: ''
        startLine: 5641
      syntax:
        content:
          CSharp: public void UpdateStateSuccess()
          VB: Public Sub UpdateStateSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: UpdateStateActiveGameObjectSuccess()
        VB: UpdateStateActiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateActiveGameObjectSuccess
        path: ''
        startLine: 5647
      syntax:
        content:
          CSharp: public void UpdateStateActiveGameObjectSuccess()
          VB: Public Sub UpdateStateActiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: UpdateStateInactiveGameObjectSuccess()
        VB: UpdateStateInactiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateInactiveGameObjectSuccess
        path: ''
        startLine: 5654
      syntax:
        content:
          CSharp: public void UpdateStateInactiveGameObjectSuccess()
          VB: Public Sub UpdateStateInactiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
      language: CSharp
      name:
        CSharp: UpdateStateTwiceSuccess()
        VB: UpdateStateTwiceSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateTwiceSuccess
        path: ''
        startLine: 5661
      syntax:
        content:
          CSharp: public void UpdateStateTwiceSuccess()
          VB: Public Sub UpdateStateTwiceSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle
      language: CSharp
      name:
        CSharp: UpdateStateToggle()
        VB: UpdateStateToggle()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateToggle()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateToggle()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateToggle
        path: ''
        startLine: 5669
      syntax:
        content:
          CSharp: public void UpdateStateToggle()
          VB: Public Sub UpdateStateToggle
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
      language: CSharp
      name:
        CSharp: UpdateStateWithSameIndex()
        VB: UpdateStateWithSameIndex()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithSameIndex
        path: ''
        startLine: 5677
      syntax:
        content:
          CSharp: public void UpdateStateWithSameIndex()
          VB: Public Sub UpdateStateWithSameIndex
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
      language: CSharp
      name:
        CSharp: UpdateStateWithNegative()
        VB: UpdateStateWithNegative()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNegative
        path: ''
        startLine: 5683
      syntax:
        content:
          CSharp: public void UpdateStateWithNegative()
          VB: Public Sub UpdateStateWithNegative
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
      language: CSharp
      name:
        CSharp: UpdateStateWithOutOfRangeIndex()
        VB: UpdateStateWithOutOfRangeIndex()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithOutOfRangeIndex
        path: ''
        startLine: 5690
      syntax:
        content:
          CSharp: public void UpdateStateWithOutOfRangeIndex()
          VB: Public Sub UpdateStateWithOutOfRangeIndex
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullList()
        VB: UpdateStateWithNullList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullList
        path: ''
        startLine: 5697
      syntax:
        content:
          CSharp: public void UpdateStateWithNullList()
          VB: Public Sub UpdateStateWithNullList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullItemInList()
        VB: UpdateStateWithNullItemInList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList()
        VB: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullItemInList
        path: ''
        startLine: 5705
      syntax:
        content:
          CSharp: public void UpdateStateWithNullItemInList()
          VB: Public Sub UpdateStateWithNullItemInList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
    language: CSharp
    name:
      CSharp: StateMachineTests.UpdateStateForRange
      VB: StateMachineTests.UpdateStateForRange
    nameWithType:
      CSharp: StateMachineTests.UpdateStateForRange
      VB: StateMachineTests.UpdateStateForRange
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
      VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UpdateStateForRange
      path: ''
      startLine: 5714
    syntax:
      content:
        CSharp: public class UpdateStateForRange
        VB: Public Class UpdateStateForRange
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.CreateRuntimeObjects()
        VB: StateMachineTests.UpdateStateForRange.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5719
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.AddToList(Int32)
        VB: StateMachineTests.UpdateStateForRange.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5727
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess
      language: CSharp
      name:
        CSharp: UpdateStateSuccess()
        VB: UpdateStateSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateSuccess()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateSuccess
        path: ''
        startLine: 5739
      syntax:
        content:
          CSharp: public void UpdateStateSuccess()
          VB: Public Sub UpdateStateSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: UpdateStateActiveGameObjectSuccess()
        VB: UpdateStateActiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateActiveGameObjectSuccess
        path: ''
        startLine: 5745
      syntax:
        content:
          CSharp: public void UpdateStateActiveGameObjectSuccess()
          VB: Public Sub UpdateStateActiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: UpdateStateInactiveGameObjectSuccess()
        VB: UpdateStateInactiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateInactiveGameObjectSuccess
        path: ''
        startLine: 5752
      syntax:
        content:
          CSharp: public void UpdateStateInactiveGameObjectSuccess()
          VB: Public Sub UpdateStateInactiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
      language: CSharp
      name:
        CSharp: UpdateStateTwiceSuccess()
        VB: UpdateStateTwiceSuccess()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateTwiceSuccess
        path: ''
        startLine: 5759
      syntax:
        content:
          CSharp: public void UpdateStateTwiceSuccess()
          VB: Public Sub UpdateStateTwiceSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
      language: CSharp
      name:
        CSharp: UpdateStateMiddleFalse()
        VB: UpdateStateMiddleFalse()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateMiddleFalse
        path: ''
        startLine: 5767
      syntax:
        content:
          CSharp: public void UpdateStateMiddleFalse()
          VB: Public Sub UpdateStateMiddleFalse
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
      language: CSharp
      name:
        CSharp: UpdateStateWithNegative()
        VB: UpdateStateWithNegative()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateWithNegative()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateWithNegative()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNegative
        path: ''
        startLine: 5774
      syntax:
        content:
          CSharp: public void UpdateStateWithNegative()
          VB: Public Sub UpdateStateWithNegative
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
      language: CSharp
      name:
        CSharp: UpdateStateWithOutOfRangeIndex()
        VB: UpdateStateWithOutOfRangeIndex()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithOutOfRangeIndex
        path: ''
        startLine: 5781
      syntax:
        content:
          CSharp: public void UpdateStateWithOutOfRangeIndex()
          VB: Public Sub UpdateStateWithOutOfRangeIndex
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullList()
        VB: UpdateStateWithNullList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateWithNullList()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateWithNullList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullList
        path: ''
        startLine: 5788
      syntax:
        content:
          CSharp: public void UpdateStateWithNullList()
          VB: Public Sub UpdateStateWithNullList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
      language: CSharp
      name:
        CSharp: UpdateStateWithNullItemInList()
        VB: UpdateStateWithNullItemInList()
      nameWithType:
        CSharp: StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList()
        VB: StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList()
        VB: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: UpdateStateWithNullItemInList
        path: ''
        startLine: 5796
      syntax:
        content:
          CSharp: public void UpdateStateWithNullItemInList()
          VB: Public Sub UpdateStateWithNullItemInList
      overload: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState
    commentId: T:ScriptableFramework.Tests.StateMachineTests.ReapplyState
    language: CSharp
    name:
      CSharp: StateMachineTests.ReapplyState
      VB: StateMachineTests.ReapplyState
    nameWithType:
      CSharp: StateMachineTests.ReapplyState
      VB: StateMachineTests.ReapplyState
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests.ReapplyState
      VB: ScriptableFramework.Tests.StateMachineTests.ReapplyState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ReapplyState
      path: ''
      startLine: 5805
    syntax:
      content:
        CSharp: public class ReapplyState
        VB: Public Class ReapplyState
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateMachineTests.ReapplyState.CreateRuntimeObjects()
        VB: StateMachineTests.ReapplyState.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5810
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateMachineTests.ReapplyState.AddToList(Int32)
        VB: StateMachineTests.ReapplyState.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5818
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateMachineTests.ClearData
    commentId: T:ScriptableFramework.Tests.StateMachineTests.ClearData
    language: CSharp
    name:
      CSharp: StateMachineTests.ClearData
      VB: StateMachineTests.ClearData
    nameWithType:
      CSharp: StateMachineTests.ClearData
      VB: StateMachineTests.ClearData
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData
      VB: ScriptableFramework.Tests.StateMachineTests.ClearData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: ClearData
      path: ''
      startLine: 5831
    syntax:
      content:
        CSharp: public class ClearData
        VB: Public Class ClearData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateMachineTests.ClearData.CreateRuntimeObjects()
        VB: StateMachineTests.ClearData.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5836
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateMachineTests.ClearData.AddToList(Int32)
        VB: StateMachineTests.ClearData.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5843
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList
      language: CSharp
      name:
        CSharp: ClearWithNullList()
        VB: ClearWithNullList()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearWithNullList()
        VB: StateMachineTests.ClearData.ClearWithNullList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearWithNullList
        path: ''
        startLine: 5854
      syntax:
        content:
          CSharp: public void ClearWithNullList()
          VB: Public Sub ClearWithNullList
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList
      language: CSharp
      name:
        CSharp: ClearWithEmptyList()
        VB: ClearWithEmptyList()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearWithEmptyList()
        VB: StateMachineTests.ClearData.ClearWithEmptyList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearWithEmptyList
        path: ''
        startLine: 5863
      syntax:
        content:
          CSharp: public void ClearWithEmptyList()
          VB: Public Sub ClearWithEmptyList
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList
      language: CSharp
      name:
        CSharp: ClearWithNullItemInList()
        VB: ClearWithNullItemInList()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearWithNullItemInList()
        VB: StateMachineTests.ClearData.ClearWithNullItemInList()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearWithNullItemInList
        path: ''
        startLine: 5871
      syntax:
        content:
          CSharp: public void ClearWithNullItemInList()
          VB: Public Sub ClearWithNullItemInList
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess
      language: CSharp
      name:
        CSharp: ClearSuccess()
        VB: ClearSuccess()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearSuccess()
        VB: StateMachineTests.ClearData.ClearSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearSuccess
        path: ''
        startLine: 5882
      syntax:
        content:
          CSharp: public void ClearSuccess()
          VB: Public Sub ClearSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: ClearActiveGameObjectSuccess()
        VB: ClearActiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearActiveGameObjectSuccess()
        VB: StateMachineTests.ClearData.ClearActiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearActiveGameObjectSuccess
        path: ''
        startLine: 5892
      syntax:
        content:
          CSharp: public void ClearActiveGameObjectSuccess()
          VB: Public Sub ClearActiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
      language: CSharp
      name:
        CSharp: ClearInactiveGameObjectSuccess()
        VB: ClearInactiveGameObjectSuccess()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearInactiveGameObjectSuccess()
        VB: StateMachineTests.ClearData.ClearInactiveGameObjectSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearInactiveGameObjectSuccess
        path: ''
        startLine: 5902
      syntax:
        content:
          CSharp: public void ClearInactiveGameObjectSuccess()
          VB: Public Sub ClearInactiveGameObjectSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault
      language: CSharp
      name:
        CSharp: ClearWithAllActiveDefault()
        VB: ClearWithAllActiveDefault()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearWithAllActiveDefault()
        VB: StateMachineTests.ClearData.ClearWithAllActiveDefault()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearWithAllActiveDefault
        path: ''
        startLine: 5912
      syntax:
        content:
          CSharp: public void ClearWithAllActiveDefault()
          VB: Public Sub ClearWithAllActiveDefault
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault
      language: CSharp
      name:
        CSharp: ClearWithNoneActiveDefault()
        VB: ClearWithNoneActiveDefault()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ClearWithNoneActiveDefault()
        VB: StateMachineTests.ClearData.ClearWithNoneActiveDefault()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ClearWithNoneActiveDefault
        path: ''
        startLine: 5922
      syntax:
        content:
          CSharp: public void ClearWithNoneActiveDefault()
          VB: Public Sub ClearWithNoneActiveDefault
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess
      commentId: M:ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess
      language: CSharp
      name:
        CSharp: ResetSuccess()
        VB: ResetSuccess()
      nameWithType:
        CSharp: StateMachineTests.ClearData.ResetSuccess()
        VB: StateMachineTests.ClearData.ResetSuccess()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess()
        VB: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: ResetSuccess
        path: ''
        startLine: 5932
      syntax:
        content:
          CSharp: public void ResetSuccess()
          VB: Public Sub ResetSuccess
      overload: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateToggleTests
    commentId: T:ScriptableFramework.Tests.StateToggleTests
    language: CSharp
    name:
      CSharp: StateToggleTests
      VB: StateToggleTests
    nameWithType:
      CSharp: StateToggleTests
      VB: StateToggleTests
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateToggleTests
      VB: ScriptableFramework.Tests.StateToggleTests
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: StateToggleTests
      path: ''
      startLine: 5953
    syntax:
      content:
        CSharp: public class StateToggleTests
        VB: Public Class StateToggleTests
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
    commentId: T:ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
    language: CSharp
    name:
      CSharp: StateToggleTests.UpdateStateMachine
      VB: StateToggleTests.UpdateStateMachine
    nameWithType:
      CSharp: StateToggleTests.UpdateStateMachine
      VB: StateToggleTests.UpdateStateMachine
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
      VB: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: UpdateStateMachine
      path: ''
      startLine: 5955
    syntax:
      content:
        CSharp: public class UpdateStateMachine
        VB: Public Class UpdateStateMachine
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
      commentId: M:ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
      language: CSharp
      name:
        CSharp: CreateRuntimeObjects()
        VB: CreateRuntimeObjects()
      nameWithType:
        CSharp: StateToggleTests.UpdateStateMachine.CreateRuntimeObjects()
        VB: StateToggleTests.UpdateStateMachine.CreateRuntimeObjects()
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects()
        VB: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: CreateRuntimeObjects
        path: ''
        startLine: 5960
      syntax:
        content:
          CSharp: public void CreateRuntimeObjects()
          VB: Public Sub CreateRuntimeObjects
      overload: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList(System.Int32)
      commentId: M:ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList(System.Int32)
      language: CSharp
      name:
        CSharp: AddToList(Int32)
        VB: AddToList(Int32)
      nameWithType:
        CSharp: StateToggleTests.UpdateStateMachine.AddToList(Int32)
        VB: StateToggleTests.UpdateStateMachine.AddToList(Int32)
      qualifiedName:
        CSharp: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList(System.Int32)
        VB: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ScriptableFramework.Tests
      source:
        id: AddToList
        path: ''
        startLine: 5969
      syntax:
        content:
          CSharp: public void AddToList(int instances)
          VB: Public Sub AddToList(instances As Integer)
        parameters:
        - id: instances
          type: System.Int32
      overload: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
    commentId: T:ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
    language: CSharp
    name:
      CSharp: StateToggleTests.RespondToStateMachineChange
      VB: StateToggleTests.RespondToStateMachineChange
    nameWithType:
      CSharp: StateToggleTests.RespondToStateMachineChange
      VB: StateToggleTests.RespondToStateMachineChange
    qualifiedName:
      CSharp: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
      VB: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ScriptableFramework.Tests
    source:
      id: RespondToStateMachineChange
      path: ''
      startLine: 5978
    syntax:
      content:
        CSharp: public class RespondToStateMachineChange
        VB: Public Class RespondToStateMachineChange
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  ScriptableFramework.FoldoutAttribute.#ctor*:
    name:
      CSharp:
      - id: ScriptableFramework.FoldoutAttribute.#ctor*
        name: FoldoutAttribute
        nameWithType: FoldoutAttribute.FoldoutAttribute
        qualifiedName: ScriptableFramework.FoldoutAttribute.FoldoutAttribute
      VB:
      - id: ScriptableFramework.FoldoutAttribute.#ctor*
        name: FoldoutAttribute
        nameWithType: FoldoutAttribute.FoldoutAttribute
        qualifiedName: ScriptableFramework.FoldoutAttribute.FoldoutAttribute
    isDefinition: true
    commentId: Overload:ScriptableFramework.FoldoutAttribute.#ctor
  ScriptableFramework.FoldoutAttribute:
    name:
      CSharp:
      - id: ScriptableFramework.FoldoutAttribute
        name: FoldoutAttribute
        nameWithType: FoldoutAttribute
        qualifiedName: ScriptableFramework.FoldoutAttribute
      VB:
      - id: ScriptableFramework.FoldoutAttribute
        name: FoldoutAttribute
        nameWithType: FoldoutAttribute
        qualifiedName: ScriptableFramework.FoldoutAttribute
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.FoldoutAttribute
  ScriptableFramework.SearchableEnumAttribute:
    name:
      CSharp:
      - id: ScriptableFramework.SearchableEnumAttribute
        name: SearchableEnumAttribute
        nameWithType: SearchableEnumAttribute
        qualifiedName: ScriptableFramework.SearchableEnumAttribute
      VB:
      - id: ScriptableFramework.SearchableEnumAttribute
        name: SearchableEnumAttribute
        nameWithType: SearchableEnumAttribute
        qualifiedName: ScriptableFramework.SearchableEnumAttribute
    isDefinition: true
    commentId: T:ScriptableFramework.SearchableEnumAttribute
  ScriptableFramework.AppVersion.GetVersionNumber*:
    name:
      CSharp:
      - id: ScriptableFramework.AppVersion.GetVersionNumber*
        name: GetVersionNumber
        nameWithType: AppVersion.GetVersionNumber
        qualifiedName: ScriptableFramework.AppVersion.GetVersionNumber
      VB:
      - id: ScriptableFramework.AppVersion.GetVersionNumber*
        name: GetVersionNumber
        nameWithType: AppVersion.GetVersionNumber
        qualifiedName: ScriptableFramework.AppVersion.GetVersionNumber
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppVersion.GetVersionNumber
  ScriptableFramework:
    name:
      CSharp:
      - name: ScriptableFramework
        nameWithType: ScriptableFramework
        qualifiedName: ScriptableFramework
      VB:
      - name: ScriptableFramework
        nameWithType: ScriptableFramework
        qualifiedName: ScriptableFramework
    isDefinition: true
    commentId: N:ScriptableFramework
  ScriptableFramework.AppVersion:
    name:
      CSharp:
      - id: ScriptableFramework.AppVersion
        name: AppVersion
        nameWithType: AppVersion
        qualifiedName: ScriptableFramework.AppVersion
      VB:
      - id: ScriptableFramework.AppVersion
        name: AppVersion
        nameWithType: AppVersion
        qualifiedName: ScriptableFramework.AppVersion
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppVersion
  ScriptableFramework.AppVersion.op_Implicit*:
    name:
      CSharp:
      - id: ScriptableFramework.AppVersion.op_Implicit*
        name: Implicit
        nameWithType: AppVersion.Implicit
        qualifiedName: ScriptableFramework.AppVersion.Implicit
      VB:
      - id: ScriptableFramework.AppVersion.op_Implicit*
        name: Widening
        nameWithType: AppVersion.Widening
        qualifiedName: ScriptableFramework.AppVersion.Widening
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppVersion.op_Implicit
  ScriptableFramework.AppVersion.ToString*:
    name:
      CSharp:
      - id: ScriptableFramework.AppVersion.ToString*
        name: ToString
        nameWithType: AppVersion.ToString
        qualifiedName: ScriptableFramework.AppVersion.ToString
      VB:
      - id: ScriptableFramework.AppVersion.ToString*
        name: ToString
        nameWithType: AppVersion.ToString
        qualifiedName: ScriptableFramework.AppVersion.ToString
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppVersion.ToString
  ScriptableFramework.ReleaseType:
    name:
      CSharp:
      - id: ScriptableFramework.ReleaseType
        name: ReleaseType
        nameWithType: ReleaseType
        qualifiedName: ScriptableFramework.ReleaseType
      VB:
      - id: ScriptableFramework.ReleaseType
        name: ReleaseType
        nameWithType: ReleaseType
        qualifiedName: ScriptableFramework.ReleaseType
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReleaseType
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  ScriptableFramework.DataString.#ctor*:
    name:
      CSharp:
      - id: ScriptableFramework.DataString.#ctor*
        name: DataString
        nameWithType: DataString.DataString
        qualifiedName: ScriptableFramework.DataString.DataString
      VB:
      - id: ScriptableFramework.DataString.#ctor*
        name: DataString
        nameWithType: DataString.DataString
        qualifiedName: ScriptableFramework.DataString.DataString
    isDefinition: true
    commentId: Overload:ScriptableFramework.DataString.#ctor
  ScriptableFramework.DataString:
    name:
      CSharp:
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      VB:
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.DataString
  ScriptableFramework.DataString.op_Implicit*:
    name:
      CSharp:
      - id: ScriptableFramework.DataString.op_Implicit*
        name: Implicit
        nameWithType: DataString.Implicit
        qualifiedName: ScriptableFramework.DataString.Implicit
      VB:
      - id: ScriptableFramework.DataString.op_Implicit*
        name: Widening
        nameWithType: DataString.Widening
        qualifiedName: ScriptableFramework.DataString.Widening
    isDefinition: true
    commentId: Overload:ScriptableFramework.DataString.op_Implicit
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  ScriptableFramework.DataString.ToString*:
    name:
      CSharp:
      - id: ScriptableFramework.DataString.ToString*
        name: ToString
        nameWithType: DataString.ToString
        qualifiedName: ScriptableFramework.DataString.ToString
      VB:
      - id: ScriptableFramework.DataString.ToString*
        name: ToString
        nameWithType: DataString.ToString
        qualifiedName: ScriptableFramework.DataString.ToString
    isDefinition: true
    commentId: Overload:ScriptableFramework.DataString.ToString
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
  ScriptableFramework.Dragable.OnBeginDrag*:
    name:
      CSharp:
      - id: ScriptableFramework.Dragable.OnBeginDrag*
        name: OnBeginDrag
        nameWithType: Dragable.OnBeginDrag
        qualifiedName: ScriptableFramework.Dragable.OnBeginDrag
      VB:
      - id: ScriptableFramework.Dragable.OnBeginDrag*
        name: OnBeginDrag
        nameWithType: Dragable.OnBeginDrag
        qualifiedName: ScriptableFramework.Dragable.OnBeginDrag
    isDefinition: true
    commentId: Overload:ScriptableFramework.Dragable.OnBeginDrag
  ScriptableFramework.Dragable.OnEndDrag*:
    name:
      CSharp:
      - id: ScriptableFramework.Dragable.OnEndDrag*
        name: OnEndDrag
        nameWithType: Dragable.OnEndDrag
        qualifiedName: ScriptableFramework.Dragable.OnEndDrag
      VB:
      - id: ScriptableFramework.Dragable.OnEndDrag*
        name: OnEndDrag
        nameWithType: Dragable.OnEndDrag
        qualifiedName: ScriptableFramework.Dragable.OnEndDrag
    isDefinition: true
    commentId: Overload:ScriptableFramework.Dragable.OnEndDrag
  ScriptableFramework.Dragable:
    name:
      CSharp:
      - id: ScriptableFramework.Dragable
        name: Dragable
        nameWithType: Dragable
        qualifiedName: ScriptableFramework.Dragable
      VB:
      - id: ScriptableFramework.Dragable
        name: Dragable
        nameWithType: Dragable
        qualifiedName: ScriptableFramework.Dragable
    isDefinition: true
    commentId: T:ScriptableFramework.Dragable
  ScriptableFramework.InputValidation.IsMouseOverUIObject*:
    name:
      CSharp:
      - id: ScriptableFramework.InputValidation.IsMouseOverUIObject*
        name: IsMouseOverUIObject
        nameWithType: InputValidation.IsMouseOverUIObject
        qualifiedName: ScriptableFramework.InputValidation.IsMouseOverUIObject
      VB:
      - id: ScriptableFramework.InputValidation.IsMouseOverUIObject*
        name: IsMouseOverUIObject
        nameWithType: InputValidation.IsMouseOverUIObject
        qualifiedName: ScriptableFramework.InputValidation.IsMouseOverUIObject
    isDefinition: true
    commentId: Overload:ScriptableFramework.InputValidation.IsMouseOverUIObject
  ScriptableFramework.InputValidation:
    name:
      CSharp:
      - id: ScriptableFramework.InputValidation
        name: InputValidation
        nameWithType: InputValidation
        qualifiedName: ScriptableFramework.InputValidation
      VB:
      - id: ScriptableFramework.InputValidation
        name: InputValidation
        nameWithType: InputValidation
        qualifiedName: ScriptableFramework.InputValidation
    isDefinition: true
    commentId: T:ScriptableFramework.InputValidation
  ScriptableFramework.Platform.IsDesktop*:
    name:
      CSharp:
      - id: ScriptableFramework.Platform.IsDesktop*
        name: IsDesktop
        nameWithType: Platform.IsDesktop
        qualifiedName: ScriptableFramework.Platform.IsDesktop
      VB:
      - id: ScriptableFramework.Platform.IsDesktop*
        name: IsDesktop
        nameWithType: Platform.IsDesktop
        qualifiedName: ScriptableFramework.Platform.IsDesktop
    isDefinition: true
    commentId: Overload:ScriptableFramework.Platform.IsDesktop
  ScriptableFramework.Platform.IsMobile*:
    name:
      CSharp:
      - id: ScriptableFramework.Platform.IsMobile*
        name: IsMobile
        nameWithType: Platform.IsMobile
        qualifiedName: ScriptableFramework.Platform.IsMobile
      VB:
      - id: ScriptableFramework.Platform.IsMobile*
        name: IsMobile
        nameWithType: Platform.IsMobile
        qualifiedName: ScriptableFramework.Platform.IsMobile
    isDefinition: true
    commentId: Overload:ScriptableFramework.Platform.IsMobile
  ScriptableFramework.Platform.IsWeb*:
    name:
      CSharp:
      - id: ScriptableFramework.Platform.IsWeb*
        name: IsWeb
        nameWithType: Platform.IsWeb
        qualifiedName: ScriptableFramework.Platform.IsWeb
      VB:
      - id: ScriptableFramework.Platform.IsWeb*
        name: IsWeb
        nameWithType: Platform.IsWeb
        qualifiedName: ScriptableFramework.Platform.IsWeb
    isDefinition: true
    commentId: Overload:ScriptableFramework.Platform.IsWeb
  ScriptableFramework.Platform.FilePath*:
    name:
      CSharp:
      - id: ScriptableFramework.Platform.FilePath*
        name: FilePath
        nameWithType: Platform.FilePath
        qualifiedName: ScriptableFramework.Platform.FilePath
      VB:
      - id: ScriptableFramework.Platform.FilePath*
        name: FilePath
        nameWithType: Platform.FilePath
        qualifiedName: ScriptableFramework.Platform.FilePath
    isDefinition: true
    commentId: Overload:ScriptableFramework.Platform.FilePath
  ScriptableFramework.Platform.PersistentPath*:
    name:
      CSharp:
      - id: ScriptableFramework.Platform.PersistentPath*
        name: PersistentPath
        nameWithType: Platform.PersistentPath
        qualifiedName: ScriptableFramework.Platform.PersistentPath
      VB:
      - id: ScriptableFramework.Platform.PersistentPath*
        name: PersistentPath
        nameWithType: Platform.PersistentPath
        qualifiedName: ScriptableFramework.Platform.PersistentPath
    isDefinition: true
    commentId: Overload:ScriptableFramework.Platform.PersistentPath
  ScriptableFramework.Platform:
    name:
      CSharp:
      - id: ScriptableFramework.Platform
        name: Platform
        nameWithType: Platform
        qualifiedName: ScriptableFramework.Platform
      VB:
      - id: ScriptableFramework.Platform
        name: Platform
        nameWithType: Platform
        qualifiedName: ScriptableFramework.Platform
    isDefinition: true
    commentId: T:ScriptableFramework.Platform
  Global.LoadSceneMode:
    name:
      CSharp:
      - id: Global.LoadSceneMode
        name: LoadSceneMode
        nameWithType: LoadSceneMode
        qualifiedName: LoadSceneMode
        isExternal: true
      VB:
      - id: Global.LoadSceneMode
        name: LoadSceneMode
        nameWithType: LoadSceneMode
        qualifiedName: LoadSceneMode
        isExternal: true
    isDefinition: true
  ScriptableFramework.SceneAsset.LoadScene*:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset.LoadScene*
        name: LoadScene
        nameWithType: SceneAsset.LoadScene
        qualifiedName: ScriptableFramework.SceneAsset.LoadScene
      VB:
      - id: ScriptableFramework.SceneAsset.LoadScene*
        name: LoadScene
        nameWithType: SceneAsset.LoadScene
        qualifiedName: ScriptableFramework.SceneAsset.LoadScene
    isDefinition: true
    commentId: Overload:ScriptableFramework.SceneAsset.LoadScene
  Global.AsyncOperation:
    name:
      CSharp:
      - id: Global.AsyncOperation
        name: AsyncOperation
        nameWithType: AsyncOperation
        qualifiedName: AsyncOperation
        isExternal: true
      VB:
      - id: Global.AsyncOperation
        name: AsyncOperation
        nameWithType: AsyncOperation
        qualifiedName: AsyncOperation
        isExternal: true
    isDefinition: true
    commentId: '!:Global.AsyncOperation'
  ScriptableFramework.SceneAsset.LoadSceneAsync*:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset.LoadSceneAsync*
        name: LoadSceneAsync
        nameWithType: SceneAsset.LoadSceneAsync
        qualifiedName: ScriptableFramework.SceneAsset.LoadSceneAsync
      VB:
      - id: ScriptableFramework.SceneAsset.LoadSceneAsync*
        name: LoadSceneAsync
        nameWithType: SceneAsset.LoadSceneAsync
        qualifiedName: ScriptableFramework.SceneAsset.LoadSceneAsync
    isDefinition: true
    commentId: Overload:ScriptableFramework.SceneAsset.LoadSceneAsync
  ScriptableFramework.SceneAsset.OnBeforeSerialize*:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: SceneAsset.OnBeforeSerialize
        qualifiedName: ScriptableFramework.SceneAsset.OnBeforeSerialize
      VB:
      - id: ScriptableFramework.SceneAsset.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: SceneAsset.OnBeforeSerialize
        qualifiedName: ScriptableFramework.SceneAsset.OnBeforeSerialize
    isDefinition: true
    commentId: Overload:ScriptableFramework.SceneAsset.OnBeforeSerialize
  ScriptableFramework.SceneAsset.OnAfterDeserialize*:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: SceneAsset.OnAfterDeserialize
        qualifiedName: ScriptableFramework.SceneAsset.OnAfterDeserialize
      VB:
      - id: ScriptableFramework.SceneAsset.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: SceneAsset.OnAfterDeserialize
        qualifiedName: ScriptableFramework.SceneAsset.OnAfterDeserialize
    isDefinition: true
    commentId: Overload:ScriptableFramework.SceneAsset.OnAfterDeserialize
  ScriptableFramework.SceneAsset:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset
        name: SceneAsset
        nameWithType: SceneAsset
        qualifiedName: ScriptableFramework.SceneAsset
      VB:
      - id: ScriptableFramework.SceneAsset
        name: SceneAsset
        nameWithType: SceneAsset
        qualifiedName: ScriptableFramework.SceneAsset
    isDefinition: true
    commentId: T:ScriptableFramework.SceneAsset
  ScriptableFramework.SceneAsset.SceneLoadException.#ctor*:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset.SceneLoadException.#ctor*
        name: SceneLoadException
        nameWithType: SceneAsset.SceneLoadException.SceneLoadException
        qualifiedName: ScriptableFramework.SceneAsset.SceneLoadException.SceneLoadException
      VB:
      - id: ScriptableFramework.SceneAsset.SceneLoadException.#ctor*
        name: SceneLoadException
        nameWithType: SceneAsset.SceneLoadException.SceneLoadException
        qualifiedName: ScriptableFramework.SceneAsset.SceneLoadException.SceneLoadException
    isDefinition: true
    commentId: Overload:ScriptableFramework.SceneAsset.SceneLoadException.#ctor
  ScriptableFramework.SceneAsset.SceneLoadException:
    name:
      CSharp:
      - id: ScriptableFramework.SceneAsset.SceneLoadException
        name: SceneAsset.SceneLoadException
        nameWithType: SceneAsset.SceneLoadException
        qualifiedName: ScriptableFramework.SceneAsset.SceneLoadException
      VB:
      - id: ScriptableFramework.SceneAsset.SceneLoadException
        name: SceneAsset.SceneLoadException
        nameWithType: SceneAsset.SceneLoadException
        qualifiedName: ScriptableFramework.SceneAsset.SceneLoadException
    isDefinition: true
    commentId: T:ScriptableFramework.SceneAsset.SceneLoadException
  ScriptableFramework.RuntimeObject.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObject.Clear*
        name: Clear
        nameWithType: RuntimeObject.Clear
        qualifiedName: ScriptableFramework.RuntimeObject.Clear
      VB:
      - id: ScriptableFramework.RuntimeObject.Clear*
        name: Clear
        nameWithType: RuntimeObject.Clear
        qualifiedName: ScriptableFramework.RuntimeObject.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeObject.Clear
  ScriptableFramework.RuntimeObject.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObject.Reset*
        name: Reset
        nameWithType: RuntimeObject.Reset
        qualifiedName: ScriptableFramework.RuntimeObject.Reset
      VB:
      - id: ScriptableFramework.RuntimeObject.Reset*
        name: Reset
        nameWithType: RuntimeObject.Reset
        qualifiedName: ScriptableFramework.RuntimeObject.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeObject.Reset
  ScriptableFramework.RuntimeObject:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObject
        name: RuntimeObject
        nameWithType: RuntimeObject
        qualifiedName: ScriptableFramework.RuntimeObject
      VB:
      - id: ScriptableFramework.RuntimeObject
        name: RuntimeObject
        nameWithType: RuntimeObject
        qualifiedName: ScriptableFramework.RuntimeObject
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeObject
  ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType*
        name: ResetObjectsOfType
        nameWithType: RuntimeObjectManager.ResetObjectsOfType
        qualifiedName: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType
      VB:
      - id: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType*
        name: ResetObjectsOfType
        nameWithType: RuntimeObjectManager.ResetObjectsOfType
        qualifiedName: ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeObjectManager.ResetObjectsOfType
  ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType*
        name: ClearObjectsOfType
        nameWithType: RuntimeObjectManager.ClearObjectsOfType
        qualifiedName: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType
      VB:
      - id: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType*
        name: ClearObjectsOfType
        nameWithType: RuntimeObjectManager.ClearObjectsOfType
        qualifiedName: ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeObjectManager.ClearObjectsOfType
  ScriptableFramework.RuntimeObjectManager:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObjectManager
        name: RuntimeObjectManager
        nameWithType: RuntimeObjectManager
        qualifiedName: ScriptableFramework.RuntimeObjectManager
      VB:
      - id: ScriptableFramework.RuntimeObjectManager
        name: RuntimeObjectManager
        nameWithType: RuntimeObjectManager
        qualifiedName: ScriptableFramework.RuntimeObjectManager
    isDefinition: true
    commentId: T:ScriptableFramework.RuntimeObjectManager
  ScriptableFramework.AppEventListenerBase:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase
        name: AppEventListenerBase
        nameWithType: AppEventListenerBase
        qualifiedName: ScriptableFramework.AppEventListenerBase
      VB:
      - id: ScriptableFramework.AppEventListenerBase
        name: AppEventListenerBase
        nameWithType: AppEventListenerBase
        qualifiedName: ScriptableFramework.AppEventListenerBase
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListenerBase
  ScriptableFramework.AppEvent:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      VB:
      - id: ScriptableFramework.AppEvent
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent
  Global.UnityEvent:
    name:
      CSharp:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      VB:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
    isDefinition: true
    commentId: '!:Global.UnityEvent'
  ScriptableFramework.AppEventListenerBase.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListenerBase.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListenerBase.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListenerBase.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.AppEventListenerBase
    commentId: M:ScriptableFramework.AppEventListenerBase.RegisterSelf
  ScriptableFramework.AppEventListener.RegisterSelf*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener.RegisterSelf*
        name: RegisterSelf
        nameWithType: AppEventListener.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener.RegisterSelf
      VB:
      - id: ScriptableFramework.AppEventListener.RegisterSelf*
        name: RegisterSelf
        nameWithType: AppEventListener.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener.RegisterSelf
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener.RegisterSelf
  ScriptableFramework.AppEventListenerBase.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListenerBase.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListenerBase.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListenerBase.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.AppEventListenerBase
    commentId: M:ScriptableFramework.AppEventListenerBase.UnregisterSelf
  ScriptableFramework.AppEventListener.UnregisterSelf*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener.UnregisterSelf*
        name: UnregisterSelf
        nameWithType: AppEventListener.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener.UnregisterSelf
      VB:
      - id: ScriptableFramework.AppEventListener.UnregisterSelf*
        name: UnregisterSelf
        nameWithType: AppEventListener.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener.UnregisterSelf
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener.UnregisterSelf
  ScriptableFramework.AppEventListenerBase.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListenerBase.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListenerBase.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListenerBase.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListenerBase.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListenerBase.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.AppEventListenerBase
    commentId: M:ScriptableFramework.AppEventListenerBase.OnEventRaised
  ScriptableFramework.AppEventListener.OnEventRaised*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener.OnEventRaised*
        name: OnEventRaised
        nameWithType: AppEventListener.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener.OnEventRaised
      VB:
      - id: ScriptableFramework.AppEventListener.OnEventRaised*
        name: OnEventRaised
        nameWithType: AppEventListener.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener.OnEventRaised
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener.OnEventRaised
  ScriptableFramework.AppEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      VB:
      - id: ScriptableFramework.AppEventListener
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  ScriptableFramework.AppEvent`1:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.AppEvent`1
  ScriptableFramework.AppEvent{{T}}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{`0}
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`1'
  Global.UnityEvent{{T}}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{`0}'
  ScriptableFramework.AppEventListener`1.RegisterSelf*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf*
        name: RegisterSelf
        nameWithType: AppEventListener<T>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<T>.RegisterSelf
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf*
        name: RegisterSelf
        nameWithType: AppEventListener(Of T).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of T).RegisterSelf
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener`1.RegisterSelf
  ScriptableFramework.AppEventListener`1.UnregisterSelf*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf*
        name: UnregisterSelf
        nameWithType: AppEventListener<T>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<T>.UnregisterSelf
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf*
        name: UnregisterSelf
        nameWithType: AppEventListener(Of T).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of T).UnregisterSelf
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener`1.UnregisterSelf
  ScriptableFramework.AppEventListener`1.OnEventRaised*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised*
        name: OnEventRaised
        nameWithType: AppEventListener<T>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<T>.OnEventRaised
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised*
        name: OnEventRaised
        nameWithType: AppEventListener(Of T).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of T).OnEventRaised
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener`1.OnEventRaised
  ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<T>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<T>.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of T).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of T).SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
  ScriptableFramework.AppEventListener`1:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.AppEventListener`1
  ScriptableFramework.AppEventListenerBase.OnEventRaised*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase.OnEventRaised*
        name: OnEventRaised
        nameWithType: AppEventListenerBase.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListenerBase.OnEventRaised
      VB:
      - id: ScriptableFramework.AppEventListenerBase.OnEventRaised*
        name: OnEventRaised
        nameWithType: AppEventListenerBase.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListenerBase.OnEventRaised
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListenerBase.OnEventRaised
  ScriptableFramework.AppEventListenerBase.RegisterSelf*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase.RegisterSelf*
        name: RegisterSelf
        nameWithType: AppEventListenerBase.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.RegisterSelf
      VB:
      - id: ScriptableFramework.AppEventListenerBase.RegisterSelf*
        name: RegisterSelf
        nameWithType: AppEventListenerBase.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.RegisterSelf
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListenerBase.RegisterSelf
  ScriptableFramework.AppEventListenerBase.UnregisterSelf*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListenerBase.UnregisterSelf*
        name: UnregisterSelf
        nameWithType: AppEventListenerBase.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.UnregisterSelf
      VB:
      - id: ScriptableFramework.AppEventListenerBase.UnregisterSelf*
        name: UnregisterSelf
        nameWithType: AppEventListenerBase.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListenerBase.UnregisterSelf
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventListenerBase.UnregisterSelf
  ScriptableFramework.AppEventListener{System.Boolean}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{System.Boolean}
  ScriptableFramework.AppEventListener`1.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<T>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<T>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of T).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of T).valueForManualTrigger
    isDefinition: true
    commentId: F:ScriptableFramework.AppEventListener`1.valueForManualTrigger
  ScriptableFramework.AppEventListener{System.Boolean}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<Boolean>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of Boolean).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: F:ScriptableFramework.AppEventListener{System.Boolean}.valueForManualTrigger
  ScriptableFramework.AppEventListener`1.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<T>.Event
        qualifiedName: ScriptableFramework.AppEventListener<T>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of T).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of T).Event
    isDefinition: true
    commentId: F:ScriptableFramework.AppEventListener`1.Event
  ScriptableFramework.AppEventListener{System.Boolean}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<Boolean>.Event
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of Boolean).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: F:ScriptableFramework.AppEventListener{System.Boolean}.Event
  ScriptableFramework.AppEventListener`1.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<T>.Response
        qualifiedName: ScriptableFramework.AppEventListener<T>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of T).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of T).Response
    isDefinition: true
    commentId: F:ScriptableFramework.AppEventListener`1.Response
  ScriptableFramework.AppEventListener{System.Boolean}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<Boolean>.Response
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of Boolean).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: F:ScriptableFramework.AppEventListener{System.Boolean}.Response
  ScriptableFramework.AppEventListener`1.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<T>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<T>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of T).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of T).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEventListener`1.RegisterSelf
  ScriptableFramework.AppEventListener{System.Boolean}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<Boolean>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of Boolean).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: M:ScriptableFramework.AppEventListener{System.Boolean}.RegisterSelf
  ScriptableFramework.AppEventListener`1.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<T>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<T>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of T).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of T).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEventListener`1.UnregisterSelf
  ScriptableFramework.AppEventListener{System.Boolean}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<Boolean>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of Boolean).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: M:ScriptableFramework.AppEventListener{System.Boolean}.UnregisterSelf
  ScriptableFramework.AppEventListener`1.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<T>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<T>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of T).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of T).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEventListener`1.OnEventRaised
  ScriptableFramework.AppEventListener{System.Boolean}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<Boolean>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of Boolean).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: M:ScriptableFramework.AppEventListener{System.Boolean}.OnEventRaised
  ScriptableFramework.AppEventListener`1.OnEventRaised(`0):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<T>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<T>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of T).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of T).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
  ScriptableFramework.AppEventListener{System.Boolean}.OnEventRaised(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<Boolean>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of Boolean).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: M:ScriptableFramework.AppEventListener{System.Boolean}.OnEventRaised(System.Boolean)
  ScriptableFramework.BoolEvent:
    name:
      CSharp:
      - id: ScriptableFramework.BoolEvent
        name: BoolEvent
        nameWithType: BoolEvent
        qualifiedName: ScriptableFramework.BoolEvent
      VB:
      - id: ScriptableFramework.BoolEvent
        name: BoolEvent
        nameWithType: BoolEvent
        qualifiedName: ScriptableFramework.BoolEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.BoolEvent
  ScriptableFramework.BoolResponse:
    name:
      CSharp:
      - id: ScriptableFramework.BoolResponse
        name: BoolResponse
        nameWithType: BoolResponse
        qualifiedName: ScriptableFramework.BoolResponse
      VB:
      - id: ScriptableFramework.BoolResponse
        name: BoolResponse
        nameWithType: BoolResponse
        qualifiedName: ScriptableFramework.BoolResponse
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.BoolResponse
  ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<T>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<T>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of T).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of T).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
  ScriptableFramework.AppEventListener{System.Boolean}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<Boolean>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<System.Boolean>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of Boolean).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Boolean).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{System.Boolean}
    commentId: M:ScriptableFramework.AppEventListener{System.Boolean}.SetInternalEventAndResponse
  ScriptableFramework.BoolEventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: BoolEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: BoolEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.BoolEventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.BoolEventListener.SetInternalEventAndResponse
  ScriptableFramework.BoolEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.BoolEventListener
        name: BoolEventListener
        nameWithType: BoolEventListener
        qualifiedName: ScriptableFramework.BoolEventListener
      VB:
      - id: ScriptableFramework.BoolEventListener
        name: BoolEventListener
        nameWithType: BoolEventListener
        qualifiedName: ScriptableFramework.BoolEventListener
    isDefinition: true
    commentId: T:ScriptableFramework.BoolEventListener
  ScriptableFramework.AppEventListener{Bounds}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{Bounds}
  ScriptableFramework.AppEventListener{Bounds}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<Bounds>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of Bounds).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: F:ScriptableFramework.AppEventListener{Bounds}.valueForManualTrigger
  ScriptableFramework.AppEventListener{Bounds}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<Bounds>.Event
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of Bounds).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: F:ScriptableFramework.AppEventListener{Bounds}.Event
  ScriptableFramework.AppEventListener{Bounds}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<Bounds>.Response
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of Bounds).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: F:ScriptableFramework.AppEventListener{Bounds}.Response
  ScriptableFramework.AppEventListener{Bounds}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<Bounds>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of Bounds).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: M:ScriptableFramework.AppEventListener{Bounds}.RegisterSelf
  ScriptableFramework.AppEventListener{Bounds}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<Bounds>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of Bounds).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: M:ScriptableFramework.AppEventListener{Bounds}.UnregisterSelf
  ScriptableFramework.AppEventListener{Bounds}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<Bounds>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of Bounds).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: M:ScriptableFramework.AppEventListener{Bounds}.OnEventRaised
  ScriptableFramework.AppEventListener{Bounds}.OnEventRaised(Bounds):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<Bounds>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of Bounds).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: M:ScriptableFramework.AppEventListener{Bounds}.OnEventRaised(Bounds)
  ScriptableFramework.BoundsEvent:
    name:
      CSharp:
      - id: ScriptableFramework.BoundsEvent
        name: BoundsEvent
        nameWithType: BoundsEvent
        qualifiedName: ScriptableFramework.BoundsEvent
      VB:
      - id: ScriptableFramework.BoundsEvent
        name: BoundsEvent
        nameWithType: BoundsEvent
        qualifiedName: ScriptableFramework.BoundsEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.BoundsEvent
  ScriptableFramework.BoundsResponse:
    name:
      CSharp:
      - id: ScriptableFramework.BoundsResponse
        name: BoundsResponse
        nameWithType: BoundsResponse
        qualifiedName: ScriptableFramework.BoundsResponse
      VB:
      - id: ScriptableFramework.BoundsResponse
        name: BoundsResponse
        nameWithType: BoundsResponse
        qualifiedName: ScriptableFramework.BoundsResponse
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.BoundsResponse
  ScriptableFramework.AppEventListener{Bounds}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<Bounds>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<Bounds>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of Bounds).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of Bounds).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{Bounds}
    commentId: M:ScriptableFramework.AppEventListener{Bounds}.SetInternalEventAndResponse
  ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: BoundsEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: BoundsEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.BoundsEventListener.SetInternalEventAndResponse
  ScriptableFramework.BoundsEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.BoundsEventListener
        name: BoundsEventListener
        nameWithType: BoundsEventListener
        qualifiedName: ScriptableFramework.BoundsEventListener
      VB:
      - id: ScriptableFramework.BoundsEventListener
        name: BoundsEventListener
        nameWithType: BoundsEventListener
        qualifiedName: ScriptableFramework.BoundsEventListener
    isDefinition: true
    commentId: T:ScriptableFramework.BoundsEventListener
  ScriptableFramework.AppEventListener{Color}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{Color}
  ScriptableFramework.AppEventListener{Color}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<Color>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<Color>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of Color).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: F:ScriptableFramework.AppEventListener{Color}.valueForManualTrigger
  ScriptableFramework.AppEventListener{Color}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<Color>.Event
        qualifiedName: ScriptableFramework.AppEventListener<Color>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of Color).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: F:ScriptableFramework.AppEventListener{Color}.Event
  ScriptableFramework.AppEventListener{Color}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<Color>.Response
        qualifiedName: ScriptableFramework.AppEventListener<Color>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of Color).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: F:ScriptableFramework.AppEventListener{Color}.Response
  ScriptableFramework.AppEventListener{Color}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<Color>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<Color>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of Color).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: M:ScriptableFramework.AppEventListener{Color}.RegisterSelf
  ScriptableFramework.AppEventListener{Color}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<Color>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<Color>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of Color).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: M:ScriptableFramework.AppEventListener{Color}.UnregisterSelf
  ScriptableFramework.AppEventListener{Color}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<Color>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<Color>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of Color).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: M:ScriptableFramework.AppEventListener{Color}.OnEventRaised
  ScriptableFramework.AppEventListener{Color}.OnEventRaised(Color):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<Color>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<Color>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of Color).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: M:ScriptableFramework.AppEventListener{Color}.OnEventRaised(Color)
  ScriptableFramework.ColorEvent:
    name:
      CSharp:
      - id: ScriptableFramework.ColorEvent
        name: ColorEvent
        nameWithType: ColorEvent
        qualifiedName: ScriptableFramework.ColorEvent
      VB:
      - id: ScriptableFramework.ColorEvent
        name: ColorEvent
        nameWithType: ColorEvent
        qualifiedName: ScriptableFramework.ColorEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ColorEvent
  ScriptableFramework.ColorResponse:
    name:
      CSharp:
      - id: ScriptableFramework.ColorResponse
        name: ColorResponse
        nameWithType: ColorResponse
        qualifiedName: ScriptableFramework.ColorResponse
      VB:
      - id: ScriptableFramework.ColorResponse
        name: ColorResponse
        nameWithType: ColorResponse
        qualifiedName: ScriptableFramework.ColorResponse
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ColorResponse
  ScriptableFramework.AppEventListener{Color}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<Color>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<Color>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of Color).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of Color).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{Color}
    commentId: M:ScriptableFramework.AppEventListener{Color}.SetInternalEventAndResponse
  ScriptableFramework.ColorEventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: ColorEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: ColorEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.ColorEventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.ColorEventListener.SetInternalEventAndResponse
  ScriptableFramework.ColorEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.ColorEventListener
        name: ColorEventListener
        nameWithType: ColorEventListener
        qualifiedName: ScriptableFramework.ColorEventListener
      VB:
      - id: ScriptableFramework.ColorEventListener
        name: ColorEventListener
        nameWithType: ColorEventListener
        qualifiedName: ScriptableFramework.ColorEventListener
    isDefinition: true
    commentId: T:ScriptableFramework.ColorEventListener
  ScriptableFramework.AppEventListener{System.Single}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{System.Single}
  ScriptableFramework.AppEventListener{System.Single}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<Single>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of Single).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: F:ScriptableFramework.AppEventListener{System.Single}.valueForManualTrigger
  ScriptableFramework.AppEventListener{System.Single}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<Single>.Event
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of Single).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: F:ScriptableFramework.AppEventListener{System.Single}.Event
  ScriptableFramework.AppEventListener{System.Single}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<Single>.Response
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of Single).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: F:ScriptableFramework.AppEventListener{System.Single}.Response
  ScriptableFramework.AppEventListener{System.Single}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<Single>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of Single).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: M:ScriptableFramework.AppEventListener{System.Single}.RegisterSelf
  ScriptableFramework.AppEventListener{System.Single}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<Single>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of Single).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: M:ScriptableFramework.AppEventListener{System.Single}.UnregisterSelf
  ScriptableFramework.AppEventListener{System.Single}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<Single>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of Single).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: M:ScriptableFramework.AppEventListener{System.Single}.OnEventRaised
  ScriptableFramework.AppEventListener{System.Single}.OnEventRaised(System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<Single>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of Single).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: M:ScriptableFramework.AppEventListener{System.Single}.OnEventRaised(System.Single)
  ScriptableFramework.FloatEvent:
    name:
      CSharp:
      - id: ScriptableFramework.FloatEvent
        name: FloatEvent
        nameWithType: FloatEvent
        qualifiedName: ScriptableFramework.FloatEvent
      VB:
      - id: ScriptableFramework.FloatEvent
        name: FloatEvent
        nameWithType: FloatEvent
        qualifiedName: ScriptableFramework.FloatEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.FloatEvent
  ScriptableFramework.FloatResponse:
    name:
      CSharp:
      - id: ScriptableFramework.FloatResponse
        name: FloatResponse
        nameWithType: FloatResponse
        qualifiedName: ScriptableFramework.FloatResponse
      VB:
      - id: ScriptableFramework.FloatResponse
        name: FloatResponse
        nameWithType: FloatResponse
        qualifiedName: ScriptableFramework.FloatResponse
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.FloatResponse
  ScriptableFramework.AppEventListener{System.Single}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<Single>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<System.Single>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of Single).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Single).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{System.Single}
    commentId: M:ScriptableFramework.AppEventListener{System.Single}.SetInternalEventAndResponse
  ScriptableFramework.FloatEventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: FloatEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: FloatEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.FloatEventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.FloatEventListener.SetInternalEventAndResponse
  ScriptableFramework.FloatEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.FloatEventListener
        name: FloatEventListener
        nameWithType: FloatEventListener
        qualifiedName: ScriptableFramework.FloatEventListener
      VB:
      - id: ScriptableFramework.FloatEventListener
        name: FloatEventListener
        nameWithType: FloatEventListener
        qualifiedName: ScriptableFramework.FloatEventListener
    isDefinition: true
    commentId: T:ScriptableFramework.FloatEventListener
  ScriptableFramework.AppEventListener{System.Int32}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{System.Int32}
  ScriptableFramework.AppEventListener{System.Int32}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<Int32>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of Int32).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: F:ScriptableFramework.AppEventListener{System.Int32}.valueForManualTrigger
  ScriptableFramework.AppEventListener{System.Int32}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<Int32>.Event
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of Int32).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: F:ScriptableFramework.AppEventListener{System.Int32}.Event
  ScriptableFramework.AppEventListener{System.Int32}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<Int32>.Response
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of Int32).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: F:ScriptableFramework.AppEventListener{System.Int32}.Response
  ScriptableFramework.AppEventListener{System.Int32}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<Int32>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of Int32).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: M:ScriptableFramework.AppEventListener{System.Int32}.RegisterSelf
  ScriptableFramework.AppEventListener{System.Int32}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<Int32>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of Int32).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: M:ScriptableFramework.AppEventListener{System.Int32}.UnregisterSelf
  ScriptableFramework.AppEventListener{System.Int32}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<Int32>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of Int32).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: M:ScriptableFramework.AppEventListener{System.Int32}.OnEventRaised
  ScriptableFramework.AppEventListener{System.Int32}.OnEventRaised(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<Int32>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of Int32).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: M:ScriptableFramework.AppEventListener{System.Int32}.OnEventRaised(System.Int32)
  ScriptableFramework.IntEvent:
    name:
      CSharp:
      - id: ScriptableFramework.IntEvent
        name: IntEvent
        nameWithType: IntEvent
        qualifiedName: ScriptableFramework.IntEvent
      VB:
      - id: ScriptableFramework.IntEvent
        name: IntEvent
        nameWithType: IntEvent
        qualifiedName: ScriptableFramework.IntEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.IntEvent
  ScriptableFramework.IntResponse:
    name:
      CSharp:
      - id: ScriptableFramework.IntResponse
        name: IntResponse
        nameWithType: IntResponse
        qualifiedName: ScriptableFramework.IntResponse
      VB:
      - id: ScriptableFramework.IntResponse
        name: IntResponse
        nameWithType: IntResponse
        qualifiedName: ScriptableFramework.IntResponse
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.IntResponse
  ScriptableFramework.AppEventListener{System.Int32}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<Int32>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<System.Int32>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of Int32).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of System.Int32).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{System.Int32}
    commentId: M:ScriptableFramework.AppEventListener{System.Int32}.SetInternalEventAndResponse
  ScriptableFramework.IntEventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.IntEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: IntEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.IntEventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.IntEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: IntEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.IntEventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.IntEventListener.SetInternalEventAndResponse
  ScriptableFramework.IntEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.IntEventListener
        name: IntEventListener
        nameWithType: IntEventListener
        qualifiedName: ScriptableFramework.IntEventListener
      VB:
      - id: ScriptableFramework.IntEventListener
        name: IntEventListener
        nameWithType: IntEventListener
        qualifiedName: ScriptableFramework.IntEventListener
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.IntEventListener
  ScriptableFramework.AppEventListener{System.String}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{System.String}
  ScriptableFramework.AppEventListener{System.String}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<String>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of String).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: F:ScriptableFramework.AppEventListener{System.String}.valueForManualTrigger
  ScriptableFramework.AppEventListener{System.String}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<String>.Event
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of String).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: F:ScriptableFramework.AppEventListener{System.String}.Event
  ScriptableFramework.AppEventListener{System.String}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<String>.Response
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of String).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: F:ScriptableFramework.AppEventListener{System.String}.Response
  ScriptableFramework.AppEventListener{System.String}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<String>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of String).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: M:ScriptableFramework.AppEventListener{System.String}.RegisterSelf
  ScriptableFramework.AppEventListener{System.String}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<String>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of String).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: M:ScriptableFramework.AppEventListener{System.String}.UnregisterSelf
  ScriptableFramework.AppEventListener{System.String}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<String>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of String).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: M:ScriptableFramework.AppEventListener{System.String}.OnEventRaised
  ScriptableFramework.AppEventListener{System.String}.OnEventRaised(System.String):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<String>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of String).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: M:ScriptableFramework.AppEventListener{System.String}.OnEventRaised(System.String)
  ScriptableFramework.StringEvent:
    name:
      CSharp:
      - id: ScriptableFramework.StringEvent
        name: StringEvent
        nameWithType: StringEvent
        qualifiedName: ScriptableFramework.StringEvent
      VB:
      - id: ScriptableFramework.StringEvent
        name: StringEvent
        nameWithType: StringEvent
        qualifiedName: ScriptableFramework.StringEvent
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.StringEvent
  ScriptableFramework.StringResponse:
    name:
      CSharp:
      - id: ScriptableFramework.StringResponse
        name: StringResponse
        nameWithType: StringResponse
        qualifiedName: ScriptableFramework.StringResponse
      VB:
      - id: ScriptableFramework.StringResponse
        name: StringResponse
        nameWithType: StringResponse
        qualifiedName: ScriptableFramework.StringResponse
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.StringResponse
  ScriptableFramework.AppEventListener{System.String}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<String>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<System.String>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of String).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of System.String).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{System.String}
    commentId: M:ScriptableFramework.AppEventListener{System.String}.SetInternalEventAndResponse
  ScriptableFramework.StringEventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.StringEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: StringEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.StringEventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.StringEventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: StringEventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.StringEventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.StringEventListener.SetInternalEventAndResponse
  ScriptableFramework.StringEventListener:
    name:
      CSharp:
      - id: ScriptableFramework.StringEventListener
        name: StringEventListener
        nameWithType: StringEventListener
        qualifiedName: ScriptableFramework.StringEventListener
      VB:
      - id: ScriptableFramework.StringEventListener
        name: StringEventListener
        nameWithType: StringEventListener
        qualifiedName: ScriptableFramework.StringEventListener
    isDefinition: true
    commentId: T:ScriptableFramework.StringEventListener
  ScriptableFramework.AppEventListener{Vector3}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{Vector3}
  ScriptableFramework.AppEventListener{Vector3}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener<Vector3>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEventListener`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEventListener(Of Vector3).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.valueForManualTrigger
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: F:ScriptableFramework.AppEventListener{Vector3}.valueForManualTrigger
  ScriptableFramework.AppEventListener{Vector3}.Event:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener<Vector3>.Event
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.Event
      VB:
      - id: ScriptableFramework.AppEventListener`1.Event
        name: Event
        nameWithType: AppEventListener(Of Vector3).Event
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).Event
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Event
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: F:ScriptableFramework.AppEventListener{Vector3}.Event
  ScriptableFramework.AppEventListener{Vector3}.Response:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener<Vector3>.Response
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.Response
      VB:
      - id: ScriptableFramework.AppEventListener`1.Response
        name: Response
        nameWithType: AppEventListener(Of Vector3).Response
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).Response
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.Response
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: F:ScriptableFramework.AppEventListener{Vector3}.Response
  ScriptableFramework.AppEventListener{Vector3}.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener<Vector3>.RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.RegisterSelf
        name: RegisterSelf
        nameWithType: AppEventListener(Of Vector3).RegisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).RegisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.RegisterSelf
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: M:ScriptableFramework.AppEventListener{Vector3}.RegisterSelf
  ScriptableFramework.AppEventListener{Vector3}.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener<Vector3>.UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.UnregisterSelf
        name: UnregisterSelf
        nameWithType: AppEventListener(Of Vector3).UnregisterSelf
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).UnregisterSelf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.UnregisterSelf
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: M:ScriptableFramework.AppEventListener{Vector3}.UnregisterSelf
  ScriptableFramework.AppEventListener{Vector3}.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener<Vector3>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised
        name: OnEventRaised
        nameWithType: AppEventListener(Of Vector3).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: M:ScriptableFramework.AppEventListener{Vector3}.OnEventRaised
  ScriptableFramework.AppEventListener{Vector3}.OnEventRaised(Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener<Vector3>.OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
        name: OnEventRaised
        nameWithType: AppEventListener(Of Vector3).OnEventRaised
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).OnEventRaised
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.OnEventRaised(`0)
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: M:ScriptableFramework.AppEventListener{Vector3}.OnEventRaised(Vector3)
  ScriptableFramework.Vector3Event:
    name:
      CSharp:
      - id: ScriptableFramework.Vector3Event
        name: Vector3Event
        nameWithType: Vector3Event
        qualifiedName: ScriptableFramework.Vector3Event
      VB:
      - id: ScriptableFramework.Vector3Event
        name: Vector3Event
        nameWithType: Vector3Event
        qualifiedName: ScriptableFramework.Vector3Event
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.Vector3Event
  ScriptableFramework.Vector3Response:
    name:
      CSharp:
      - id: ScriptableFramework.Vector3Response
        name: Vector3Response
        nameWithType: Vector3Response
        qualifiedName: ScriptableFramework.Vector3Response
      VB:
      - id: ScriptableFramework.Vector3Response
        name: Vector3Response
        nameWithType: Vector3Response
        qualifiedName: ScriptableFramework.Vector3Response
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.Vector3Response
  ScriptableFramework.AppEventListener{Vector3}.SetInternalEventAndResponse:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener<Vector3>.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener<Vector3>.SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
        name: SetInternalEventAndResponse
        nameWithType: AppEventListener(Of Vector3).SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.AppEventListener(Of Vector3).SetInternalEventAndResponse
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1.SetInternalEventAndResponse
    parent: ScriptableFramework.AppEventListener{Vector3}
    commentId: M:ScriptableFramework.AppEventListener{Vector3}.SetInternalEventAndResponse
  ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: Vector3EventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse
      VB:
      - id: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse*
        name: SetInternalEventAndResponse
        nameWithType: Vector3EventListener.SetInternalEventAndResponse
        qualifiedName: ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.Vector3EventListener.SetInternalEventAndResponse
  ScriptableFramework.Vector3EventListener:
    name:
      CSharp:
      - id: ScriptableFramework.Vector3EventListener
        name: Vector3EventListener
        nameWithType: Vector3EventListener
        qualifiedName: ScriptableFramework.Vector3EventListener
      VB:
      - id: ScriptableFramework.Vector3EventListener
        name: Vector3EventListener
        nameWithType: Vector3EventListener
        qualifiedName: ScriptableFramework.Vector3EventListener
    isDefinition: true
    commentId: T:ScriptableFramework.Vector3EventListener
  ScriptableFramework.AppEventBase:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventBase
        name: AppEventBase
        nameWithType: AppEventBase
        qualifiedName: ScriptableFramework.AppEventBase
      VB:
      - id: ScriptableFramework.AppEventBase
        name: AppEventBase
        nameWithType: AppEventBase
        qualifiedName: ScriptableFramework.AppEventBase
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventBase
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  ScriptableFramework.AppEvent.ListenerCount*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent.ListenerCount*
        name: ListenerCount
        nameWithType: AppEvent.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent.ListenerCount*
        name: ListenerCount
        nameWithType: AppEvent.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent.ListenerCount
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent.ListenerCount
  ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEventBase.RaiseEvent
        qualifiedName: ScriptableFramework.AppEventBase.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEventBase.RaiseEvent
        qualifiedName: ScriptableFramework.AppEventBase.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.AppEventBase
    commentId: M:ScriptableFramework.AppEventBase.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent.RaiseEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent.RaiseEvent*
        name: RaiseEvent
        nameWithType: AppEvent.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent.RaiseEvent
      VB:
      - id: ScriptableFramework.AppEvent.RaiseEvent*
        name: RaiseEvent
        nameWithType: AppEvent.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent.RaiseEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent.RaiseEvent
  ScriptableFramework.AppEvent.RegisterListener*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent.RegisterListener*
        name: RegisterListener
        nameWithType: AppEvent.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent.RegisterListener
      VB:
      - id: ScriptableFramework.AppEvent.RegisterListener*
        name: RegisterListener
        nameWithType: AppEvent.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent.RegisterListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent.RegisterListener
  ScriptableFramework.AppEvent.UnregisterListener*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent.UnregisterListener*
        name: UnregisterListener
        nameWithType: AppEvent.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent.UnregisterListener
      VB:
      - id: ScriptableFramework.AppEvent.UnregisterListener*
        name: UnregisterListener
        nameWithType: AppEvent.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent.UnregisterListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent.UnregisterListener
  ScriptableFramework.RuntimeObject.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObject.Clear
        name: Clear
        nameWithType: RuntimeObject.Clear
        qualifiedName: ScriptableFramework.RuntimeObject.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeObject.Clear
        name: Clear
        nameWithType: RuntimeObject.Clear
        qualifiedName: ScriptableFramework.RuntimeObject.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.RuntimeObject
    commentId: M:ScriptableFramework.RuntimeObject.Clear
  ScriptableFramework.AppEvent.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent.Clear*
        name: Clear
        nameWithType: AppEvent.Clear
        qualifiedName: ScriptableFramework.AppEvent.Clear
      VB:
      - id: ScriptableFramework.AppEvent.Clear*
        name: Clear
        nameWithType: AppEvent.Clear
        qualifiedName: ScriptableFramework.AppEvent.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent.Clear
  ScriptableFramework.RuntimeObject.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeObject.Reset
        name: Reset
        nameWithType: RuntimeObject.Reset
        qualifiedName: ScriptableFramework.RuntimeObject.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeObject.Reset
        name: Reset
        nameWithType: RuntimeObject.Reset
        qualifiedName: ScriptableFramework.RuntimeObject.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.RuntimeObject
    commentId: M:ScriptableFramework.RuntimeObject.Reset
  ScriptableFramework.AppEvent.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent.Reset*
        name: Reset
        nameWithType: AppEvent.Reset
        qualifiedName: ScriptableFramework.AppEvent.Reset
      VB:
      - id: ScriptableFramework.AppEvent.Reset*
        name: Reset
        nameWithType: AppEvent.Reset
        qualifiedName: ScriptableFramework.AppEvent.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent.Reset
  ScriptableFramework.AppEvent`1.ListenerCount*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount*
        name: ListenerCount
        nameWithType: AppEvent<T>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<T>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount*
        name: ListenerCount
        nameWithType: AppEvent(Of T).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of T).ListenerCount
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent`1.ListenerCount
  ScriptableFramework.AppEvent`1.RaiseEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent*
        name: RaiseEvent
        nameWithType: AppEvent<T>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<T>.RaiseEvent
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent*
        name: RaiseEvent
        nameWithType: AppEvent(Of T).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of T).RaiseEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent`1.RaiseEvent
  ScriptableFramework.AppEventListener{{T}}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEventListener`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEventListener{`0}
  ScriptableFramework.AppEvent`1.RegisterListener*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener*
        name: RegisterListener
        nameWithType: AppEvent<T>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<T>.RegisterListener
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener*
        name: RegisterListener
        nameWithType: AppEvent(Of T).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of T).RegisterListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent`1.RegisterListener
  ScriptableFramework.AppEvent`1.UnregisterListener*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener*
        name: UnregisterListener
        nameWithType: AppEvent<T>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<T>.UnregisterListener
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener*
        name: UnregisterListener
        nameWithType: AppEvent(Of T).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of T).UnregisterListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent`1.UnregisterListener
  ScriptableFramework.AppEvent`1.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear*
        name: Clear
        nameWithType: AppEvent<T>.Clear
        qualifiedName: ScriptableFramework.AppEvent<T>.Clear
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear*
        name: Clear
        nameWithType: AppEvent(Of T).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of T).Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent`1.Clear
  ScriptableFramework.AppEvent`1.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset*
        name: Reset
        nameWithType: AppEvent<T>.Reset
        qualifiedName: ScriptableFramework.AppEvent<T>.Reset
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset*
        name: Reset
        nameWithType: AppEvent(Of T).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of T).Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEvent`1.Reset
  ScriptableFramework.AppEventBase.RaiseEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.AppEventBase.RaiseEvent*
        name: RaiseEvent
        nameWithType: AppEventBase.RaiseEvent
        qualifiedName: ScriptableFramework.AppEventBase.RaiseEvent
      VB:
      - id: ScriptableFramework.AppEventBase.RaiseEvent*
        name: RaiseEvent
        nameWithType: AppEventBase.RaiseEvent
        qualifiedName: ScriptableFramework.AppEventBase.RaiseEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.AppEventBase.RaiseEvent
  ScriptableFramework.AppEvent{System.Boolean}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{System.Boolean}
  ScriptableFramework.AppEvent`1.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<T>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<T>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of T).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of T).valueForManualTrigger
    isDefinition: true
    commentId: F:ScriptableFramework.AppEvent`1.valueForManualTrigger
  ScriptableFramework.AppEvent{System.Boolean}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<Boolean>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of Boolean).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: F:ScriptableFramework.AppEvent{System.Boolean}.valueForManualTrigger
  ScriptableFramework.AppEvent`1.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<T>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<T>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of T).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of T).ListenerCount
    isDefinition: true
    commentId: P:ScriptableFramework.AppEvent`1.ListenerCount
  ScriptableFramework.AppEvent{System.Boolean}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<Boolean>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of Boolean).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: P:ScriptableFramework.AppEvent{System.Boolean}.ListenerCount
  ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<T>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<T>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of T).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of T).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.Boolean}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Boolean>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Boolean).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: M:ScriptableFramework.AppEvent{System.Boolean}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<T>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<T>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of T).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of T).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.Boolean}.RaiseEvent(System.Boolean,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Boolean>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Boolean).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: M:ScriptableFramework.AppEvent{System.Boolean}.RaiseEvent(System.Boolean,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<T>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<T>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of T).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of T).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
  ScriptableFramework.AppEvent{System.Boolean}.RegisterListener(ScriptableFramework.AppEventListener{System.Boolean}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<Boolean>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of Boolean).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: M:ScriptableFramework.AppEvent{System.Boolean}.RegisterListener(ScriptableFramework.AppEventListener{System.Boolean})
  ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<T>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<T>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of T).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of T).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
  ScriptableFramework.AppEvent{System.Boolean}.UnregisterListener(ScriptableFramework.AppEventListener{System.Boolean}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<Boolean>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of Boolean).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: M:ScriptableFramework.AppEvent{System.Boolean}.UnregisterListener(ScriptableFramework.AppEventListener{System.Boolean})
  ScriptableFramework.AppEvent`1.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<T>.Clear
        qualifiedName: ScriptableFramework.AppEvent<T>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of T).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of T).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEvent`1.Clear
  ScriptableFramework.AppEvent{System.Boolean}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<Boolean>.Clear
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of Boolean).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: M:ScriptableFramework.AppEvent{System.Boolean}.Clear
  ScriptableFramework.AppEvent`1.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<T>.Reset
        qualifiedName: ScriptableFramework.AppEvent<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of T).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.AppEvent`1.Reset
  ScriptableFramework.AppEvent{System.Boolean}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<Boolean>.Reset
        qualifiedName: ScriptableFramework.AppEvent<System.Boolean>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of Boolean).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of System.Boolean).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{System.Boolean}
    commentId: M:ScriptableFramework.AppEvent{System.Boolean}.Reset
  ScriptableFramework.AppEvent{Bounds}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{Bounds}
  ScriptableFramework.AppEvent{Bounds}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<Bounds>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of Bounds).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: F:ScriptableFramework.AppEvent{Bounds}.valueForManualTrigger
  ScriptableFramework.AppEvent{Bounds}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<Bounds>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of Bounds).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: P:ScriptableFramework.AppEvent{Bounds}.ListenerCount
  ScriptableFramework.AppEvent{Bounds}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Bounds>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Bounds).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: M:ScriptableFramework.AppEvent{Bounds}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{Bounds}.RaiseEvent(Bounds,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Bounds>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Bounds).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: M:ScriptableFramework.AppEvent{Bounds}.RaiseEvent(Bounds,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{Bounds}.RegisterListener(ScriptableFramework.AppEventListener{Bounds}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<Bounds>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of Bounds).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: M:ScriptableFramework.AppEvent{Bounds}.RegisterListener(ScriptableFramework.AppEventListener{Bounds})
  ScriptableFramework.AppEvent{Bounds}.UnregisterListener(ScriptableFramework.AppEventListener{Bounds}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<Bounds>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of Bounds).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: M:ScriptableFramework.AppEvent{Bounds}.UnregisterListener(ScriptableFramework.AppEventListener{Bounds})
  ScriptableFramework.AppEvent{Bounds}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<Bounds>.Clear
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of Bounds).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: M:ScriptableFramework.AppEvent{Bounds}.Clear
  ScriptableFramework.AppEvent{Bounds}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<Bounds>.Reset
        qualifiedName: ScriptableFramework.AppEvent<Bounds>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of Bounds).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of Bounds).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{Bounds}
    commentId: M:ScriptableFramework.AppEvent{Bounds}.Reset
  ScriptableFramework.AppEvent{Color}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{Color}
  ScriptableFramework.AppEvent{Color}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<Color>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<Color>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of Color).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of Color).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{Color}
    commentId: F:ScriptableFramework.AppEvent{Color}.valueForManualTrigger
  ScriptableFramework.AppEvent{Color}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<Color>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<Color>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of Color).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of Color).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{Color}
    commentId: P:ScriptableFramework.AppEvent{Color}.ListenerCount
  ScriptableFramework.AppEvent{Color}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Color>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<Color>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Color).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of Color).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{Color}
    commentId: M:ScriptableFramework.AppEvent{Color}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{Color}.RaiseEvent(Color,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Color>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<Color>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Color).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of Color).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{Color}
    commentId: M:ScriptableFramework.AppEvent{Color}.RaiseEvent(Color,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{Color}.RegisterListener(ScriptableFramework.AppEventListener{Color}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<Color>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<Color>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of Color).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of Color).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{Color}
    commentId: M:ScriptableFramework.AppEvent{Color}.RegisterListener(ScriptableFramework.AppEventListener{Color})
  ScriptableFramework.AppEvent{Color}.UnregisterListener(ScriptableFramework.AppEventListener{Color}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<Color>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<Color>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of Color).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of Color).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{Color}
    commentId: M:ScriptableFramework.AppEvent{Color}.UnregisterListener(ScriptableFramework.AppEventListener{Color})
  ScriptableFramework.AppEvent{Color}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<Color>.Clear
        qualifiedName: ScriptableFramework.AppEvent<Color>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of Color).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of Color).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{Color}
    commentId: M:ScriptableFramework.AppEvent{Color}.Clear
  ScriptableFramework.AppEvent{Color}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<Color>.Reset
        qualifiedName: ScriptableFramework.AppEvent<Color>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of Color).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of Color).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{Color}
    commentId: M:ScriptableFramework.AppEvent{Color}.Reset
  ScriptableFramework.AppEvent{System.Single}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{System.Single}
  ScriptableFramework.AppEvent{System.Single}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<Single>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of Single).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: F:ScriptableFramework.AppEvent{System.Single}.valueForManualTrigger
  ScriptableFramework.AppEvent{System.Single}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<Single>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of Single).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: P:ScriptableFramework.AppEvent{System.Single}.ListenerCount
  ScriptableFramework.AppEvent{System.Single}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Single>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Single).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: M:ScriptableFramework.AppEvent{System.Single}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.Single}.RaiseEvent(System.Single,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Single>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Single).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: M:ScriptableFramework.AppEvent{System.Single}.RaiseEvent(System.Single,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.Single}.RegisterListener(ScriptableFramework.AppEventListener{System.Single}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<Single>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of Single).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: M:ScriptableFramework.AppEvent{System.Single}.RegisterListener(ScriptableFramework.AppEventListener{System.Single})
  ScriptableFramework.AppEvent{System.Single}.UnregisterListener(ScriptableFramework.AppEventListener{System.Single}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<Single>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of Single).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: M:ScriptableFramework.AppEvent{System.Single}.UnregisterListener(ScriptableFramework.AppEventListener{System.Single})
  ScriptableFramework.AppEvent{System.Single}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<Single>.Clear
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of Single).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: M:ScriptableFramework.AppEvent{System.Single}.Clear
  ScriptableFramework.AppEvent{System.Single}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<Single>.Reset
        qualifiedName: ScriptableFramework.AppEvent<System.Single>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of Single).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of System.Single).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{System.Single}
    commentId: M:ScriptableFramework.AppEvent{System.Single}.Reset
  ScriptableFramework.AppEvent{System.Int32}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{System.Int32}
  ScriptableFramework.AppEvent{System.Int32}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<Int32>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of Int32).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: F:ScriptableFramework.AppEvent{System.Int32}.valueForManualTrigger
  ScriptableFramework.AppEvent{System.Int32}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<Int32>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of Int32).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: P:ScriptableFramework.AppEvent{System.Int32}.ListenerCount
  ScriptableFramework.AppEvent{System.Int32}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Int32>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Int32).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: M:ScriptableFramework.AppEvent{System.Int32}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.Int32}.RaiseEvent(System.Int32,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Int32>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Int32).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: M:ScriptableFramework.AppEvent{System.Int32}.RaiseEvent(System.Int32,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.Int32}.RegisterListener(ScriptableFramework.AppEventListener{System.Int32}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<Int32>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of Int32).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: M:ScriptableFramework.AppEvent{System.Int32}.RegisterListener(ScriptableFramework.AppEventListener{System.Int32})
  ScriptableFramework.AppEvent{System.Int32}.UnregisterListener(ScriptableFramework.AppEventListener{System.Int32}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<Int32>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of Int32).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: M:ScriptableFramework.AppEvent{System.Int32}.UnregisterListener(ScriptableFramework.AppEventListener{System.Int32})
  ScriptableFramework.AppEvent{System.Int32}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<Int32>.Clear
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of Int32).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: M:ScriptableFramework.AppEvent{System.Int32}.Clear
  ScriptableFramework.AppEvent{System.Int32}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<Int32>.Reset
        qualifiedName: ScriptableFramework.AppEvent<System.Int32>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of Int32).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of System.Int32).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{System.Int32}
    commentId: M:ScriptableFramework.AppEvent{System.Int32}.Reset
  ScriptableFramework.AppEvent{System.String}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{System.String}
  ScriptableFramework.AppEvent{System.String}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<String>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<System.String>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of String).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: F:ScriptableFramework.AppEvent{System.String}.valueForManualTrigger
  ScriptableFramework.AppEvent{System.String}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<String>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<System.String>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of String).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: P:ScriptableFramework.AppEvent{System.String}.ListenerCount
  ScriptableFramework.AppEvent{System.String}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<String>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.String>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of String).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: M:ScriptableFramework.AppEvent{System.String}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.String}.RaiseEvent(System.String,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<String>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<System.String>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of String).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: M:ScriptableFramework.AppEvent{System.String}.RaiseEvent(System.String,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{System.String}.RegisterListener(ScriptableFramework.AppEventListener{System.String}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<String>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.String>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of String).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: M:ScriptableFramework.AppEvent{System.String}.RegisterListener(ScriptableFramework.AppEventListener{System.String})
  ScriptableFramework.AppEvent{System.String}.UnregisterListener(ScriptableFramework.AppEventListener{System.String}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<String>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<System.String>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of String).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: M:ScriptableFramework.AppEvent{System.String}.UnregisterListener(ScriptableFramework.AppEventListener{System.String})
  ScriptableFramework.AppEvent{System.String}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<String>.Clear
        qualifiedName: ScriptableFramework.AppEvent<System.String>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of String).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: M:ScriptableFramework.AppEvent{System.String}.Clear
  ScriptableFramework.AppEvent{System.String}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<String>.Reset
        qualifiedName: ScriptableFramework.AppEvent<System.String>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of String).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of System.String).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{System.String}
    commentId: M:ScriptableFramework.AppEvent{System.String}.Reset
  ScriptableFramework.AppEvent{Vector3}:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.AppEvent`1
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.AppEvent{Vector3}
  ScriptableFramework.AppEvent{Vector3}.valueForManualTrigger:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent<Vector3>.valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.valueForManualTrigger
      VB:
      - id: ScriptableFramework.AppEvent`1.valueForManualTrigger
        name: valueForManualTrigger
        nameWithType: AppEvent(Of Vector3).valueForManualTrigger
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).valueForManualTrigger
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.valueForManualTrigger
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: F:ScriptableFramework.AppEvent{Vector3}.valueForManualTrigger
  ScriptableFramework.AppEvent{Vector3}.ListenerCount:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent<Vector3>.ListenerCount
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.ListenerCount
      VB:
      - id: ScriptableFramework.AppEvent`1.ListenerCount
        name: ListenerCount
        nameWithType: AppEvent(Of Vector3).ListenerCount
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).ListenerCount
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.ListenerCount
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: P:ScriptableFramework.AppEvent{Vector3}.ListenerCount
  ScriptableFramework.AppEvent{Vector3}.RaiseEvent(System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Vector3>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Vector3).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: M:ScriptableFramework.AppEvent{Vector3}.RaiseEvent(System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{Vector3}.RaiseEvent(Vector3,System.String,System.String,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent<Vector3>.RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
        name: RaiseEvent
        nameWithType: AppEvent(Of Vector3).RaiseEvent
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).RaiseEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RaiseEvent(`0,System.String,System.String,System.Int32)
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: M:ScriptableFramework.AppEvent{Vector3}.RaiseEvent(Vector3,System.String,System.String,System.Int32)
  ScriptableFramework.AppEvent{Vector3}.RegisterListener(ScriptableFramework.AppEventListener{Vector3}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent<Vector3>.RegisterListener
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
        name: RegisterListener
        nameWithType: AppEvent(Of Vector3).RegisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).RegisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.RegisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: M:ScriptableFramework.AppEvent{Vector3}.RegisterListener(ScriptableFramework.AppEventListener{Vector3})
  ScriptableFramework.AppEvent{Vector3}.UnregisterListener(ScriptableFramework.AppEventListener{Vector3}):
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent<Vector3>.UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
        name: UnregisterListener
        nameWithType: AppEvent(Of Vector3).UnregisterListener
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).UnregisterListener
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.AppEventListener`1
        name: AppEventListener
        nameWithType: AppEventListener
        qualifiedName: ScriptableFramework.AppEventListener
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.UnregisterListener(ScriptableFramework.AppEventListener{`0})
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: M:ScriptableFramework.AppEvent{Vector3}.UnregisterListener(ScriptableFramework.AppEventListener{Vector3})
  ScriptableFramework.AppEvent{Vector3}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent<Vector3>.Clear
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Clear
        name: Clear
        nameWithType: AppEvent(Of Vector3).Clear
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Clear
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: M:ScriptableFramework.AppEvent{Vector3}.Clear
  ScriptableFramework.AppEvent{Vector3}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent<Vector3>.Reset
        qualifiedName: ScriptableFramework.AppEvent<Vector3>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.AppEvent`1.Reset
        name: Reset
        nameWithType: AppEvent(Of Vector3).Reset
        qualifiedName: ScriptableFramework.AppEvent(Of Vector3).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.AppEvent`1.Reset
    parent: ScriptableFramework.AppEvent{Vector3}
    commentId: M:ScriptableFramework.AppEvent{Vector3}.Reset
  ScriptableFramework.RuntimeItem`1.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1.Reset*
        name: Reset
        nameWithType: RuntimeItem<T>.Reset
        qualifiedName: ScriptableFramework.RuntimeItem<T>.Reset
      VB:
      - id: ScriptableFramework.RuntimeItem`1.Reset*
        name: Reset
        nameWithType: RuntimeItem(Of T).Reset
        qualifiedName: ScriptableFramework.RuntimeItem(Of T).Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeItem`1.Reset
  ScriptableFramework.RuntimeItem`1:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.RuntimeItem`1
  ScriptableFramework.ReferenceItem`1:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.ReferenceItem`1
  ScriptableFramework.ReferenceItem{GameObject}:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReferenceItem{GameObject}
  ScriptableFramework.ReferenceItem`1.reference:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem<T>.reference
        qualifiedName: ScriptableFramework.ReferenceItem<T>.reference
      VB:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem(Of T).reference
        qualifiedName: ScriptableFramework.ReferenceItem(Of T).reference
    isDefinition: true
    commentId: F:ScriptableFramework.ReferenceItem`1.reference
  ScriptableFramework.ReferenceItem{GameObject}.reference:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem<GameObject>.reference
        qualifiedName: ScriptableFramework.ReferenceItem<GameObject>.reference
      VB:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem(Of GameObject).reference
        qualifiedName: ScriptableFramework.ReferenceItem(Of GameObject).reference
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1.reference
    parent: ScriptableFramework.ReferenceItem{GameObject}
    commentId: F:ScriptableFramework.ReferenceItem{GameObject}.reference
  ScriptableFramework.ReferenceItem`1.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem<T>.Clear
        qualifiedName: ScriptableFramework.ReferenceItem<T>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem(Of T).Clear
        qualifiedName: ScriptableFramework.ReferenceItem(Of T).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.ReferenceItem`1.Clear
  ScriptableFramework.ReferenceItem{GameObject}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem<GameObject>.Clear
        qualifiedName: ScriptableFramework.ReferenceItem<GameObject>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem(Of GameObject).Clear
        qualifiedName: ScriptableFramework.ReferenceItem(Of GameObject).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1.Clear
    parent: ScriptableFramework.ReferenceItem{GameObject}
    commentId: M:ScriptableFramework.ReferenceItem{GameObject}.Clear
  ScriptableFramework.RuntimeItem{GameObject}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{GameObject}
  ScriptableFramework.RuntimeItem`1.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem<T>.Reset
        qualifiedName: ScriptableFramework.RuntimeItem<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem(Of T).Reset
        qualifiedName: ScriptableFramework.RuntimeItem(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeItem`1.Reset
  ScriptableFramework.RuntimeItem{GameObject}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem<GameObject>.Reset
        qualifiedName: ScriptableFramework.RuntimeItem<GameObject>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem(Of GameObject).Reset
        qualifiedName: ScriptableFramework.RuntimeItem(Of GameObject).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1.Reset
    parent: ScriptableFramework.RuntimeItem{GameObject}
    commentId: M:ScriptableFramework.RuntimeItem{GameObject}.Reset
  ScriptableFramework.GameObjectReference:
    name:
      CSharp:
      - id: ScriptableFramework.GameObjectReference
        name: GameObjectReference
        nameWithType: GameObjectReference
        qualifiedName: ScriptableFramework.GameObjectReference
      VB:
      - id: ScriptableFramework.GameObjectReference
        name: GameObjectReference
        nameWithType: GameObjectReference
        qualifiedName: ScriptableFramework.GameObjectReference
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.GameObjectReference
  ScriptableFramework.ReferenceItem{MeshRenderer}:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReferenceItem{MeshRenderer}
  ScriptableFramework.ReferenceItem{MeshRenderer}.reference:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem<MeshRenderer>.reference
        qualifiedName: ScriptableFramework.ReferenceItem<MeshRenderer>.reference
      VB:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem(Of MeshRenderer).reference
        qualifiedName: ScriptableFramework.ReferenceItem(Of MeshRenderer).reference
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1.reference
    parent: ScriptableFramework.ReferenceItem{MeshRenderer}
    commentId: F:ScriptableFramework.ReferenceItem{MeshRenderer}.reference
  ScriptableFramework.ReferenceItem{MeshRenderer}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem<MeshRenderer>.Clear
        qualifiedName: ScriptableFramework.ReferenceItem<MeshRenderer>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem(Of MeshRenderer).Clear
        qualifiedName: ScriptableFramework.ReferenceItem(Of MeshRenderer).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1.Clear
    parent: ScriptableFramework.ReferenceItem{MeshRenderer}
    commentId: M:ScriptableFramework.ReferenceItem{MeshRenderer}.Clear
  ScriptableFramework.RuntimeItem{MeshRenderer}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{MeshRenderer}
  ScriptableFramework.RuntimeItem{MeshRenderer}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem<MeshRenderer>.Reset
        qualifiedName: ScriptableFramework.RuntimeItem<MeshRenderer>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem(Of MeshRenderer).Reset
        qualifiedName: ScriptableFramework.RuntimeItem(Of MeshRenderer).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1.Reset
    parent: ScriptableFramework.RuntimeItem{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeItem{MeshRenderer}.Reset
  ScriptableFramework.MeshRendererReference:
    name:
      CSharp:
      - id: ScriptableFramework.MeshRendererReference
        name: MeshRendererReference
        nameWithType: MeshRendererReference
        qualifiedName: ScriptableFramework.MeshRendererReference
      VB:
      - id: ScriptableFramework.MeshRendererReference
        name: MeshRendererReference
        nameWithType: MeshRendererReference
        qualifiedName: ScriptableFramework.MeshRendererReference
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.MeshRendererReference
  ScriptableFramework.RuntimeItem{{T}}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{`0}
  ScriptableFramework.RuntimeItem{{T}}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem<T>.Reset
        qualifiedName: ScriptableFramework.RuntimeItem<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem(Of T).Reset
        qualifiedName: ScriptableFramework.RuntimeItem(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1.Reset
    parent: ScriptableFramework.RuntimeItem{{T}}
    commentId: M:ScriptableFramework.RuntimeItem{`0}.Reset
  ScriptableFramework.ReferenceItem`1.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.Clear*
        name: Clear
        nameWithType: ReferenceItem<T>.Clear
        qualifiedName: ScriptableFramework.ReferenceItem<T>.Clear
      VB:
      - id: ScriptableFramework.ReferenceItem`1.Clear*
        name: Clear
        nameWithType: ReferenceItem(Of T).Clear
        qualifiedName: ScriptableFramework.ReferenceItem(Of T).Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.ReferenceItem`1.Clear
  ScriptableFramework.ReferenceItem{Transform}:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceItem`1
        name: ReferenceItem
        nameWithType: ReferenceItem
        qualifiedName: ScriptableFramework.ReferenceItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReferenceItem{Transform}
  ScriptableFramework.ReferenceItem{Transform}.reference:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem<Transform>.reference
        qualifiedName: ScriptableFramework.ReferenceItem<Transform>.reference
      VB:
      - id: ScriptableFramework.ReferenceItem`1.reference
        name: reference
        nameWithType: ReferenceItem(Of Transform).reference
        qualifiedName: ScriptableFramework.ReferenceItem(Of Transform).reference
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1.reference
    parent: ScriptableFramework.ReferenceItem{Transform}
    commentId: F:ScriptableFramework.ReferenceItem{Transform}.reference
  ScriptableFramework.ReferenceItem{Transform}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem<Transform>.Clear
        qualifiedName: ScriptableFramework.ReferenceItem<Transform>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ReferenceItem`1.Clear
        name: Clear
        nameWithType: ReferenceItem(Of Transform).Clear
        qualifiedName: ScriptableFramework.ReferenceItem(Of Transform).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceItem`1.Clear
    parent: ScriptableFramework.ReferenceItem{Transform}
    commentId: M:ScriptableFramework.ReferenceItem{Transform}.Clear
  ScriptableFramework.RuntimeItem{Transform}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{Transform}
  ScriptableFramework.RuntimeItem{Transform}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem<Transform>.Reset
        qualifiedName: ScriptableFramework.RuntimeItem<Transform>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeItem`1.Reset
        name: Reset
        nameWithType: RuntimeItem(Of Transform).Reset
        qualifiedName: ScriptableFramework.RuntimeItem(Of Transform).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1.Reset
    parent: ScriptableFramework.RuntimeItem{Transform}
    commentId: M:ScriptableFramework.RuntimeItem{Transform}.Reset
  ScriptableFramework.TransformReference:
    name:
      CSharp:
      - id: ScriptableFramework.TransformReference
        name: TransformReference
        nameWithType: TransformReference
        qualifiedName: ScriptableFramework.TransformReference
      VB:
      - id: ScriptableFramework.TransformReference
        name: TransformReference
        nameWithType: TransformReference
        qualifiedName: ScriptableFramework.TransformReference
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.TransformReference
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GameObject'
  ScriptableFramework.GameObjectReferencePopulator:
    name:
      CSharp:
      - id: ScriptableFramework.GameObjectReferencePopulator
        name: GameObjectReferencePopulator
        nameWithType: GameObjectReferencePopulator
        qualifiedName: ScriptableFramework.GameObjectReferencePopulator
      VB:
      - id: ScriptableFramework.GameObjectReferencePopulator
        name: GameObjectReferencePopulator
        nameWithType: GameObjectReferencePopulator
        qualifiedName: ScriptableFramework.GameObjectReferencePopulator
    isDefinition: true
    commentId: T:ScriptableFramework.GameObjectReferencePopulator
  Global.MeshRenderer:
    name:
      CSharp:
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      VB:
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MeshRenderer'
  ScriptableFramework.MeshRendererReferencePopulator:
    name:
      CSharp:
      - id: ScriptableFramework.MeshRendererReferencePopulator
        name: MeshRendererReferencePopulator
        nameWithType: MeshRendererReferencePopulator
        qualifiedName: ScriptableFramework.MeshRendererReferencePopulator
      VB:
      - id: ScriptableFramework.MeshRendererReferencePopulator
        name: MeshRendererReferencePopulator
        nameWithType: MeshRendererReferencePopulator
        qualifiedName: ScriptableFramework.MeshRendererReferencePopulator
    isDefinition: true
    commentId: T:ScriptableFramework.MeshRendererReferencePopulator
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Transform'
  ScriptableFramework.TransformReferencePopulator:
    name:
      CSharp:
      - id: ScriptableFramework.TransformReferencePopulator
        name: TransformReferencePopulator
        nameWithType: TransformReferencePopulator
        qualifiedName: ScriptableFramework.TransformReferencePopulator
      VB:
      - id: ScriptableFramework.TransformReferencePopulator
        name: TransformReferencePopulator
        nameWithType: TransformReferencePopulator
        qualifiedName: ScriptableFramework.TransformReferencePopulator
    isDefinition: true
    commentId: T:ScriptableFramework.TransformReferencePopulator
  ScriptableFramework.ValueItem`1:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.ValueItem`1
  ScriptableFramework.ValueItem{System.Boolean}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueItem{System.Boolean}
  ScriptableFramework.ValueItem`1.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<T>.value
        qualifiedName: ScriptableFramework.ValueItem<T>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of T).value
        qualifiedName: ScriptableFramework.ValueItem(Of T).value
    isDefinition: true
    commentId: F:ScriptableFramework.ValueItem`1.value
  ScriptableFramework.ValueItem{System.Boolean}.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<Boolean>.value
        qualifiedName: ScriptableFramework.ValueItem<System.Boolean>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of Boolean).value
        qualifiedName: ScriptableFramework.ValueItem(Of System.Boolean).value
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.value
    parent: ScriptableFramework.ValueItem{System.Boolean}
    commentId: F:ScriptableFramework.ValueItem{System.Boolean}.value
  ScriptableFramework.ValueItem`1.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<T>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<T>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of T).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of T).customDefaultValue
    isDefinition: true
    commentId: F:ScriptableFramework.ValueItem`1.customDefaultValue
  ScriptableFramework.ValueItem{System.Boolean}.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<Boolean>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<System.Boolean>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of Boolean).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of System.Boolean).customDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.customDefaultValue
    parent: ScriptableFramework.ValueItem{System.Boolean}
    commentId: F:ScriptableFramework.ValueItem{System.Boolean}.customDefaultValue
  ScriptableFramework.ValueItem`1.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<T>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<T>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of T).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of T).useCustomDefaultValue
    isDefinition: true
    commentId: F:ScriptableFramework.ValueItem`1.useCustomDefaultValue
  ScriptableFramework.ValueItem{System.Boolean}.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<Boolean>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<System.Boolean>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of Boolean).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of System.Boolean).useCustomDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.useCustomDefaultValue
    parent: ScriptableFramework.ValueItem{System.Boolean}
    commentId: F:ScriptableFramework.ValueItem{System.Boolean}.useCustomDefaultValue
  ScriptableFramework.ValueItem`1.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<T>.Clear
        qualifiedName: ScriptableFramework.ValueItem<T>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of T).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of T).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.ValueItem`1.Clear
  ScriptableFramework.ValueItem{System.Boolean}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<Boolean>.Clear
        qualifiedName: ScriptableFramework.ValueItem<System.Boolean>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of Boolean).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of System.Boolean).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Clear
    parent: ScriptableFramework.ValueItem{System.Boolean}
    commentId: M:ScriptableFramework.ValueItem{System.Boolean}.Clear
  ScriptableFramework.ValueItem`1.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<T>.Reset
        qualifiedName: ScriptableFramework.ValueItem<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of T).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.ValueItem`1.Reset
  ScriptableFramework.ValueItem{System.Boolean}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<Boolean>.Reset
        qualifiedName: ScriptableFramework.ValueItem<System.Boolean>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of Boolean).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of System.Boolean).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Reset
    parent: ScriptableFramework.ValueItem{System.Boolean}
    commentId: M:ScriptableFramework.ValueItem{System.Boolean}.Reset
  ScriptableFramework.RuntimeItem{System.Boolean}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{System.Boolean}
  ScriptableFramework.BoolValue:
    name:
      CSharp:
      - id: ScriptableFramework.BoolValue
        name: BoolValue
        nameWithType: BoolValue
        qualifiedName: ScriptableFramework.BoolValue
      VB:
      - id: ScriptableFramework.BoolValue
        name: BoolValue
        nameWithType: BoolValue
        qualifiedName: ScriptableFramework.BoolValue
    isDefinition: true
    commentId: T:ScriptableFramework.BoolValue
  ScriptableFramework.ValueItem{Color}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueItem{Color}
  ScriptableFramework.ValueItem{Color}.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<Color>.value
        qualifiedName: ScriptableFramework.ValueItem<Color>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of Color).value
        qualifiedName: ScriptableFramework.ValueItem(Of Color).value
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.value
    parent: ScriptableFramework.ValueItem{Color}
    commentId: F:ScriptableFramework.ValueItem{Color}.value
  ScriptableFramework.ValueItem{Color}.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<Color>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<Color>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of Color).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of Color).customDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.customDefaultValue
    parent: ScriptableFramework.ValueItem{Color}
    commentId: F:ScriptableFramework.ValueItem{Color}.customDefaultValue
  ScriptableFramework.ValueItem{Color}.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<Color>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<Color>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of Color).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of Color).useCustomDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.useCustomDefaultValue
    parent: ScriptableFramework.ValueItem{Color}
    commentId: F:ScriptableFramework.ValueItem{Color}.useCustomDefaultValue
  ScriptableFramework.ValueItem{Color}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<Color>.Clear
        qualifiedName: ScriptableFramework.ValueItem<Color>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of Color).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of Color).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Clear
    parent: ScriptableFramework.ValueItem{Color}
    commentId: M:ScriptableFramework.ValueItem{Color}.Clear
  ScriptableFramework.ValueItem{Color}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<Color>.Reset
        qualifiedName: ScriptableFramework.ValueItem<Color>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of Color).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of Color).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Reset
    parent: ScriptableFramework.ValueItem{Color}
    commentId: M:ScriptableFramework.ValueItem{Color}.Reset
  ScriptableFramework.RuntimeItem{Color}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{Color}
  ScriptableFramework.ColorValue:
    name:
      CSharp:
      - id: ScriptableFramework.ColorValue
        name: ColorValue
        nameWithType: ColorValue
        qualifiedName: ScriptableFramework.ColorValue
      VB:
      - id: ScriptableFramework.ColorValue
        name: ColorValue
        nameWithType: ColorValue
        qualifiedName: ScriptableFramework.ColorValue
    isDefinition: true
    commentId: T:ScriptableFramework.ColorValue
  ScriptableFramework.ValueItem{System.Single}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueItem{System.Single}
  ScriptableFramework.ValueItem{System.Single}.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<Single>.value
        qualifiedName: ScriptableFramework.ValueItem<System.Single>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of Single).value
        qualifiedName: ScriptableFramework.ValueItem(Of System.Single).value
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.value
    parent: ScriptableFramework.ValueItem{System.Single}
    commentId: F:ScriptableFramework.ValueItem{System.Single}.value
  ScriptableFramework.ValueItem{System.Single}.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<Single>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<System.Single>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of Single).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of System.Single).customDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.customDefaultValue
    parent: ScriptableFramework.ValueItem{System.Single}
    commentId: F:ScriptableFramework.ValueItem{System.Single}.customDefaultValue
  ScriptableFramework.ValueItem{System.Single}.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<Single>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<System.Single>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of Single).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of System.Single).useCustomDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.useCustomDefaultValue
    parent: ScriptableFramework.ValueItem{System.Single}
    commentId: F:ScriptableFramework.ValueItem{System.Single}.useCustomDefaultValue
  ScriptableFramework.ValueItem{System.Single}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<Single>.Clear
        qualifiedName: ScriptableFramework.ValueItem<System.Single>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of Single).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of System.Single).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Clear
    parent: ScriptableFramework.ValueItem{System.Single}
    commentId: M:ScriptableFramework.ValueItem{System.Single}.Clear
  ScriptableFramework.ValueItem{System.Single}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<Single>.Reset
        qualifiedName: ScriptableFramework.ValueItem<System.Single>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of Single).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of System.Single).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Reset
    parent: ScriptableFramework.ValueItem{System.Single}
    commentId: M:ScriptableFramework.ValueItem{System.Single}.Reset
  ScriptableFramework.RuntimeItem{System.Single}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{System.Single}
  ScriptableFramework.FloatValue:
    name:
      CSharp:
      - id: ScriptableFramework.FloatValue
        name: FloatValue
        nameWithType: FloatValue
        qualifiedName: ScriptableFramework.FloatValue
      VB:
      - id: ScriptableFramework.FloatValue
        name: FloatValue
        nameWithType: FloatValue
        qualifiedName: ScriptableFramework.FloatValue
    isDefinition: true
    commentId: T:ScriptableFramework.FloatValue
  ScriptableFramework.ValueItem{System.Int32}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueItem{System.Int32}
  ScriptableFramework.ValueItem{System.Int32}.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<Int32>.value
        qualifiedName: ScriptableFramework.ValueItem<System.Int32>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of Int32).value
        qualifiedName: ScriptableFramework.ValueItem(Of System.Int32).value
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.value
    parent: ScriptableFramework.ValueItem{System.Int32}
    commentId: F:ScriptableFramework.ValueItem{System.Int32}.value
  ScriptableFramework.ValueItem{System.Int32}.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<Int32>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<System.Int32>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of Int32).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of System.Int32).customDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.customDefaultValue
    parent: ScriptableFramework.ValueItem{System.Int32}
    commentId: F:ScriptableFramework.ValueItem{System.Int32}.customDefaultValue
  ScriptableFramework.ValueItem{System.Int32}.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<Int32>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<System.Int32>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of Int32).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of System.Int32).useCustomDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.useCustomDefaultValue
    parent: ScriptableFramework.ValueItem{System.Int32}
    commentId: F:ScriptableFramework.ValueItem{System.Int32}.useCustomDefaultValue
  ScriptableFramework.ValueItem{System.Int32}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<Int32>.Clear
        qualifiedName: ScriptableFramework.ValueItem<System.Int32>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of Int32).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of System.Int32).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Clear
    parent: ScriptableFramework.ValueItem{System.Int32}
    commentId: M:ScriptableFramework.ValueItem{System.Int32}.Clear
  ScriptableFramework.ValueItem{System.Int32}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<Int32>.Reset
        qualifiedName: ScriptableFramework.ValueItem<System.Int32>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of Int32).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of System.Int32).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Reset
    parent: ScriptableFramework.ValueItem{System.Int32}
    commentId: M:ScriptableFramework.ValueItem{System.Int32}.Reset
  ScriptableFramework.RuntimeItem{System.Int32}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{System.Int32}
  ScriptableFramework.IntValue:
    name:
      CSharp:
      - id: ScriptableFramework.IntValue
        name: IntValue
        nameWithType: IntValue
        qualifiedName: ScriptableFramework.IntValue
      VB:
      - id: ScriptableFramework.IntValue
        name: IntValue
        nameWithType: IntValue
        qualifiedName: ScriptableFramework.IntValue
    isDefinition: true
    commentId: T:ScriptableFramework.IntValue
  ScriptableFramework.ValueItem{ScriptableFramework.DataString}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueItem{ScriptableFramework.DataString}
  ScriptableFramework.ValueItem{ScriptableFramework.DataString}.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<DataString>.value
        qualifiedName: ScriptableFramework.ValueItem<ScriptableFramework.DataString>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of DataString).value
        qualifiedName: ScriptableFramework.ValueItem(Of ScriptableFramework.DataString).value
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.value
    parent: ScriptableFramework.ValueItem{ScriptableFramework.DataString}
    commentId: F:ScriptableFramework.ValueItem{ScriptableFramework.DataString}.value
  ScriptableFramework.ValueItem{ScriptableFramework.DataString}.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<DataString>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<ScriptableFramework.DataString>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of DataString).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of ScriptableFramework.DataString).customDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.customDefaultValue
    parent: ScriptableFramework.ValueItem{ScriptableFramework.DataString}
    commentId: F:ScriptableFramework.ValueItem{ScriptableFramework.DataString}.customDefaultValue
  ScriptableFramework.ValueItem{ScriptableFramework.DataString}.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<DataString>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<ScriptableFramework.DataString>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of DataString).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of ScriptableFramework.DataString).useCustomDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.useCustomDefaultValue
    parent: ScriptableFramework.ValueItem{ScriptableFramework.DataString}
    commentId: F:ScriptableFramework.ValueItem{ScriptableFramework.DataString}.useCustomDefaultValue
  ScriptableFramework.ValueItem{ScriptableFramework.DataString}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<DataString>.Clear
        qualifiedName: ScriptableFramework.ValueItem<ScriptableFramework.DataString>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of DataString).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of ScriptableFramework.DataString).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Clear
    parent: ScriptableFramework.ValueItem{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.ValueItem{ScriptableFramework.DataString}.Clear
  ScriptableFramework.ValueItem{ScriptableFramework.DataString}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<DataString>.Reset
        qualifiedName: ScriptableFramework.ValueItem<ScriptableFramework.DataString>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of DataString).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of ScriptableFramework.DataString).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Reset
    parent: ScriptableFramework.ValueItem{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.ValueItem{ScriptableFramework.DataString}.Reset
  ScriptableFramework.RuntimeItem{ScriptableFramework.DataString}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{ScriptableFramework.DataString}
  ScriptableFramework.StringValue:
    name:
      CSharp:
      - id: ScriptableFramework.StringValue
        name: StringValue
        nameWithType: StringValue
        qualifiedName: ScriptableFramework.StringValue
      VB:
      - id: ScriptableFramework.StringValue
        name: StringValue
        nameWithType: StringValue
        qualifiedName: ScriptableFramework.StringValue
    isDefinition: true
    commentId: T:ScriptableFramework.StringValue
  ScriptableFramework.ValueItem`1.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear*
        name: Clear
        nameWithType: ValueItem<T>.Clear
        qualifiedName: ScriptableFramework.ValueItem<T>.Clear
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear*
        name: Clear
        nameWithType: ValueItem(Of T).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of T).Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.ValueItem`1.Clear
  ScriptableFramework.ValueItem`1.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset*
        name: Reset
        nameWithType: ValueItem<T>.Reset
        qualifiedName: ScriptableFramework.ValueItem<T>.Reset
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset*
        name: Reset
        nameWithType: ValueItem(Of T).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of T).Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.ValueItem`1.Reset
  ScriptableFramework.ValueItem{Vector3}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueItem`1
        name: ValueItem
        nameWithType: ValueItem
        qualifiedName: ScriptableFramework.ValueItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueItem{Vector3}
  ScriptableFramework.ValueItem{Vector3}.value:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem<Vector3>.value
        qualifiedName: ScriptableFramework.ValueItem<Vector3>.value
      VB:
      - id: ScriptableFramework.ValueItem`1.value
        name: value
        nameWithType: ValueItem(Of Vector3).value
        qualifiedName: ScriptableFramework.ValueItem(Of Vector3).value
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.value
    parent: ScriptableFramework.ValueItem{Vector3}
    commentId: F:ScriptableFramework.ValueItem{Vector3}.value
  ScriptableFramework.ValueItem{Vector3}.customDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem<Vector3>.customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<Vector3>.customDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.customDefaultValue
        name: customDefaultValue
        nameWithType: ValueItem(Of Vector3).customDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of Vector3).customDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.customDefaultValue
    parent: ScriptableFramework.ValueItem{Vector3}
    commentId: F:ScriptableFramework.ValueItem{Vector3}.customDefaultValue
  ScriptableFramework.ValueItem{Vector3}.useCustomDefaultValue:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem<Vector3>.useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem<Vector3>.useCustomDefaultValue
      VB:
      - id: ScriptableFramework.ValueItem`1.useCustomDefaultValue
        name: useCustomDefaultValue
        nameWithType: ValueItem(Of Vector3).useCustomDefaultValue
        qualifiedName: ScriptableFramework.ValueItem(Of Vector3).useCustomDefaultValue
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.useCustomDefaultValue
    parent: ScriptableFramework.ValueItem{Vector3}
    commentId: F:ScriptableFramework.ValueItem{Vector3}.useCustomDefaultValue
  ScriptableFramework.ValueItem{Vector3}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem<Vector3>.Clear
        qualifiedName: ScriptableFramework.ValueItem<Vector3>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Clear
        name: Clear
        nameWithType: ValueItem(Of Vector3).Clear
        qualifiedName: ScriptableFramework.ValueItem(Of Vector3).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Clear
    parent: ScriptableFramework.ValueItem{Vector3}
    commentId: M:ScriptableFramework.ValueItem{Vector3}.Clear
  ScriptableFramework.ValueItem{Vector3}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem<Vector3>.Reset
        qualifiedName: ScriptableFramework.ValueItem<Vector3>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueItem`1.Reset
        name: Reset
        nameWithType: ValueItem(Of Vector3).Reset
        qualifiedName: ScriptableFramework.ValueItem(Of Vector3).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueItem`1.Reset
    parent: ScriptableFramework.ValueItem{Vector3}
    commentId: M:ScriptableFramework.ValueItem{Vector3}.Reset
  ScriptableFramework.RuntimeItem{Vector3}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeItem`1
        name: RuntimeItem
        nameWithType: RuntimeItem
        qualifiedName: ScriptableFramework.RuntimeItem
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeItem`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeItem{Vector3}
  ScriptableFramework.Vector3Value:
    name:
      CSharp:
      - id: ScriptableFramework.Vector3Value
        name: Vector3Value
        nameWithType: Vector3Value
        qualifiedName: ScriptableFramework.Vector3Value
      VB:
      - id: ScriptableFramework.Vector3Value
        name: Vector3Value
        nameWithType: Vector3Value
        qualifiedName: ScriptableFramework.Vector3Value
    isDefinition: true
    commentId: T:ScriptableFramework.Vector3Value
  Global.List`1:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.List{{T}}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{`0}'
  ScriptableFramework.RuntimeList`1.Item*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item*
        name: Item
        nameWithType: RuntimeList<T>.Item
        qualifiedName: ScriptableFramework.RuntimeList<T>.Item
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item*
        name: Item
        nameWithType: RuntimeList(Of T).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Item
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Item
  ScriptableFramework.RuntimeList`1.Count*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count*
        name: Count
        nameWithType: RuntimeList<T>.Count
        qualifiedName: ScriptableFramework.RuntimeList<T>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count*
        name: Count
        nameWithType: RuntimeList(Of T).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Count
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Count
  ScriptableFramework.RuntimeList`1.IsReadOnly*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: RuntimeList<T>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<T>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: RuntimeList(Of T).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of T).IsReadOnly
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.IsReadOnly
  ScriptableFramework.RuntimeList`1.Add*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add*
        name: Add
        nameWithType: RuntimeList<T>.Add
        qualifiedName: ScriptableFramework.RuntimeList<T>.Add
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add*
        name: Add
        nameWithType: RuntimeList(Of T).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Add
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Add
  Global.IEnumerable`1:
    name:
      CSharp:
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.IEnumerable{{T}}:
    name:
      CSharp:
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.IEnumerable`1
    commentId: '!:Global.IEnumerable{`0}'
  ScriptableFramework.RuntimeList`1.AddRange*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange*
        name: AddRange
        nameWithType: RuntimeList<T>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<T>.AddRange
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange*
        name: AddRange
        nameWithType: RuntimeList(Of T).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of T).AddRange
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.AddRange
  ScriptableFramework.RuntimeList`1.Initialise*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise*
        name: Initialise
        nameWithType: RuntimeList<T>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<T>.Initialise
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise*
        name: Initialise
        nameWithType: RuntimeList(Of T).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Initialise
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Initialise
  ScriptableFramework.RuntimeList`1.Remove*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove*
        name: Remove
        nameWithType: RuntimeList<T>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<T>.Remove
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove*
        name: Remove
        nameWithType: RuntimeList(Of T).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Remove
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Remove
  ScriptableFramework.RuntimeList`1.GetItem*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem*
        name: GetItem
        nameWithType: RuntimeList<T>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<T>.GetItem
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem*
        name: GetItem
        nameWithType: RuntimeList(Of T).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of T).GetItem
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.GetItem
  ScriptableFramework.RuntimeList`1.SetItem*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem*
        name: SetItem
        nameWithType: RuntimeList<T>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<T>.SetItem
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem*
        name: SetItem
        nameWithType: RuntimeList(Of T).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of T).SetItem
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.SetItem
  ScriptableFramework.RuntimeList`1.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Clear*
        name: Clear
        nameWithType: RuntimeList<T>.Clear
        qualifiedName: ScriptableFramework.RuntimeList<T>.Clear
      VB:
      - id: ScriptableFramework.RuntimeList`1.Clear*
        name: Clear
        nameWithType: RuntimeList(Of T).Clear
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Clear
  ScriptableFramework.RuntimeList`1.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Reset*
        name: Reset
        nameWithType: RuntimeList<T>.Reset
        qualifiedName: ScriptableFramework.RuntimeList<T>.Reset
      VB:
      - id: ScriptableFramework.RuntimeList`1.Reset*
        name: Reset
        nameWithType: RuntimeList(Of T).Reset
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Reset
  ScriptableFramework.RuntimeList`1.IndexOf*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf*
        name: IndexOf
        nameWithType: RuntimeList<T>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<T>.IndexOf
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf*
        name: IndexOf
        nameWithType: RuntimeList(Of T).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of T).IndexOf
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.IndexOf
  ScriptableFramework.RuntimeList`1.Insert*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert*
        name: Insert
        nameWithType: RuntimeList<T>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<T>.Insert
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert*
        name: Insert
        nameWithType: RuntimeList(Of T).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Insert
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Insert
  ScriptableFramework.RuntimeList`1.RemoveAt*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt*
        name: RemoveAt
        nameWithType: RuntimeList<T>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<T>.RemoveAt
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt*
        name: RemoveAt
        nameWithType: RuntimeList(Of T).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of T).RemoveAt
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.RemoveAt
  ScriptableFramework.RuntimeList`1.Contains*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains*
        name: Contains
        nameWithType: RuntimeList<T>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<T>.Contains
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains*
        name: Contains
        nameWithType: RuntimeList(Of T).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Contains
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.Contains
  '{T}[]':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ScriptableFramework.RuntimeList`1.CopyTo*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo*
        name: CopyTo
        nameWithType: RuntimeList<T>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<T>.CopyTo
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo*
        name: CopyTo
        nameWithType: RuntimeList(Of T).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of T).CopyTo
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.CopyTo
  Global.IEnumerator`1:
    name:
      CSharp:
      - id: Global.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.IEnumerator`1'
  Global.IEnumerator{{T}}:
    name:
      CSharp:
      - id: Global.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.IEnumerator`1
    commentId: '!:Global.IEnumerator{`0}'
  ScriptableFramework.RuntimeList`1.GetEnumerator*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator*
        name: GetEnumerator
        nameWithType: RuntimeList<T>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<T>.GetEnumerator
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator*
        name: GetEnumerator
        nameWithType: RuntimeList(Of T).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of T).GetEnumerator
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.GetEnumerator
  ScriptableFramework.RuntimeList`1.ToArray*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray*
        name: ToArray
        nameWithType: RuntimeList<T>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<T>.ToArray
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray*
        name: ToArray
        nameWithType: RuntimeList(Of T).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of T).ToArray
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.ToArray
  ScriptableFramework.RuntimeList`1.ToList*:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList*
        name: ToList
        nameWithType: RuntimeList<T>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<T>.ToList
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList*
        name: ToList
        nameWithType: RuntimeList(Of T).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of T).ToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.RuntimeList`1.ToList
  ScriptableFramework.RuntimeList`1:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.RuntimeList`1
  ScriptableFramework.ReferenceList`1:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.ReferenceList`1
  ScriptableFramework.ReferenceList{GameObject}:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReferenceList{GameObject}
  ScriptableFramework.RuntimeList{GameObject}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{GameObject}
  ScriptableFramework.RuntimeList`1.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<T>.items
        qualifiedName: ScriptableFramework.RuntimeList<T>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of T).items
        qualifiedName: ScriptableFramework.RuntimeList(Of T).items
    isDefinition: true
    commentId: F:ScriptableFramework.RuntimeList`1.items
  ScriptableFramework.RuntimeList{GameObject}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<GameObject>.items
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of GameObject).items
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: F:ScriptableFramework.RuntimeList{GameObject}.items
  ScriptableFramework.RuntimeList`1.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<T>.Item
        qualifiedName: ScriptableFramework.RuntimeList<T>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of T).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:ScriptableFramework.RuntimeList`1.Item(System.Int32)
  ScriptableFramework.RuntimeList{GameObject}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<GameObject>.Item
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of GameObject).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: P:ScriptableFramework.RuntimeList{GameObject}.Item(System.Int32)
  ScriptableFramework.RuntimeList`1.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<T>.Count
        qualifiedName: ScriptableFramework.RuntimeList<T>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of T).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Count
    isDefinition: true
    commentId: P:ScriptableFramework.RuntimeList`1.Count
  ScriptableFramework.RuntimeList{GameObject}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<GameObject>.Count
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of GameObject).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: P:ScriptableFramework.RuntimeList{GameObject}.Count
  ScriptableFramework.RuntimeList`1.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<T>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<T>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of T).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of T).IsReadOnly
    isDefinition: true
    commentId: P:ScriptableFramework.RuntimeList`1.IsReadOnly
  ScriptableFramework.RuntimeList{GameObject}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<GameObject>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of GameObject).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: P:ScriptableFramework.RuntimeList{GameObject}.IsReadOnly
  ScriptableFramework.RuntimeList`1.Add(`0):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<T>.Add
        qualifiedName: ScriptableFramework.RuntimeList<T>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of T).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Add(`0)
  ScriptableFramework.RuntimeList{GameObject}.Add(GameObject):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<GameObject>.Add
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of GameObject).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Add(GameObject)
  ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<T>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<T>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of T).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of T).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
  ScriptableFramework.RuntimeList{GameObject}.AddRange(IEnumerable{GameObject}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<GameObject>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of GameObject).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.AddRange(IEnumerable{GameObject})
  ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<T>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<T>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of T).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
  ScriptableFramework.RuntimeList{GameObject}.Initialise(IEnumerable{GameObject}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<GameObject>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of GameObject).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Initialise(IEnumerable{GameObject})
  ScriptableFramework.RuntimeList`1.Remove(`0):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<T>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<T>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of T).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Remove(`0)
  ScriptableFramework.RuntimeList{GameObject}.Remove(GameObject):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<GameObject>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of GameObject).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Remove(GameObject)
  ScriptableFramework.RuntimeList`1.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<T>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<T>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of T).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of T).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{GameObject}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<GameObject>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of GameObject).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<T>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<T>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of T).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of T).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
  ScriptableFramework.RuntimeList{GameObject}.SetItem(System.Int32,GameObject):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<GameObject>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of GameObject).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.SetItem(System.Int32,GameObject)
  ScriptableFramework.RuntimeList`1.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList<T>.Clear
        qualifiedName: ScriptableFramework.RuntimeList<T>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList(Of T).Clear
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Clear
  ScriptableFramework.RuntimeList{GameObject}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList<GameObject>.Clear
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList(Of GameObject).Clear
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Clear
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Clear
  ScriptableFramework.RuntimeList`1.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList<T>.Reset
        qualifiedName: ScriptableFramework.RuntimeList<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList(Of T).Reset
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Reset
  ScriptableFramework.RuntimeList{GameObject}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList<GameObject>.Reset
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList(Of GameObject).Reset
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Reset
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Reset
  ScriptableFramework.RuntimeList`1.IndexOf(`0):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<T>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<T>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of T).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of T).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.IndexOf(`0)
  ScriptableFramework.RuntimeList{GameObject}.IndexOf(GameObject):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<GameObject>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of GameObject).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.IndexOf(GameObject)
  ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<T>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<T>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of T).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
  ScriptableFramework.RuntimeList{GameObject}.Insert(System.Int32,GameObject):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<GameObject>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of GameObject).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Insert(System.Int32,GameObject)
  ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<T>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<T>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of T).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of T).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{GameObject}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<GameObject>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of GameObject).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList`1.Contains(`0):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<T>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<T>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of T).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.Contains(`0)
  ScriptableFramework.RuntimeList{GameObject}.Contains(GameObject):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<GameObject>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of GameObject).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.Contains(GameObject)
  ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<T>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<T>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of T).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of T).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
  ScriptableFramework.RuntimeList{GameObject}.CopyTo(GameObject[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<GameObject>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of GameObject).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.CopyTo(GameObject[],System.Int32)
  ScriptableFramework.RuntimeList`1.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<T>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<T>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of T).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of T).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.GetEnumerator
  ScriptableFramework.RuntimeList{GameObject}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<GameObject>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of GameObject).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.GetEnumerator
  ScriptableFramework.RuntimeList`1.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<T>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<T>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of T).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of T).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.ToArray
  ScriptableFramework.RuntimeList{GameObject}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<GameObject>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of GameObject).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.ToArray
  ScriptableFramework.RuntimeList`1.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<T>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<T>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of T).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of T).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.RuntimeList`1.ToList
  ScriptableFramework.RuntimeList{GameObject}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<GameObject>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<GameObject>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of GameObject).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of GameObject).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{GameObject}
    commentId: M:ScriptableFramework.RuntimeList{GameObject}.ToList
  ScriptableFramework.GameObjectList:
    name:
      CSharp:
      - id: ScriptableFramework.GameObjectList
        name: GameObjectList
        nameWithType: GameObjectList
        qualifiedName: ScriptableFramework.GameObjectList
      VB:
      - id: ScriptableFramework.GameObjectList
        name: GameObjectList
        nameWithType: GameObjectList
        qualifiedName: ScriptableFramework.GameObjectList
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.GameObjectList
  ScriptableFramework.ReferenceList{MeshRenderer}:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReferenceList{MeshRenderer}
  ScriptableFramework.RuntimeList{MeshRenderer}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{MeshRenderer}
  ScriptableFramework.RuntimeList{MeshRenderer}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<MeshRenderer>.items
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of MeshRenderer).items
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: F:ScriptableFramework.RuntimeList{MeshRenderer}.items
  ScriptableFramework.RuntimeList{MeshRenderer}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<MeshRenderer>.Item
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of MeshRenderer).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: P:ScriptableFramework.RuntimeList{MeshRenderer}.Item(System.Int32)
  ScriptableFramework.RuntimeList{MeshRenderer}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<MeshRenderer>.Count
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of MeshRenderer).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: P:ScriptableFramework.RuntimeList{MeshRenderer}.Count
  ScriptableFramework.RuntimeList{MeshRenderer}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<MeshRenderer>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of MeshRenderer).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: P:ScriptableFramework.RuntimeList{MeshRenderer}.IsReadOnly
  ScriptableFramework.RuntimeList{MeshRenderer}.Add(MeshRenderer):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<MeshRenderer>.Add
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of MeshRenderer).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Add(MeshRenderer)
  ScriptableFramework.RuntimeList{MeshRenderer}.AddRange(IEnumerable{MeshRenderer}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<MeshRenderer>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of MeshRenderer).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.AddRange(IEnumerable{MeshRenderer})
  ScriptableFramework.RuntimeList{MeshRenderer}.Initialise(IEnumerable{MeshRenderer}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<MeshRenderer>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of MeshRenderer).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Initialise(IEnumerable{MeshRenderer})
  ScriptableFramework.RuntimeList{MeshRenderer}.Remove(MeshRenderer):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<MeshRenderer>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of MeshRenderer).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Remove(MeshRenderer)
  ScriptableFramework.RuntimeList{MeshRenderer}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<MeshRenderer>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of MeshRenderer).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{MeshRenderer}.SetItem(System.Int32,MeshRenderer):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<MeshRenderer>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of MeshRenderer).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.SetItem(System.Int32,MeshRenderer)
  ScriptableFramework.RuntimeList{MeshRenderer}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList<MeshRenderer>.Clear
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList(Of MeshRenderer).Clear
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Clear
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Clear
  ScriptableFramework.RuntimeList{MeshRenderer}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList<MeshRenderer>.Reset
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList(Of MeshRenderer).Reset
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Reset
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Reset
  ScriptableFramework.RuntimeList{MeshRenderer}.IndexOf(MeshRenderer):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<MeshRenderer>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of MeshRenderer).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.IndexOf(MeshRenderer)
  ScriptableFramework.RuntimeList{MeshRenderer}.Insert(System.Int32,MeshRenderer):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<MeshRenderer>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of MeshRenderer).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Insert(System.Int32,MeshRenderer)
  ScriptableFramework.RuntimeList{MeshRenderer}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<MeshRenderer>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of MeshRenderer).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{MeshRenderer}.Contains(MeshRenderer):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<MeshRenderer>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of MeshRenderer).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.Contains(MeshRenderer)
  ScriptableFramework.RuntimeList{MeshRenderer}.CopyTo(MeshRenderer[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<MeshRenderer>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of MeshRenderer).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.CopyTo(MeshRenderer[],System.Int32)
  ScriptableFramework.RuntimeList{MeshRenderer}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<MeshRenderer>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of MeshRenderer).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.GetEnumerator
  ScriptableFramework.RuntimeList{MeshRenderer}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<MeshRenderer>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of MeshRenderer).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.ToArray
  ScriptableFramework.RuntimeList{MeshRenderer}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<MeshRenderer>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<MeshRenderer>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of MeshRenderer).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of MeshRenderer).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{MeshRenderer}
    commentId: M:ScriptableFramework.RuntimeList{MeshRenderer}.ToList
  ScriptableFramework.MeshRendererList:
    name:
      CSharp:
      - id: ScriptableFramework.MeshRendererList
        name: MeshRendererList
        nameWithType: MeshRendererList
        qualifiedName: ScriptableFramework.MeshRendererList
      VB:
      - id: ScriptableFramework.MeshRendererList
        name: MeshRendererList
        nameWithType: MeshRendererList
        qualifiedName: ScriptableFramework.MeshRendererList
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.MeshRendererList
  ScriptableFramework.RuntimeList{{T}}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{`0}
  ScriptableFramework.RuntimeList{{T}}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<T>.items
        qualifiedName: ScriptableFramework.RuntimeList<T>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of T).items
        qualifiedName: ScriptableFramework.RuntimeList(Of T).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: F:ScriptableFramework.RuntimeList{`0}.items
  ScriptableFramework.RuntimeList{{T}}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<T>.Item
        qualifiedName: ScriptableFramework.RuntimeList<T>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of T).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: P:ScriptableFramework.RuntimeList{`0}.Item(System.Int32)
  ScriptableFramework.RuntimeList{{T}}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<T>.Count
        qualifiedName: ScriptableFramework.RuntimeList<T>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of T).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: P:ScriptableFramework.RuntimeList{`0}.Count
  ScriptableFramework.RuntimeList{{T}}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<T>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<T>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of T).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of T).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: P:ScriptableFramework.RuntimeList{`0}.IsReadOnly
  ScriptableFramework.RuntimeList{{T}}.Add({T}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<T>.Add
        qualifiedName: ScriptableFramework.RuntimeList<T>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of T).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Add(`0)
  ScriptableFramework.RuntimeList{{T}}.AddRange(IEnumerable{{T}}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<T>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<T>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of T).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of T).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.AddRange(IEnumerable{`0})
  ScriptableFramework.RuntimeList{{T}}.Initialise(IEnumerable{{T}}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<T>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<T>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of T).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Initialise(IEnumerable{`0})
  ScriptableFramework.RuntimeList{{T}}.Remove({T}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<T>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<T>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of T).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Remove(`0)
  ScriptableFramework.RuntimeList{{T}}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<T>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<T>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of T).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of T).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{{T}}.SetItem(System.Int32,{T}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<T>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<T>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of T).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of T).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.SetItem(System.Int32,`0)
  ScriptableFramework.RuntimeList{{T}}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList<T>.Clear
        qualifiedName: ScriptableFramework.RuntimeList<T>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList(Of T).Clear
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Clear
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Clear
  ScriptableFramework.RuntimeList{{T}}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList<T>.Reset
        qualifiedName: ScriptableFramework.RuntimeList<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList(Of T).Reset
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Reset
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Reset
  ScriptableFramework.RuntimeList{{T}}.IndexOf({T}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<T>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<T>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of T).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of T).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.IndexOf(`0)
  ScriptableFramework.RuntimeList{{T}}.Insert(System.Int32,{T}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<T>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<T>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of T).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Insert(System.Int32,`0)
  ScriptableFramework.RuntimeList{{T}}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<T>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<T>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of T).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of T).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{{T}}.Contains({T}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<T>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<T>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of T).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of T).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.Contains(`0)
  ScriptableFramework.RuntimeList{{T}}.CopyTo({T}[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<T>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<T>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of T).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of T).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.CopyTo(`0[],System.Int32)
  ScriptableFramework.RuntimeList{{T}}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<T>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<T>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of T).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of T).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.GetEnumerator
  ScriptableFramework.RuntimeList{{T}}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<T>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<T>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of T).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of T).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.ToArray
  ScriptableFramework.RuntimeList{{T}}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<T>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<T>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of T).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of T).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{{T}}
    commentId: M:ScriptableFramework.RuntimeList{`0}.ToList
  ScriptableFramework.ReferenceList{Transform}:
    name:
      CSharp:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ReferenceList`1
        name: ReferenceList
        nameWithType: ReferenceList
        qualifiedName: ScriptableFramework.ReferenceList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ReferenceList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ReferenceList{Transform}
  ScriptableFramework.RuntimeList{Transform}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{Transform}
  ScriptableFramework.RuntimeList{Transform}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<Transform>.items
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of Transform).items
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: F:ScriptableFramework.RuntimeList{Transform}.items
  ScriptableFramework.RuntimeList{Transform}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<Transform>.Item
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of Transform).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: P:ScriptableFramework.RuntimeList{Transform}.Item(System.Int32)
  ScriptableFramework.RuntimeList{Transform}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<Transform>.Count
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of Transform).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: P:ScriptableFramework.RuntimeList{Transform}.Count
  ScriptableFramework.RuntimeList{Transform}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<Transform>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of Transform).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: P:ScriptableFramework.RuntimeList{Transform}.IsReadOnly
  ScriptableFramework.RuntimeList{Transform}.Add(Transform):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<Transform>.Add
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of Transform).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Add(Transform)
  ScriptableFramework.RuntimeList{Transform}.AddRange(IEnumerable{Transform}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<Transform>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of Transform).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.AddRange(IEnumerable{Transform})
  ScriptableFramework.RuntimeList{Transform}.Initialise(IEnumerable{Transform}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<Transform>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of Transform).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Initialise(IEnumerable{Transform})
  ScriptableFramework.RuntimeList{Transform}.Remove(Transform):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<Transform>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of Transform).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Remove(Transform)
  ScriptableFramework.RuntimeList{Transform}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<Transform>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of Transform).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{Transform}.SetItem(System.Int32,Transform):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<Transform>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of Transform).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.SetItem(System.Int32,Transform)
  ScriptableFramework.RuntimeList{Transform}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList<Transform>.Clear
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Clear
        name: Clear
        nameWithType: RuntimeList(Of Transform).Clear
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Clear
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Clear
  ScriptableFramework.RuntimeList{Transform}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList<Transform>.Reset
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Reset
        name: Reset
        nameWithType: RuntimeList(Of Transform).Reset
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Reset
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Reset
  ScriptableFramework.RuntimeList{Transform}.IndexOf(Transform):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<Transform>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of Transform).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.IndexOf(Transform)
  ScriptableFramework.RuntimeList{Transform}.Insert(System.Int32,Transform):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<Transform>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of Transform).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Insert(System.Int32,Transform)
  ScriptableFramework.RuntimeList{Transform}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<Transform>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of Transform).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{Transform}.Contains(Transform):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<Transform>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of Transform).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.Contains(Transform)
  ScriptableFramework.RuntimeList{Transform}.CopyTo(Transform[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<Transform>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of Transform).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.CopyTo(Transform[],System.Int32)
  ScriptableFramework.RuntimeList{Transform}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<Transform>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of Transform).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.GetEnumerator
  ScriptableFramework.RuntimeList{Transform}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<Transform>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of Transform).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.ToArray
  ScriptableFramework.RuntimeList{Transform}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<Transform>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<Transform>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of Transform).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of Transform).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{Transform}
    commentId: M:ScriptableFramework.RuntimeList{Transform}.ToList
  ScriptableFramework.TransformList:
    name:
      CSharp:
      - id: ScriptableFramework.TransformList
        name: TransformList
        nameWithType: TransformList
        qualifiedName: ScriptableFramework.TransformList
      VB:
      - id: ScriptableFramework.TransformList
        name: TransformList
        nameWithType: TransformList
        qualifiedName: ScriptableFramework.TransformList
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.TransformList
  Global.GameObject[]:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ScriptableFramework.GameObjectListPopulator:
    name:
      CSharp:
      - id: ScriptableFramework.GameObjectListPopulator
        name: GameObjectListPopulator
        nameWithType: GameObjectListPopulator
        qualifiedName: ScriptableFramework.GameObjectListPopulator
      VB:
      - id: ScriptableFramework.GameObjectListPopulator
        name: GameObjectListPopulator
        nameWithType: GameObjectListPopulator
        qualifiedName: ScriptableFramework.GameObjectListPopulator
    isDefinition: true
    commentId: T:ScriptableFramework.GameObjectListPopulator
  Global.MeshRenderer[]:
    name:
      CSharp:
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ScriptableFramework.MeshRendererListPopulator:
    name:
      CSharp:
      - id: ScriptableFramework.MeshRendererListPopulator
        name: MeshRendererListPopulator
        nameWithType: MeshRendererListPopulator
        qualifiedName: ScriptableFramework.MeshRendererListPopulator
      VB:
      - id: ScriptableFramework.MeshRendererListPopulator
        name: MeshRendererListPopulator
        nameWithType: MeshRendererListPopulator
        qualifiedName: ScriptableFramework.MeshRendererListPopulator
    isDefinition: true
    commentId: T:ScriptableFramework.MeshRendererListPopulator
  Global.Transform[]:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ScriptableFramework.TransformListPopulator:
    name:
      CSharp:
      - id: ScriptableFramework.TransformListPopulator
        name: TransformListPopulator
        nameWithType: TransformListPopulator
        qualifiedName: ScriptableFramework.TransformListPopulator
      VB:
      - id: ScriptableFramework.TransformListPopulator
        name: TransformListPopulator
        nameWithType: TransformListPopulator
        qualifiedName: ScriptableFramework.TransformListPopulator
    isDefinition: true
    commentId: T:ScriptableFramework.TransformListPopulator
  ScriptableFramework.ValueList`1:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ScriptableFramework.ValueList`1
  ScriptableFramework.ValueList{System.Boolean}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueList{System.Boolean}
  ScriptableFramework.ValueList`1.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<T>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<T>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of T).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of T).customDefaultValues
    isDefinition: true
    commentId: F:ScriptableFramework.ValueList`1.customDefaultValues
  ScriptableFramework.ValueList{System.Boolean}.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<Boolean>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<System.Boolean>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of Boolean).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of System.Boolean).customDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.customDefaultValues
    parent: ScriptableFramework.ValueList{System.Boolean}
    commentId: F:ScriptableFramework.ValueList{System.Boolean}.customDefaultValues
  ScriptableFramework.ValueList`1.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<T>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<T>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of T).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of T).useCustomDefaultValues
    isDefinition: true
    commentId: F:ScriptableFramework.ValueList`1.useCustomDefaultValues
  ScriptableFramework.ValueList{System.Boolean}.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<Boolean>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<System.Boolean>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of Boolean).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of System.Boolean).useCustomDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.useCustomDefaultValues
    parent: ScriptableFramework.ValueList{System.Boolean}
    commentId: F:ScriptableFramework.ValueList{System.Boolean}.useCustomDefaultValues
  ScriptableFramework.ValueList`1.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<T>.Clear
        qualifiedName: ScriptableFramework.ValueList<T>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of T).Clear
        qualifiedName: ScriptableFramework.ValueList(Of T).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.ValueList`1.Clear
  ScriptableFramework.ValueList{System.Boolean}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<Boolean>.Clear
        qualifiedName: ScriptableFramework.ValueList<System.Boolean>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of Boolean).Clear
        qualifiedName: ScriptableFramework.ValueList(Of System.Boolean).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Clear
    parent: ScriptableFramework.ValueList{System.Boolean}
    commentId: M:ScriptableFramework.ValueList{System.Boolean}.Clear
  ScriptableFramework.ValueList`1.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<T>.Reset
        qualifiedName: ScriptableFramework.ValueList<T>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of T).Reset
        qualifiedName: ScriptableFramework.ValueList(Of T).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.ValueList`1.Reset
  ScriptableFramework.ValueList{System.Boolean}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<Boolean>.Reset
        qualifiedName: ScriptableFramework.ValueList<System.Boolean>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of Boolean).Reset
        qualifiedName: ScriptableFramework.ValueList(Of System.Boolean).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Reset
    parent: ScriptableFramework.ValueList{System.Boolean}
    commentId: M:ScriptableFramework.ValueList{System.Boolean}.Reset
  ScriptableFramework.ValueList`1.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<T>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<T>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of T).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of T).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
  ScriptableFramework.ValueList{System.Boolean}.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<Boolean>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<System.Boolean>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of Boolean).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of System.Boolean).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
    parent: ScriptableFramework.ValueList{System.Boolean}
    commentId: M:ScriptableFramework.ValueList{System.Boolean}.ToNativeArray(Allocator)
  ScriptableFramework.RuntimeList{System.Boolean}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{System.Boolean}
  ScriptableFramework.RuntimeList{System.Boolean}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<Boolean>.items
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of Boolean).items
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: F:ScriptableFramework.RuntimeList{System.Boolean}.items
  ScriptableFramework.RuntimeList{System.Boolean}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<Boolean>.Item
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of Boolean).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: P:ScriptableFramework.RuntimeList{System.Boolean}.Item(System.Int32)
  ScriptableFramework.RuntimeList{System.Boolean}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<Boolean>.Count
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of Boolean).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: P:ScriptableFramework.RuntimeList{System.Boolean}.Count
  ScriptableFramework.RuntimeList{System.Boolean}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<Boolean>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of Boolean).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: P:ScriptableFramework.RuntimeList{System.Boolean}.IsReadOnly
  ScriptableFramework.RuntimeList{System.Boolean}.Add(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<Boolean>.Add
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of Boolean).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.Add(System.Boolean)
  ScriptableFramework.RuntimeList{System.Boolean}.AddRange(IEnumerable{System.Boolean}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<Boolean>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of Boolean).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.AddRange(IEnumerable{System.Boolean})
  ScriptableFramework.RuntimeList{System.Boolean}.Initialise(IEnumerable{System.Boolean}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<Boolean>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of Boolean).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.Initialise(IEnumerable{System.Boolean})
  ScriptableFramework.RuntimeList{System.Boolean}.Remove(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<Boolean>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of Boolean).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.Remove(System.Boolean)
  ScriptableFramework.RuntimeList{System.Boolean}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<Boolean>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of Boolean).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{System.Boolean}.SetItem(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<Boolean>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of Boolean).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.SetItem(System.Int32,System.Boolean)
  ScriptableFramework.RuntimeList{System.Boolean}.IndexOf(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<Boolean>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of Boolean).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.IndexOf(System.Boolean)
  ScriptableFramework.RuntimeList{System.Boolean}.Insert(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<Boolean>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of Boolean).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.Insert(System.Int32,System.Boolean)
  ScriptableFramework.RuntimeList{System.Boolean}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<Boolean>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of Boolean).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{System.Boolean}.Contains(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<Boolean>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of Boolean).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.Contains(System.Boolean)
  ScriptableFramework.RuntimeList{System.Boolean}.CopyTo(System.Boolean[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<Boolean>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of Boolean).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.CopyTo(System.Boolean[],System.Int32)
  ScriptableFramework.RuntimeList{System.Boolean}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<Boolean>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of Boolean).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.GetEnumerator
  ScriptableFramework.RuntimeList{System.Boolean}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<Boolean>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of Boolean).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.ToArray
  ScriptableFramework.RuntimeList{System.Boolean}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<Boolean>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<System.Boolean>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of Boolean).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Boolean).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{System.Boolean}
    commentId: M:ScriptableFramework.RuntimeList{System.Boolean}.ToList
  ScriptableFramework.BoolList:
    name:
      CSharp:
      - id: ScriptableFramework.BoolList
        name: BoolList
        nameWithType: BoolList
        qualifiedName: ScriptableFramework.BoolList
      VB:
      - id: ScriptableFramework.BoolList
        name: BoolList
        nameWithType: BoolList
        qualifiedName: ScriptableFramework.BoolList
    isDefinition: true
    commentId: T:ScriptableFramework.BoolList
  ScriptableFramework.ValueList{Color}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueList{Color}
  ScriptableFramework.ValueList{Color}.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<Color>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<Color>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of Color).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of Color).customDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.customDefaultValues
    parent: ScriptableFramework.ValueList{Color}
    commentId: F:ScriptableFramework.ValueList{Color}.customDefaultValues
  ScriptableFramework.ValueList{Color}.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<Color>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<Color>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of Color).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of Color).useCustomDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.useCustomDefaultValues
    parent: ScriptableFramework.ValueList{Color}
    commentId: F:ScriptableFramework.ValueList{Color}.useCustomDefaultValues
  ScriptableFramework.ValueList{Color}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<Color>.Clear
        qualifiedName: ScriptableFramework.ValueList<Color>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of Color).Clear
        qualifiedName: ScriptableFramework.ValueList(Of Color).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Clear
    parent: ScriptableFramework.ValueList{Color}
    commentId: M:ScriptableFramework.ValueList{Color}.Clear
  ScriptableFramework.ValueList{Color}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<Color>.Reset
        qualifiedName: ScriptableFramework.ValueList<Color>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of Color).Reset
        qualifiedName: ScriptableFramework.ValueList(Of Color).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Reset
    parent: ScriptableFramework.ValueList{Color}
    commentId: M:ScriptableFramework.ValueList{Color}.Reset
  ScriptableFramework.ValueList{Color}.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<Color>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<Color>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of Color).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of Color).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
    parent: ScriptableFramework.ValueList{Color}
    commentId: M:ScriptableFramework.ValueList{Color}.ToNativeArray(Allocator)
  ScriptableFramework.RuntimeList{Color}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{Color}
  ScriptableFramework.RuntimeList{Color}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<Color>.items
        qualifiedName: ScriptableFramework.RuntimeList<Color>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of Color).items
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: F:ScriptableFramework.RuntimeList{Color}.items
  ScriptableFramework.RuntimeList{Color}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<Color>.Item
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of Color).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: P:ScriptableFramework.RuntimeList{Color}.Item(System.Int32)
  ScriptableFramework.RuntimeList{Color}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<Color>.Count
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of Color).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: P:ScriptableFramework.RuntimeList{Color}.Count
  ScriptableFramework.RuntimeList{Color}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<Color>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<Color>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of Color).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: P:ScriptableFramework.RuntimeList{Color}.IsReadOnly
  ScriptableFramework.RuntimeList{Color}.Add(Color):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<Color>.Add
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of Color).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.Add(Color)
  ScriptableFramework.RuntimeList{Color}.AddRange(IEnumerable{Color}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<Color>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<Color>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of Color).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.AddRange(IEnumerable{Color})
  ScriptableFramework.RuntimeList{Color}.Initialise(IEnumerable{Color}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<Color>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of Color).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.Initialise(IEnumerable{Color})
  ScriptableFramework.RuntimeList{Color}.Remove(Color):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<Color>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of Color).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.Remove(Color)
  ScriptableFramework.RuntimeList{Color}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<Color>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<Color>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of Color).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{Color}.SetItem(System.Int32,Color):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<Color>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<Color>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of Color).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.SetItem(System.Int32,Color)
  ScriptableFramework.RuntimeList{Color}.IndexOf(Color):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<Color>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<Color>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of Color).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.IndexOf(Color)
  ScriptableFramework.RuntimeList{Color}.Insert(System.Int32,Color):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<Color>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of Color).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.Insert(System.Int32,Color)
  ScriptableFramework.RuntimeList{Color}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<Color>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<Color>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of Color).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{Color}.Contains(Color):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<Color>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<Color>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of Color).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.Contains(Color)
  ScriptableFramework.RuntimeList{Color}.CopyTo(Color[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<Color>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<Color>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of Color).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.CopyTo(Color[],System.Int32)
  ScriptableFramework.RuntimeList{Color}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<Color>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<Color>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of Color).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.GetEnumerator
  ScriptableFramework.RuntimeList{Color}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<Color>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<Color>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of Color).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.ToArray
  ScriptableFramework.RuntimeList{Color}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<Color>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<Color>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of Color).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of Color).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{Color}
    commentId: M:ScriptableFramework.RuntimeList{Color}.ToList
  ScriptableFramework.ColorList:
    name:
      CSharp:
      - id: ScriptableFramework.ColorList
        name: ColorList
        nameWithType: ColorList
        qualifiedName: ScriptableFramework.ColorList
      VB:
      - id: ScriptableFramework.ColorList
        name: ColorList
        nameWithType: ColorList
        qualifiedName: ScriptableFramework.ColorList
    isDefinition: true
    commentId: T:ScriptableFramework.ColorList
  ScriptableFramework.ValueList{System.Single}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueList{System.Single}
  ScriptableFramework.ValueList{System.Single}.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<Single>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<System.Single>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of Single).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of System.Single).customDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.customDefaultValues
    parent: ScriptableFramework.ValueList{System.Single}
    commentId: F:ScriptableFramework.ValueList{System.Single}.customDefaultValues
  ScriptableFramework.ValueList{System.Single}.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<Single>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<System.Single>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of Single).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of System.Single).useCustomDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.useCustomDefaultValues
    parent: ScriptableFramework.ValueList{System.Single}
    commentId: F:ScriptableFramework.ValueList{System.Single}.useCustomDefaultValues
  ScriptableFramework.ValueList{System.Single}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<Single>.Clear
        qualifiedName: ScriptableFramework.ValueList<System.Single>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of Single).Clear
        qualifiedName: ScriptableFramework.ValueList(Of System.Single).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Clear
    parent: ScriptableFramework.ValueList{System.Single}
    commentId: M:ScriptableFramework.ValueList{System.Single}.Clear
  ScriptableFramework.ValueList{System.Single}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<Single>.Reset
        qualifiedName: ScriptableFramework.ValueList<System.Single>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of Single).Reset
        qualifiedName: ScriptableFramework.ValueList(Of System.Single).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Reset
    parent: ScriptableFramework.ValueList{System.Single}
    commentId: M:ScriptableFramework.ValueList{System.Single}.Reset
  ScriptableFramework.ValueList{System.Single}.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<Single>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<System.Single>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of Single).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of System.Single).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
    parent: ScriptableFramework.ValueList{System.Single}
    commentId: M:ScriptableFramework.ValueList{System.Single}.ToNativeArray(Allocator)
  ScriptableFramework.RuntimeList{System.Single}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{System.Single}
  ScriptableFramework.RuntimeList{System.Single}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<Single>.items
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of Single).items
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: F:ScriptableFramework.RuntimeList{System.Single}.items
  ScriptableFramework.RuntimeList{System.Single}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<Single>.Item
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of Single).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: P:ScriptableFramework.RuntimeList{System.Single}.Item(System.Int32)
  ScriptableFramework.RuntimeList{System.Single}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<Single>.Count
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of Single).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: P:ScriptableFramework.RuntimeList{System.Single}.Count
  ScriptableFramework.RuntimeList{System.Single}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<Single>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of Single).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: P:ScriptableFramework.RuntimeList{System.Single}.IsReadOnly
  ScriptableFramework.RuntimeList{System.Single}.Add(System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<Single>.Add
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of Single).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.Add(System.Single)
  ScriptableFramework.RuntimeList{System.Single}.AddRange(IEnumerable{System.Single}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<Single>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of Single).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.AddRange(IEnumerable{System.Single})
  ScriptableFramework.RuntimeList{System.Single}.Initialise(IEnumerable{System.Single}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<Single>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of Single).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.Initialise(IEnumerable{System.Single})
  ScriptableFramework.RuntimeList{System.Single}.Remove(System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<Single>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of Single).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.Remove(System.Single)
  ScriptableFramework.RuntimeList{System.Single}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<Single>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of Single).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{System.Single}.SetItem(System.Int32,System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<Single>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of Single).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.SetItem(System.Int32,System.Single)
  ScriptableFramework.RuntimeList{System.Single}.IndexOf(System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<Single>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of Single).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.IndexOf(System.Single)
  ScriptableFramework.RuntimeList{System.Single}.Insert(System.Int32,System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<Single>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of Single).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.Insert(System.Int32,System.Single)
  ScriptableFramework.RuntimeList{System.Single}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<Single>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of Single).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{System.Single}.Contains(System.Single):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<Single>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of Single).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.Contains(System.Single)
  ScriptableFramework.RuntimeList{System.Single}.CopyTo(System.Single[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<Single>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of Single).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.CopyTo(System.Single[],System.Int32)
  ScriptableFramework.RuntimeList{System.Single}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<Single>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of Single).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.GetEnumerator
  ScriptableFramework.RuntimeList{System.Single}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<Single>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of Single).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.ToArray
  ScriptableFramework.RuntimeList{System.Single}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<Single>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<System.Single>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of Single).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Single).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{System.Single}
    commentId: M:ScriptableFramework.RuntimeList{System.Single}.ToList
  ScriptableFramework.FloatList:
    name:
      CSharp:
      - id: ScriptableFramework.FloatList
        name: FloatList
        nameWithType: FloatList
        qualifiedName: ScriptableFramework.FloatList
      VB:
      - id: ScriptableFramework.FloatList
        name: FloatList
        nameWithType: FloatList
        qualifiedName: ScriptableFramework.FloatList
    isDefinition: true
    commentId: T:ScriptableFramework.FloatList
  ScriptableFramework.ValueList{System.Int32}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueList{System.Int32}
  ScriptableFramework.ValueList{System.Int32}.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<Int32>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<System.Int32>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of Int32).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of System.Int32).customDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.customDefaultValues
    parent: ScriptableFramework.ValueList{System.Int32}
    commentId: F:ScriptableFramework.ValueList{System.Int32}.customDefaultValues
  ScriptableFramework.ValueList{System.Int32}.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<Int32>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<System.Int32>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of Int32).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of System.Int32).useCustomDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.useCustomDefaultValues
    parent: ScriptableFramework.ValueList{System.Int32}
    commentId: F:ScriptableFramework.ValueList{System.Int32}.useCustomDefaultValues
  ScriptableFramework.ValueList{System.Int32}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<Int32>.Clear
        qualifiedName: ScriptableFramework.ValueList<System.Int32>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of Int32).Clear
        qualifiedName: ScriptableFramework.ValueList(Of System.Int32).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Clear
    parent: ScriptableFramework.ValueList{System.Int32}
    commentId: M:ScriptableFramework.ValueList{System.Int32}.Clear
  ScriptableFramework.ValueList{System.Int32}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<Int32>.Reset
        qualifiedName: ScriptableFramework.ValueList<System.Int32>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of Int32).Reset
        qualifiedName: ScriptableFramework.ValueList(Of System.Int32).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Reset
    parent: ScriptableFramework.ValueList{System.Int32}
    commentId: M:ScriptableFramework.ValueList{System.Int32}.Reset
  ScriptableFramework.ValueList{System.Int32}.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<Int32>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<System.Int32>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of Int32).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of System.Int32).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
    parent: ScriptableFramework.ValueList{System.Int32}
    commentId: M:ScriptableFramework.ValueList{System.Int32}.ToNativeArray(Allocator)
  ScriptableFramework.RuntimeList{System.Int32}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{System.Int32}
  ScriptableFramework.RuntimeList{System.Int32}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<Int32>.items
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of Int32).items
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: F:ScriptableFramework.RuntimeList{System.Int32}.items
  ScriptableFramework.RuntimeList{System.Int32}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<Int32>.Item
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of Int32).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: P:ScriptableFramework.RuntimeList{System.Int32}.Item(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<Int32>.Count
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of Int32).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: P:ScriptableFramework.RuntimeList{System.Int32}.Count
  ScriptableFramework.RuntimeList{System.Int32}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<Int32>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of Int32).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: P:ScriptableFramework.RuntimeList{System.Int32}.IsReadOnly
  ScriptableFramework.RuntimeList{System.Int32}.Add(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<Int32>.Add
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of Int32).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.Add(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.AddRange(IEnumerable{System.Int32}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<Int32>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of Int32).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.AddRange(IEnumerable{System.Int32})
  ScriptableFramework.RuntimeList{System.Int32}.Initialise(IEnumerable{System.Int32}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<Int32>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of Int32).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.Initialise(IEnumerable{System.Int32})
  ScriptableFramework.RuntimeList{System.Int32}.Remove(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<Int32>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of Int32).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.Remove(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<Int32>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of Int32).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.SetItem(System.Int32,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<Int32>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of Int32).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.SetItem(System.Int32,System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.IndexOf(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<Int32>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of Int32).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.IndexOf(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.Insert(System.Int32,System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<Int32>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of Int32).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.Insert(System.Int32,System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<Int32>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of Int32).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.Contains(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<Int32>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of Int32).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.Contains(System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.CopyTo(System.Int32[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<Int32>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of Int32).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.CopyTo(System.Int32[],System.Int32)
  ScriptableFramework.RuntimeList{System.Int32}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<Int32>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of Int32).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.GetEnumerator
  ScriptableFramework.RuntimeList{System.Int32}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<Int32>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of Int32).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.ToArray
  ScriptableFramework.RuntimeList{System.Int32}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<Int32>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<System.Int32>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of Int32).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of System.Int32).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{System.Int32}
    commentId: M:ScriptableFramework.RuntimeList{System.Int32}.ToList
  ScriptableFramework.IntList:
    name:
      CSharp:
      - id: ScriptableFramework.IntList
        name: IntList
        nameWithType: IntList
        qualifiedName: ScriptableFramework.IntList
      VB:
      - id: ScriptableFramework.IntList
        name: IntList
        nameWithType: IntList
        qualifiedName: ScriptableFramework.IntList
    isDefinition: true
    commentId: T:ScriptableFramework.IntList
  ScriptableFramework.ValueList{ScriptableFramework.DataString}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueList{ScriptableFramework.DataString}
  ScriptableFramework.ValueList{ScriptableFramework.DataString}.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<DataString>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<ScriptableFramework.DataString>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of DataString).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of ScriptableFramework.DataString).customDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.customDefaultValues
    parent: ScriptableFramework.ValueList{ScriptableFramework.DataString}
    commentId: F:ScriptableFramework.ValueList{ScriptableFramework.DataString}.customDefaultValues
  ScriptableFramework.ValueList{ScriptableFramework.DataString}.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<DataString>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<ScriptableFramework.DataString>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of DataString).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of ScriptableFramework.DataString).useCustomDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.useCustomDefaultValues
    parent: ScriptableFramework.ValueList{ScriptableFramework.DataString}
    commentId: F:ScriptableFramework.ValueList{ScriptableFramework.DataString}.useCustomDefaultValues
  ScriptableFramework.ValueList{ScriptableFramework.DataString}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<DataString>.Clear
        qualifiedName: ScriptableFramework.ValueList<ScriptableFramework.DataString>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of DataString).Clear
        qualifiedName: ScriptableFramework.ValueList(Of ScriptableFramework.DataString).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Clear
    parent: ScriptableFramework.ValueList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.ValueList{ScriptableFramework.DataString}.Clear
  ScriptableFramework.ValueList{ScriptableFramework.DataString}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<DataString>.Reset
        qualifiedName: ScriptableFramework.ValueList<ScriptableFramework.DataString>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of DataString).Reset
        qualifiedName: ScriptableFramework.ValueList(Of ScriptableFramework.DataString).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Reset
    parent: ScriptableFramework.ValueList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.ValueList{ScriptableFramework.DataString}.Reset
  ScriptableFramework.ValueList{ScriptableFramework.DataString}.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<DataString>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<ScriptableFramework.DataString>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of DataString).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of ScriptableFramework.DataString).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
    parent: ScriptableFramework.ValueList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.ValueList{ScriptableFramework.DataString}.ToNativeArray(Allocator)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<DataString>.items
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of DataString).items
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: F:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.items
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<DataString>.Item
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of DataString).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: P:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Item(System.Int32)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<DataString>.Count
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of DataString).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: P:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Count
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<DataString>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of DataString).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: P:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.IsReadOnly
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Add(ScriptableFramework.DataString):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<DataString>.Add
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of DataString).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Add(ScriptableFramework.DataString)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.AddRange(IEnumerable{ScriptableFramework.DataString}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<DataString>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of DataString).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.AddRange(IEnumerable{ScriptableFramework.DataString})
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Initialise(IEnumerable{ScriptableFramework.DataString}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<DataString>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of DataString).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Initialise(IEnumerable{ScriptableFramework.DataString})
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Remove(ScriptableFramework.DataString):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<DataString>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of DataString).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Remove(ScriptableFramework.DataString)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<DataString>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of DataString).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.SetItem(System.Int32,ScriptableFramework.DataString):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<DataString>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of DataString).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.SetItem(System.Int32,ScriptableFramework.DataString)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.IndexOf(ScriptableFramework.DataString):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<DataString>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of DataString).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.IndexOf(ScriptableFramework.DataString)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Insert(System.Int32,ScriptableFramework.DataString):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<DataString>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of DataString).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Insert(System.Int32,ScriptableFramework.DataString)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<DataString>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of DataString).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Contains(ScriptableFramework.DataString):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<DataString>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of DataString).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.Contains(ScriptableFramework.DataString)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.CopyTo(ScriptableFramework.DataString[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<DataString>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of DataString).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ScriptableFramework.DataString
        name: DataString
        nameWithType: DataString
        qualifiedName: ScriptableFramework.DataString
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.CopyTo(ScriptableFramework.DataString[],System.Int32)
  ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<DataString>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<ScriptableFramework.DataString>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of DataString).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of ScriptableFramework.DataString).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{ScriptableFramework.DataString}
    commentId: M:ScriptableFramework.RuntimeList{ScriptableFramework.DataString}.GetEnumerator
  Global.IEnumerable{System.String}:
    name:
      CSharp:
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.IEnumerable`1
    commentId: '!:Global.IEnumerable{System.String}'
  ScriptableFramework.StringList.AddRange*:
    name:
      CSharp:
      - id: ScriptableFramework.StringList.AddRange*
        name: AddRange
        nameWithType: StringList.AddRange
        qualifiedName: ScriptableFramework.StringList.AddRange
      VB:
      - id: ScriptableFramework.StringList.AddRange*
        name: AddRange
        nameWithType: StringList.AddRange
        qualifiedName: ScriptableFramework.StringList.AddRange
    isDefinition: true
    commentId: Overload:ScriptableFramework.StringList.AddRange
  ScriptableFramework.StringList.Initialise*:
    name:
      CSharp:
      - id: ScriptableFramework.StringList.Initialise*
        name: Initialise
        nameWithType: StringList.Initialise
        qualifiedName: ScriptableFramework.StringList.Initialise
      VB:
      - id: ScriptableFramework.StringList.Initialise*
        name: Initialise
        nameWithType: StringList.Initialise
        qualifiedName: ScriptableFramework.StringList.Initialise
    isDefinition: true
    commentId: Overload:ScriptableFramework.StringList.Initialise
  Global.List{System.String}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{System.String}'
  ScriptableFramework.StringList.ToList*:
    name:
      CSharp:
      - id: ScriptableFramework.StringList.ToList*
        name: ToList
        nameWithType: StringList.ToList
        qualifiedName: ScriptableFramework.StringList.ToList
      VB:
      - id: ScriptableFramework.StringList.ToList*
        name: ToList
        nameWithType: StringList.ToList
        qualifiedName: ScriptableFramework.StringList.ToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.StringList.ToList
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ScriptableFramework.StringList.ToArray*:
    name:
      CSharp:
      - id: ScriptableFramework.StringList.ToArray*
        name: ToArray
        nameWithType: StringList.ToArray
        qualifiedName: ScriptableFramework.StringList.ToArray
      VB:
      - id: ScriptableFramework.StringList.ToArray*
        name: ToArray
        nameWithType: StringList.ToArray
        qualifiedName: ScriptableFramework.StringList.ToArray
    isDefinition: true
    commentId: Overload:ScriptableFramework.StringList.ToArray
  ScriptableFramework.StringList:
    name:
      CSharp:
      - id: ScriptableFramework.StringList
        name: StringList
        nameWithType: StringList
        qualifiedName: ScriptableFramework.StringList
      VB:
      - id: ScriptableFramework.StringList
        name: StringList
        nameWithType: StringList
        qualifiedName: ScriptableFramework.StringList
    isDefinition: true
    commentId: T:ScriptableFramework.StringList
  ScriptableFramework.ValueList`1.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear*
        name: Clear
        nameWithType: ValueList<T>.Clear
        qualifiedName: ScriptableFramework.ValueList<T>.Clear
      VB:
      - id: ScriptableFramework.ValueList`1.Clear*
        name: Clear
        nameWithType: ValueList(Of T).Clear
        qualifiedName: ScriptableFramework.ValueList(Of T).Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.ValueList`1.Clear
  ScriptableFramework.ValueList`1.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset*
        name: Reset
        nameWithType: ValueList<T>.Reset
        qualifiedName: ScriptableFramework.ValueList<T>.Reset
      VB:
      - id: ScriptableFramework.ValueList`1.Reset*
        name: Reset
        nameWithType: ValueList(Of T).Reset
        qualifiedName: ScriptableFramework.ValueList(Of T).Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.ValueList`1.Reset
  Global.NativeArray`1:
    name:
      CSharp:
      - id: Global.NativeArray`1
        name: NativeArray
        nameWithType: NativeArray
        qualifiedName: NativeArray
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.NativeArray`1
        name: NativeArray
        nameWithType: NativeArray
        qualifiedName: NativeArray
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.NativeArray`1'
  Global.NativeArray{{T}}:
    name:
      CSharp:
      - id: Global.NativeArray`1
        name: NativeArray
        nameWithType: NativeArray
        qualifiedName: NativeArray
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.NativeArray`1
        name: NativeArray
        nameWithType: NativeArray
        qualifiedName: NativeArray
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.NativeArray`1
    commentId: '!:Global.NativeArray{`0}'
  Global.Allocator:
    name:
      CSharp:
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      VB:
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Allocator'
  ScriptableFramework.ValueList`1.ToNativeArray*:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray*
        name: ToNativeArray
        nameWithType: ValueList<T>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<T>.ToNativeArray
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray*
        name: ToNativeArray
        nameWithType: ValueList(Of T).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of T).ToNativeArray
    isDefinition: true
    commentId: Overload:ScriptableFramework.ValueList`1.ToNativeArray
  ScriptableFramework.ValueList{Vector3}:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.ValueList`1
        name: ValueList
        nameWithType: ValueList
        qualifiedName: ScriptableFramework.ValueList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.ValueList{Vector3}
  ScriptableFramework.ValueList{Vector3}.customDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList<Vector3>.customDefaultValues
        qualifiedName: ScriptableFramework.ValueList<Vector3>.customDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.customDefaultValues
        name: customDefaultValues
        nameWithType: ValueList(Of Vector3).customDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of Vector3).customDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.customDefaultValues
    parent: ScriptableFramework.ValueList{Vector3}
    commentId: F:ScriptableFramework.ValueList{Vector3}.customDefaultValues
  ScriptableFramework.ValueList{Vector3}.useCustomDefaultValues:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList<Vector3>.useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList<Vector3>.useCustomDefaultValues
      VB:
      - id: ScriptableFramework.ValueList`1.useCustomDefaultValues
        name: useCustomDefaultValues
        nameWithType: ValueList(Of Vector3).useCustomDefaultValues
        qualifiedName: ScriptableFramework.ValueList(Of Vector3).useCustomDefaultValues
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.useCustomDefaultValues
    parent: ScriptableFramework.ValueList{Vector3}
    commentId: F:ScriptableFramework.ValueList{Vector3}.useCustomDefaultValues
  ScriptableFramework.ValueList{Vector3}.Clear:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList<Vector3>.Clear
        qualifiedName: ScriptableFramework.ValueList<Vector3>.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Clear
        name: Clear
        nameWithType: ValueList(Of Vector3).Clear
        qualifiedName: ScriptableFramework.ValueList(Of Vector3).Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Clear
    parent: ScriptableFramework.ValueList{Vector3}
    commentId: M:ScriptableFramework.ValueList{Vector3}.Clear
  ScriptableFramework.ValueList{Vector3}.Reset:
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList<Vector3>.Reset
        qualifiedName: ScriptableFramework.ValueList<Vector3>.Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.Reset
        name: Reset
        nameWithType: ValueList(Of Vector3).Reset
        qualifiedName: ScriptableFramework.ValueList(Of Vector3).Reset
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.Reset
    parent: ScriptableFramework.ValueList{Vector3}
    commentId: M:ScriptableFramework.ValueList{Vector3}.Reset
  ScriptableFramework.ValueList{Vector3}.ToNativeArray(Allocator):
    name:
      CSharp:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList<Vector3>.ToNativeArray
        qualifiedName: ScriptableFramework.ValueList<Vector3>.ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
        name: ToNativeArray
        nameWithType: ValueList(Of Vector3).ToNativeArray
        qualifiedName: ScriptableFramework.ValueList(Of Vector3).ToNativeArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Allocator
        name: Allocator
        nameWithType: Allocator
        qualifiedName: Allocator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.ValueList`1.ToNativeArray(Allocator)
    parent: ScriptableFramework.ValueList{Vector3}
    commentId: M:ScriptableFramework.ValueList{Vector3}.ToNativeArray(Allocator)
  ScriptableFramework.RuntimeList{Vector3}:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ScriptableFramework.RuntimeList`1
        name: RuntimeList
        nameWithType: RuntimeList
        qualifiedName: ScriptableFramework.RuntimeList
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.RuntimeList{Vector3}
  ScriptableFramework.RuntimeList{Vector3}.items:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList<Vector3>.items
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.items
      VB:
      - id: ScriptableFramework.RuntimeList`1.items
        name: items
        nameWithType: RuntimeList(Of Vector3).items
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).items
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.items
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: F:ScriptableFramework.RuntimeList{Vector3}.items
  ScriptableFramework.RuntimeList{Vector3}.Item(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList<Vector3>.Item
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: ScriptableFramework.RuntimeList`1.Item(System.Int32)
        name: Item
        nameWithType: RuntimeList(Of Vector3).Item
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Item(System.Int32)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: P:ScriptableFramework.RuntimeList{Vector3}.Item(System.Int32)
  ScriptableFramework.RuntimeList{Vector3}.Count:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList<Vector3>.Count
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Count
      VB:
      - id: ScriptableFramework.RuntimeList`1.Count
        name: Count
        nameWithType: RuntimeList(Of Vector3).Count
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Count
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Count
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: P:ScriptableFramework.RuntimeList{Vector3}.Count
  ScriptableFramework.RuntimeList{Vector3}.IsReadOnly:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList<Vector3>.IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.IsReadOnly
      VB:
      - id: ScriptableFramework.RuntimeList`1.IsReadOnly
        name: IsReadOnly
        nameWithType: RuntimeList(Of Vector3).IsReadOnly
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).IsReadOnly
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IsReadOnly
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: P:ScriptableFramework.RuntimeList{Vector3}.IsReadOnly
  ScriptableFramework.RuntimeList{Vector3}.Add(Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList<Vector3>.Add
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Add(`0)
        name: Add
        nameWithType: RuntimeList(Of Vector3).Add
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Add
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Add(`0)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.Add(Vector3)
  ScriptableFramework.RuntimeList{Vector3}.AddRange(IEnumerable{Vector3}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList<Vector3>.AddRange
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
        name: AddRange
        nameWithType: RuntimeList(Of Vector3).AddRange
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).AddRange
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.AddRange(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.AddRange(IEnumerable{Vector3})
  ScriptableFramework.RuntimeList{Vector3}.Initialise(IEnumerable{Vector3}):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList<Vector3>.Initialise
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
        name: Initialise
        nameWithType: RuntimeList(Of Vector3).Initialise
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Initialise
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Initialise(IEnumerable{`0})
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.Initialise(IEnumerable{Vector3})
  ScriptableFramework.RuntimeList{Vector3}.Remove(Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList<Vector3>.Remove
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Remove(`0)
        name: Remove
        nameWithType: RuntimeList(Of Vector3).Remove
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Remove(`0)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.Remove(Vector3)
  ScriptableFramework.RuntimeList{Vector3}.GetItem(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList<Vector3>.GetItem
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
        name: GetItem
        nameWithType: RuntimeList(Of Vector3).GetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).GetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetItem(System.Int32)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.GetItem(System.Int32)
  ScriptableFramework.RuntimeList{Vector3}.SetItem(System.Int32,Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList<Vector3>.SetItem
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
        name: SetItem
        nameWithType: RuntimeList(Of Vector3).SetItem
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).SetItem
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.SetItem(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.SetItem(System.Int32,Vector3)
  ScriptableFramework.RuntimeList{Vector3}.IndexOf(Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList<Vector3>.IndexOf
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.IndexOf(`0)
        name: IndexOf
        nameWithType: RuntimeList(Of Vector3).IndexOf
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).IndexOf
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.IndexOf(`0)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.IndexOf(Vector3)
  ScriptableFramework.RuntimeList{Vector3}.Insert(System.Int32,Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList<Vector3>.Insert
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
        name: Insert
        nameWithType: RuntimeList(Of Vector3).Insert
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Insert
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Insert(System.Int32,`0)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.Insert(System.Int32,Vector3)
  ScriptableFramework.RuntimeList{Vector3}.RemoveAt(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList<Vector3>.RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
        name: RemoveAt
        nameWithType: RuntimeList(Of Vector3).RemoveAt
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).RemoveAt
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.RemoveAt(System.Int32)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.RemoveAt(System.Int32)
  ScriptableFramework.RuntimeList{Vector3}.Contains(Vector3):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList<Vector3>.Contains
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.Contains(`0)
        name: Contains
        nameWithType: RuntimeList(Of Vector3).Contains
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).Contains
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.Contains(`0)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.Contains(Vector3)
  ScriptableFramework.RuntimeList{Vector3}.CopyTo(Vector3[],System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList<Vector3>.CopyTo
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: RuntimeList(Of Vector3).CopyTo
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).CopyTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.CopyTo(`0[],System.Int32)
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.CopyTo(Vector3[],System.Int32)
  ScriptableFramework.RuntimeList{Vector3}.GetEnumerator:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList<Vector3>.GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.GetEnumerator
        name: GetEnumerator
        nameWithType: RuntimeList(Of Vector3).GetEnumerator
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).GetEnumerator
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.GetEnumerator
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.GetEnumerator
  ScriptableFramework.RuntimeList{Vector3}.ToArray:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList<Vector3>.ToArray
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToArray
        name: ToArray
        nameWithType: RuntimeList(Of Vector3).ToArray
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToArray
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.ToArray
  ScriptableFramework.RuntimeList{Vector3}.ToList:
    name:
      CSharp:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList<Vector3>.ToList
        qualifiedName: ScriptableFramework.RuntimeList<Vector3>.ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.RuntimeList`1.ToList
        name: ToList
        nameWithType: RuntimeList(Of Vector3).ToList
        qualifiedName: ScriptableFramework.RuntimeList(Of Vector3).ToList
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ScriptableFramework.RuntimeList`1.ToList
    parent: ScriptableFramework.RuntimeList{Vector3}
    commentId: M:ScriptableFramework.RuntimeList{Vector3}.ToList
  ScriptableFramework.Vector3List:
    name:
      CSharp:
      - id: ScriptableFramework.Vector3List
        name: Vector3List
        nameWithType: Vector3List
        qualifiedName: ScriptableFramework.Vector3List
      VB:
      - id: ScriptableFramework.Vector3List
        name: Vector3List
        nameWithType: Vector3List
        qualifiedName: ScriptableFramework.Vector3List
    isDefinition: true
    commentId: T:ScriptableFramework.Vector3List
  ScriptableFramework.DefaultState:
    name:
      CSharp:
      - id: ScriptableFramework.DefaultState
        name: DefaultState
        nameWithType: DefaultState
        qualifiedName: ScriptableFramework.DefaultState
      VB:
      - id: ScriptableFramework.DefaultState
        name: DefaultState
        nameWithType: DefaultState
        qualifiedName: ScriptableFramework.DefaultState
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.DefaultState
  ScriptableFramework.StateMachine:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: ScriptableFramework.StateMachine
      VB:
      - id: ScriptableFramework.StateMachine
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: ScriptableFramework.StateMachine
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.StateMachine
  ScriptableFramework.StateChange.UpdateStateMachine*:
    name:
      CSharp:
      - id: ScriptableFramework.StateChange.UpdateStateMachine*
        name: UpdateStateMachine
        nameWithType: StateChange.UpdateStateMachine
        qualifiedName: ScriptableFramework.StateChange.UpdateStateMachine
      VB:
      - id: ScriptableFramework.StateChange.UpdateStateMachine*
        name: UpdateStateMachine
        nameWithType: StateChange.UpdateStateMachine
        qualifiedName: ScriptableFramework.StateChange.UpdateStateMachine
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateChange.UpdateStateMachine
  ScriptableFramework.StateChange:
    name:
      CSharp:
      - id: ScriptableFramework.StateChange
        name: StateChange
        nameWithType: StateChange
        qualifiedName: ScriptableFramework.StateChange
      VB:
      - id: ScriptableFramework.StateChange
        name: StateChange
        nameWithType: StateChange
        qualifiedName: ScriptableFramework.StateChange
    isDefinition: true
    commentId: T:ScriptableFramework.StateChange
  ScriptableFramework.StateMachineBase:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase
        name: StateMachineBase
        nameWithType: StateMachineBase
        qualifiedName: ScriptableFramework.StateMachineBase
      VB:
      - id: ScriptableFramework.StateMachineBase
        name: StateMachineBase
        nameWithType: StateMachineBase
        qualifiedName: ScriptableFramework.StateMachineBase
    isDefinition: true
    parent: ScriptableFramework
    commentId: T:ScriptableFramework.StateMachineBase
  ScriptableFramework.StateMachineBase.defaultState:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.defaultState
        name: defaultState
        nameWithType: StateMachineBase.defaultState
        qualifiedName: ScriptableFramework.StateMachineBase.defaultState
      VB:
      - id: ScriptableFramework.StateMachineBase.defaultState
        name: defaultState
        nameWithType: StateMachineBase.defaultState
        qualifiedName: ScriptableFramework.StateMachineBase.defaultState
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: F:ScriptableFramework.StateMachineBase.defaultState
  ScriptableFramework.StateMachineBase.selectionIndex:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.selectionIndex
        name: selectionIndex
        nameWithType: StateMachineBase.selectionIndex
        qualifiedName: ScriptableFramework.StateMachineBase.selectionIndex
      VB:
      - id: ScriptableFramework.StateMachineBase.selectionIndex
        name: selectionIndex
        nameWithType: StateMachineBase.selectionIndex
        qualifiedName: ScriptableFramework.StateMachineBase.selectionIndex
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: F:ScriptableFramework.StateMachineBase.selectionIndex
  ScriptableFramework.StateMachineBase.UpdateState(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Int32)
  ScriptableFramework.StateMachineBase.UpdateState(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Boolean)
  ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Boolean)
  ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.UpdateState(System.Int32,System.Int32,System.Boolean)
  ScriptableFramework.StateMachineBase.ApplyState(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Int32)
  ScriptableFramework.StateMachine.ApplyState*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine.ApplyState*
        name: ApplyState
        nameWithType: StateMachine.ApplyState
        qualifiedName: ScriptableFramework.StateMachine.ApplyState
      VB:
      - id: ScriptableFramework.StateMachine.ApplyState*
        name: ApplyState
        nameWithType: StateMachine.ApplyState
        qualifiedName: ScriptableFramework.StateMachine.ApplyState
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachine.ApplyState
  ScriptableFramework.StateMachineBase.ApplyState(System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Boolean)
  ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Boolean)
  ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.ApplyState(System.Int32,System.Int32,System.Boolean)
  ScriptableFramework.StateMachineBase.CheckListBeforeUpdate:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
        name: CheckListBeforeUpdate
        nameWithType: StateMachineBase.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
        name: CheckListBeforeUpdate
        nameWithType: StateMachineBase.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
  ScriptableFramework.StateMachine.CheckListBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine.CheckListBeforeUpdate*
        name: CheckListBeforeUpdate
        nameWithType: StateMachine.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachine.CheckListBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachine.CheckListBeforeUpdate*
        name: CheckListBeforeUpdate
        nameWithType: StateMachine.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachine.CheckListBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachine.CheckListBeforeUpdate
  ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachineBase.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachineBase.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate(System.Int32)
  ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate*
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachine.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate*
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachine.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachine.CheckSelectionIndexBeforeUpdate
  ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32):
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachineBase.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachineBase.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.StateMachineBase
    commentId: M:ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate(System.Int32)
  ScriptableFramework.StateMachine.CheckListItemBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate*
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachine.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate*
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachine.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachine.CheckListItemBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachine.CheckListItemBeforeUpdate
  ScriptableFramework.StateMachine.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine.Clear*
        name: Clear
        nameWithType: StateMachine.Clear
        qualifiedName: ScriptableFramework.StateMachine.Clear
      VB:
      - id: ScriptableFramework.StateMachine.Clear*
        name: Clear
        nameWithType: StateMachine.Clear
        qualifiedName: ScriptableFramework.StateMachine.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachine.Clear
  ScriptableFramework.StateMachine.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachine.Reset*
        name: Reset
        nameWithType: StateMachine.Reset
        qualifiedName: ScriptableFramework.StateMachine.Reset
      VB:
      - id: ScriptableFramework.StateMachine.Reset*
        name: Reset
        nameWithType: StateMachine.Reset
        qualifiedName: ScriptableFramework.StateMachine.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachine.Reset
  ScriptableFramework.StateMachineBase.UpdateState*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.UpdateState*
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
      VB:
      - id: ScriptableFramework.StateMachineBase.UpdateState*
        name: UpdateState
        nameWithType: StateMachineBase.UpdateState
        qualifiedName: ScriptableFramework.StateMachineBase.UpdateState
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineBase.UpdateState
  ScriptableFramework.StateMachineBase.ApplyState*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.ApplyState*
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
      VB:
      - id: ScriptableFramework.StateMachineBase.ApplyState*
        name: ApplyState
        nameWithType: StateMachineBase.ApplyState
        qualifiedName: ScriptableFramework.StateMachineBase.ApplyState
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineBase.ApplyState
  ScriptableFramework.StateMachineBase.CheckListBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate*
        name: CheckListBeforeUpdate
        nameWithType: StateMachineBase.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate*
        name: CheckListBeforeUpdate
        nameWithType: StateMachineBase.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineBase.CheckListBeforeUpdate
  ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate*
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachineBase.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate*
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachineBase.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineBase.CheckSelectionIndexBeforeUpdate
  ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate*
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachineBase.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate*
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachineBase.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineBase.CheckListItemBeforeUpdate
  Global.List{ScriptableFramework.StateMachineBase}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ScriptableFramework.StateMachineBase
        name: StateMachineBase
        nameWithType: StateMachineBase
        qualifiedName: ScriptableFramework.StateMachineBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ScriptableFramework.StateMachineBase
        name: StateMachineBase
        nameWithType: StateMachineBase
        qualifiedName: ScriptableFramework.StateMachineBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{ScriptableFramework.StateMachineBase}'
  ScriptableFramework.StateMachineController.ApplyState*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController.ApplyState*
        name: ApplyState
        nameWithType: StateMachineController.ApplyState
        qualifiedName: ScriptableFramework.StateMachineController.ApplyState
      VB:
      - id: ScriptableFramework.StateMachineController.ApplyState*
        name: ApplyState
        nameWithType: StateMachineController.ApplyState
        qualifiedName: ScriptableFramework.StateMachineController.ApplyState
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineController.ApplyState
  ScriptableFramework.StateMachineController.CheckListBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController.CheckListBeforeUpdate*
        name: CheckListBeforeUpdate
        nameWithType: StateMachineController.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineController.CheckListBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachineController.CheckListBeforeUpdate*
        name: CheckListBeforeUpdate
        nameWithType: StateMachineController.CheckListBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineController.CheckListBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineController.CheckListBeforeUpdate
  ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate*
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachineController.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate*
        name: CheckSelectionIndexBeforeUpdate
        nameWithType: StateMachineController.CheckSelectionIndexBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineController.CheckSelectionIndexBeforeUpdate
  ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate*
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachineController.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate
      VB:
      - id: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate*
        name: CheckListItemBeforeUpdate
        nameWithType: StateMachineController.CheckListItemBeforeUpdate
        qualifiedName: ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineController.CheckListItemBeforeUpdate
  ScriptableFramework.StateMachineController.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController.Clear*
        name: Clear
        nameWithType: StateMachineController.Clear
        qualifiedName: ScriptableFramework.StateMachineController.Clear
      VB:
      - id: ScriptableFramework.StateMachineController.Clear*
        name: Clear
        nameWithType: StateMachineController.Clear
        qualifiedName: ScriptableFramework.StateMachineController.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineController.Clear
  ScriptableFramework.StateMachineController.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController.Reset*
        name: Reset
        nameWithType: StateMachineController.Reset
        qualifiedName: ScriptableFramework.StateMachineController.Reset
      VB:
      - id: ScriptableFramework.StateMachineController.Reset*
        name: Reset
        nameWithType: StateMachineController.Reset
        qualifiedName: ScriptableFramework.StateMachineController.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateMachineController.Reset
  ScriptableFramework.StateMachineController:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineController
        name: StateMachineController
        nameWithType: StateMachineController
        qualifiedName: ScriptableFramework.StateMachineController
      VB:
      - id: ScriptableFramework.StateMachineController
        name: StateMachineController
        nameWithType: StateMachineController
        qualifiedName: ScriptableFramework.StateMachineController
    isDefinition: true
    commentId: T:ScriptableFramework.StateMachineController
  ScriptableFramework.StateMachineReset:
    name:
      CSharp:
      - id: ScriptableFramework.StateMachineReset
        name: StateMachineReset
        nameWithType: StateMachineReset
        qualifiedName: ScriptableFramework.StateMachineReset
      VB:
      - id: ScriptableFramework.StateMachineReset
        name: StateMachineReset
        nameWithType: StateMachineReset
        qualifiedName: ScriptableFramework.StateMachineReset
    isDefinition: true
    commentId: T:ScriptableFramework.StateMachineReset
  ScriptableFramework.AppEvent[]:
    name:
      CSharp:
      - id: ScriptableFramework.AppEvent
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: ScriptableFramework.AppEvent
        name: AppEvent
        nameWithType: AppEvent
        qualifiedName: ScriptableFramework.AppEvent
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ScriptableFramework.StateToggle.UpdateStateMachine*:
    name:
      CSharp:
      - id: ScriptableFramework.StateToggle.UpdateStateMachine*
        name: UpdateStateMachine
        nameWithType: StateToggle.UpdateStateMachine
        qualifiedName: ScriptableFramework.StateToggle.UpdateStateMachine
      VB:
      - id: ScriptableFramework.StateToggle.UpdateStateMachine*
        name: UpdateStateMachine
        nameWithType: StateToggle.UpdateStateMachine
        qualifiedName: ScriptableFramework.StateToggle.UpdateStateMachine
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateToggle.UpdateStateMachine
  ScriptableFramework.StateToggle.RespondToStateMachineChange*:
    name:
      CSharp:
      - id: ScriptableFramework.StateToggle.RespondToStateMachineChange*
        name: RespondToStateMachineChange
        nameWithType: StateToggle.RespondToStateMachineChange
        qualifiedName: ScriptableFramework.StateToggle.RespondToStateMachineChange
      VB:
      - id: ScriptableFramework.StateToggle.RespondToStateMachineChange*
        name: RespondToStateMachineChange
        nameWithType: StateToggle.RespondToStateMachineChange
        qualifiedName: ScriptableFramework.StateToggle.RespondToStateMachineChange
    isDefinition: true
    commentId: Overload:ScriptableFramework.StateToggle.RespondToStateMachineChange
  ScriptableFramework.StateToggle:
    name:
      CSharp:
      - id: ScriptableFramework.StateToggle
        name: StateToggle
        nameWithType: StateToggle
        qualifiedName: ScriptableFramework.StateToggle
      VB:
      - id: ScriptableFramework.StateToggle
        name: StateToggle
        nameWithType: StateToggle
        qualifiedName: ScriptableFramework.StateToggle
    isDefinition: true
    commentId: T:ScriptableFramework.StateToggle
  ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable*
        name: OnEnable
        nameWithType: AppVersionEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable
      VB:
      - id: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable*
        name: OnEnable
        nameWithType: AppVersionEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.AppVersionEditor.OnEnable
  ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AppVersionEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI
      VB:
      - id: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AppVersionEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.AppVersionEditor.OnInspectorGUI
  ScriptableFramework.CustomEditors.AppVersionEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppVersionEditor
        name: AppVersionEditor
        nameWithType: AppVersionEditor
        qualifiedName: ScriptableFramework.CustomEditors.AppVersionEditor
      VB:
      - id: ScriptableFramework.CustomEditors.AppVersionEditor
        name: AppVersionEditor
        nameWithType: AppVersionEditor
        qualifiedName: ScriptableFramework.CustomEditors.AppVersionEditor
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.AppVersionEditor
  Global.Rect:
    name:
      CSharp:
      - id: Global.Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
      VB:
      - id: Global.Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
    isDefinition: true
  Global.SerializedProperty:
    name:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
    isDefinition: true
  Global.GUIContent:
    name:
      CSharp:
      - id: Global.GUIContent
        name: GUIContent
        nameWithType: GUIContent
        qualifiedName: GUIContent
        isExternal: true
      VB:
      - id: Global.GUIContent
        name: GUIContent
        nameWithType: GUIContent
        qualifiedName: GUIContent
        isExternal: true
    isDefinition: true
  ScriptableFramework.CustomEditors.DataStringEditor.OnGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI*
        name: OnGUI
        nameWithType: DataStringEditor.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI
      VB:
      - id: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI*
        name: OnGUI
        nameWithType: DataStringEditor.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.DataStringEditor.OnGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.DataStringEditor.OnGUI
  ScriptableFramework.CustomEditors.DataStringEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.DataStringEditor
        name: DataStringEditor
        nameWithType: DataStringEditor
        qualifiedName: ScriptableFramework.CustomEditors.DataStringEditor
      VB:
      - id: ScriptableFramework.CustomEditors.DataStringEditor
        name: DataStringEditor
        nameWithType: DataStringEditor
        qualifiedName: ScriptableFramework.CustomEditors.DataStringEditor
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.DataStringEditor
  ScriptableFramework.CustomEditors:
    name:
      CSharp:
      - name: ScriptableFramework.CustomEditors
        nameWithType: ScriptableFramework.CustomEditors
        qualifiedName: ScriptableFramework.CustomEditors
      VB:
      - name: ScriptableFramework.CustomEditors
        nameWithType: ScriptableFramework.CustomEditors
        qualifiedName: ScriptableFramework.CustomEditors
    isDefinition: true
    commentId: N:ScriptableFramework.CustomEditors
  ScriptableFramework.CustomEditors.EditorOverride:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride
        name: EditorOverride
        nameWithType: EditorOverride
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride
        name: EditorOverride
        nameWithType: EditorOverride
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride
    isDefinition: true
    parent: ScriptableFramework.CustomEditors
    commentId: T:ScriptableFramework.CustomEditors.EditorOverride
  ScriptableFramework.CustomEditors.EditorOverride.cache:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.cache
        name: cache
        nameWithType: EditorOverride.cache
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.cache
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.cache
        name: cache
        nameWithType: EditorOverride.cache
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.cache
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.cache
  ScriptableFramework.CustomEditors.EditorOverride.props:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.props
        name: props
        nameWithType: EditorOverride.props
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.props
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.props
        name: props
        nameWithType: EditorOverride.props
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.props
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.props
  ScriptableFramework.CustomEditors.EditorOverride.propScript:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.propScript
        name: propScript
        nameWithType: EditorOverride.propScript
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.propScript
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.propScript
        name: propScript
        nameWithType: EditorOverride.propScript
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.propScript
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.propScript
  ScriptableFramework.CustomEditors.EditorOverride.type:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.type
        name: type
        nameWithType: EditorOverride.type
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.type
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.type
        name: type
        nameWithType: EditorOverride.type
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.type
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.type
  ScriptableFramework.CustomEditors.EditorOverride.length:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.length
        name: length
        nameWithType: EditorOverride.length
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.length
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.length
        name: length
        nameWithType: EditorOverride.length
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.length
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.length
  ScriptableFramework.CustomEditors.EditorOverride.objectFields:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.objectFields
        name: objectFields
        nameWithType: EditorOverride.objectFields
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.objectFields
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.objectFields
        name: objectFields
        nameWithType: EditorOverride.objectFields
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.objectFields
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.objectFields
  ScriptableFramework.CustomEditors.EditorOverride.initialized:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.initialized
        name: initialized
        nameWithType: EditorOverride.initialized
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.initialized
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.initialized
        name: initialized
        nameWithType: EditorOverride.initialized
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.initialized
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.initialized
  ScriptableFramework.CustomEditors.EditorOverride.colors:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.colors
        name: colors
        nameWithType: EditorOverride.colors
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.colors
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.colors
        name: colors
        nameWithType: EditorOverride.colors
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.colors
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.colors
  ScriptableFramework.CustomEditors.EditorOverride.prevFold:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.prevFold
        name: prevFold
        nameWithType: EditorOverride.prevFold
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.prevFold
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.prevFold
        name: prevFold
        nameWithType: EditorOverride.prevFold
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.prevFold
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.prevFold
  ScriptableFramework.CustomEditors.EditorOverride.style:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.style
        name: style
        nameWithType: EditorOverride.style
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.style
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.style
        name: style
        nameWithType: EditorOverride.style
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.style
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: F:ScriptableFramework.CustomEditors.EditorOverride.style
  ScriptableFramework.CustomEditors.EditorOverride.Awake:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Awake
        name: Awake
        nameWithType: EditorOverride.Awake
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Awake
        name: Awake
        nameWithType: EditorOverride.Awake
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: M:ScriptableFramework.CustomEditors.EditorOverride.Awake
  ScriptableFramework.CustomEditors.EditorOverride.OnDisable:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
        name: OnDisable
        nameWithType: EditorOverride.OnDisable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
        name: OnDisable
        nameWithType: EditorOverride.OnDisable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: M:ScriptableFramework.CustomEditors.EditorOverride.OnDisable
  ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty):
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
        name: HandleProp
        nameWithType: EditorOverride.HandleProp
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.HandleProp
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
        name: HandleProp
        nameWithType: EditorOverride.HandleProp
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.HandleProp
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: M:ScriptableFramework.CustomEditors.EditorOverride.HandleProp(SerializedProperty)
  ScriptableFramework.CustomEditors.EditorOverride.OnEnable:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
        name: OnEnable
        nameWithType: EditorOverride.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
        name: OnEnable
        nameWithType: EditorOverride.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: M:ScriptableFramework.CustomEditors.EditorOverride.OnEnable
  ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable*
        name: OnEnable
        nameWithType: RuntimeObjectEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable*
        name: OnEnable
        nameWithType: RuntimeObjectEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
  ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: EditorOverride.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: EditorOverride.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.EditorOverride
    commentId: M:ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
  ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RuntimeObjectEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RuntimeObjectEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
  ScriptableFramework.CustomEditors.RuntimeObjectEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor
        name: RuntimeObjectEditor
        nameWithType: RuntimeObjectEditor
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor
        name: RuntimeObjectEditor
        nameWithType: RuntimeObjectEditor
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor
    isDefinition: true
    parent: ScriptableFramework.CustomEditors
    commentId: T:ScriptableFramework.CustomEditors.RuntimeObjectEditor
  ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem*
        name: ResetAllMenuItem
        nameWithType: RuntimeObjectManagerEditor.ResetAllMenuItem
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem*
        name: ResetAllMenuItem
        nameWithType: RuntimeObjectManagerEditor.ResetAllMenuItem
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ResetAllMenuItem
  ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem*
        name: ClearAllMenuItem
        nameWithType: RuntimeObjectManagerEditor.ClearAllMenuItem
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem*
        name: ClearAllMenuItem
        nameWithType: RuntimeObjectManagerEditor.ClearAllMenuItem
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor.ClearAllMenuItem
  ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
        name: RuntimeObjectManagerEditor
        nameWithType: RuntimeObjectManagerEditor
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
        name: RuntimeObjectManagerEditor
        nameWithType: RuntimeObjectManagerEditor
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.RuntimeObjectManagerEditor
  ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI*
        name: OnGUI
        nameWithType: SceneAssetEditor.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI
      VB:
      - id: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI*
        name: OnGUI
        nameWithType: SceneAssetEditor.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SceneAssetEditor.OnGUI
  ScriptableFramework.CustomEditors.SceneAssetEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SceneAssetEditor
        name: SceneAssetEditor
        nameWithType: SceneAssetEditor
        qualifiedName: ScriptableFramework.CustomEditors.SceneAssetEditor
      VB:
      - id: ScriptableFramework.CustomEditors.SceneAssetEditor
        name: SceneAssetEditor
        nameWithType: SceneAssetEditor
        qualifiedName: ScriptableFramework.CustomEditors.SceneAssetEditor
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.SceneAssetEditor
  Global.Dictionary`2:
    name:
      CSharp:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Dictionary`2'
  Global.Dictionary{System.String,ScriptableFramework.CustomEditors.EditorOverride.Cache}:
    name:
      CSharp:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ScriptableFramework.CustomEditors.EditorOverride.Cache
        name: EditorOverride.Cache
        nameWithType: EditorOverride.Cache
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Cache
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ScriptableFramework.CustomEditors.EditorOverride.Cache
        name: EditorOverride.Cache
        nameWithType: EditorOverride.Cache
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Cache
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Dictionary`2
    commentId: '!:Global.Dictionary{System.String,ScriptableFramework.CustomEditors.EditorOverride.Cache}'
  Global.List{SerializedProperty}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{SerializedProperty}'
  Global.Type:
    name:
      CSharp:
      - id: Global.Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      VB:
      - id: Global.Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
    isDefinition: true
  Global.List{FieldInfo}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.FieldInfo
        name: FieldInfo
        nameWithType: FieldInfo
        qualifiedName: FieldInfo
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.FieldInfo
        name: FieldInfo
        nameWithType: FieldInfo
        qualifiedName: FieldInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{FieldInfo}'
  ScriptableFramework.CustomEditors.EditorOverride.Colors:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Colors
        name: EditorOverride.Colors
        nameWithType: EditorOverride.Colors
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Colors
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Colors
        name: EditorOverride.Colors
        nameWithType: EditorOverride.Colors
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Colors
    isDefinition: true
    parent: ScriptableFramework.CustomEditors
    commentId: T:ScriptableFramework.CustomEditors.EditorOverride.Colors
  Global.GUIStyle:
    name:
      CSharp:
      - id: Global.GUIStyle
        name: GUIStyle
        nameWithType: GUIStyle
        qualifiedName: GUIStyle
        isExternal: true
      VB:
      - id: Global.GUIStyle
        name: GUIStyle
        nameWithType: GUIStyle
        qualifiedName: GUIStyle
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GUIStyle'
  ScriptableFramework.CustomEditors.EditorOverride.Awake*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Awake*
        name: Awake
        nameWithType: EditorOverride.Awake
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Awake
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Awake*
        name: Awake
        nameWithType: EditorOverride.Awake
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Awake
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.EditorOverride.Awake
  ScriptableFramework.CustomEditors.EditorOverride.OnEnable*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnEnable*
        name: OnEnable
        nameWithType: EditorOverride.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnEnable*
        name: OnEnable
        nameWithType: EditorOverride.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnEnable
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.EditorOverride.OnEnable
  ScriptableFramework.CustomEditors.EditorOverride.OnDisable*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnDisable*
        name: OnDisable
        nameWithType: EditorOverride.OnDisable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnDisable*
        name: OnDisable
        nameWithType: EditorOverride.OnDisable
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnDisable
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.EditorOverride.OnDisable
  ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EditorOverride.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EditorOverride.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.EditorOverride.OnInspectorGUI
  ScriptableFramework.CustomEditors.EditorOverride.HandleProp*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.HandleProp*
        name: HandleProp
        nameWithType: EditorOverride.HandleProp
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.HandleProp
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.HandleProp*
        name: HandleProp
        nameWithType: EditorOverride.HandleProp
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.HandleProp
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.EditorOverride.HandleProp
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Global.HashSet`1:
    name:
      CSharp:
      - id: Global.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.HashSet`1'
  Global.HashSet{System.String}:
    name:
      CSharp:
      - id: Global.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.HashSet`1
    commentId: '!:Global.HashSet{System.String}'
  ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose*
        name: Dispose
        nameWithType: EditorOverride.Cache.Dispose
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose*
        name: Dispose
        nameWithType: EditorOverride.Cache.Dispose
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.EditorOverride.Cache.Dispose
  ScriptableFramework.CustomEditors.EditorOverride.Cache:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Cache
        name: EditorOverride.Cache
        nameWithType: EditorOverride.Cache
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Cache
      VB:
      - id: ScriptableFramework.CustomEditors.EditorOverride.Cache
        name: EditorOverride.Cache
        nameWithType: EditorOverride.Cache
        qualifiedName: ScriptableFramework.CustomEditors.EditorOverride.Cache
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.EditorOverride.Cache
  ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase*
        name: FirstLetterToUpperCase
        nameWithType: FrameworkExtensions.FirstLetterToUpperCase
        qualifiedName: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase
      VB:
      - id: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase*
        name: FirstLetterToUpperCase
        nameWithType: FrameworkExtensions.FirstLetterToUpperCase
        qualifiedName: ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.FrameworkExtensions.FirstLetterToUpperCase
  Global.IList`1:
    name:
      CSharp:
      - id: Global.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.IList`1'
  Global.IList{Type}:
    name:
      CSharp:
      - id: Global.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.IList`1
    commentId: '!:Global.IList{Type}'
  ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree*
        name: GetTypeTree
        nameWithType: FrameworkExtensions.GetTypeTree
        qualifiedName: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree
      VB:
      - id: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree*
        name: GetTypeTree
        nameWithType: FrameworkExtensions.GetTypeTree
        qualifiedName: ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.FrameworkExtensions.GetTypeTree
  ScriptableFramework.CustomEditors.FrameworkExtensions:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.FrameworkExtensions
        name: FrameworkExtensions
        nameWithType: FrameworkExtensions
        qualifiedName: ScriptableFramework.CustomEditors.FrameworkExtensions
      VB:
      - id: ScriptableFramework.CustomEditors.FrameworkExtensions
        name: FrameworkExtensions
        nameWithType: FrameworkExtensions
        qualifiedName: ScriptableFramework.CustomEditors.FrameworkExtensions
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.FrameworkExtensions
  ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI*
        name: OnGUI
        nameWithType: SearchableEnumDrawer.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI
      VB:
      - id: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI*
        name: OnGUI
        nameWithType: SearchableEnumDrawer.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SearchableEnumDrawer.OnGUI
  ScriptableFramework.CustomEditors.SearchableEnumDrawer:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchableEnumDrawer
        name: SearchableEnumDrawer
        nameWithType: SearchableEnumDrawer
        qualifiedName: ScriptableFramework.CustomEditors.SearchableEnumDrawer
      VB:
      - id: ScriptableFramework.CustomEditors.SearchableEnumDrawer
        name: SearchableEnumDrawer
        nameWithType: SearchableEnumDrawer
        qualifiedName: ScriptableFramework.CustomEditors.SearchableEnumDrawer
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.SearchableEnumDrawer
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Action`1'
  Global.Action{System.Int32}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Int32}'
  ScriptableFramework.CustomEditors.SearchablePopup.Show*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.Show*
        name: Show
        nameWithType: SearchablePopup.Show
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.Show
      VB:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.Show*
        name: Show
        nameWithType: SearchablePopup.Show
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.Show
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SearchablePopup.Show
  ScriptableFramework.CustomEditors.SearchablePopup.OnOpen*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen*
        name: OnOpen
        nameWithType: SearchablePopup.OnOpen
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen
      VB:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen*
        name: OnOpen
        nameWithType: SearchablePopup.OnOpen
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.OnOpen
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SearchablePopup.OnOpen
  ScriptableFramework.CustomEditors.SearchablePopup.OnClose*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.OnClose*
        name: OnClose
        nameWithType: SearchablePopup.OnClose
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.OnClose
      VB:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.OnClose*
        name: OnClose
        nameWithType: SearchablePopup.OnClose
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.OnClose
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SearchablePopup.OnClose
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Vector2'
  ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize*
        name: GetWindowSize
        nameWithType: SearchablePopup.GetWindowSize
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize
      VB:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize*
        name: GetWindowSize
        nameWithType: SearchablePopup.GetWindowSize
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SearchablePopup.GetWindowSize
  ScriptableFramework.CustomEditors.SearchablePopup.OnGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI*
        name: OnGUI
        nameWithType: SearchablePopup.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI
      VB:
      - id: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI*
        name: OnGUI
        nameWithType: SearchablePopup.OnGUI
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup.OnGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.SearchablePopup.OnGUI
  ScriptableFramework.CustomEditors.SearchablePopup:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.SearchablePopup
        name: SearchablePopup
        nameWithType: SearchablePopup
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup
      VB:
      - id: ScriptableFramework.CustomEditors.SearchablePopup
        name: SearchablePopup
        nameWithType: SearchablePopup
        qualifiedName: ScriptableFramework.CustomEditors.SearchablePopup
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.SearchablePopup
  ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
        name: OnEnable
        nameWithType: RuntimeObjectEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
        name: OnEnable
        nameWithType: RuntimeObjectEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.RuntimeObjectEditor
    commentId: M:ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnEnable
  ScriptableFramework.CustomEditors.AppEventEditor.OnEnable*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable*
        name: OnEnable
        nameWithType: AppEventEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable
      VB:
      - id: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable*
        name: OnEnable
        nameWithType: AppEventEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.AppEventEditor.OnEnable
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.AppEventEditor.OnEnable
  ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: RuntimeObjectEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: RuntimeObjectEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ScriptableFramework.CustomEditors.RuntimeObjectEditor
    commentId: M:ScriptableFramework.CustomEditors.RuntimeObjectEditor.OnInspectorGUI
  ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AppEventEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI
      VB:
      - id: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AppEventEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.AppEventEditor.OnInspectorGUI
  ScriptableFramework.CustomEditors.AppEventEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppEventEditor
        name: AppEventEditor
        nameWithType: AppEventEditor
        qualifiedName: ScriptableFramework.CustomEditors.AppEventEditor
      VB:
      - id: ScriptableFramework.CustomEditors.AppEventEditor
        name: AppEventEditor
        nameWithType: AppEventEditor
        qualifiedName: ScriptableFramework.CustomEditors.AppEventEditor
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.AppEventEditor
  ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable*
        name: OnEnable
        nameWithType: AppEventListenerEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable
      VB:
      - id: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable*
        name: OnEnable
        nameWithType: AppEventListenerEditor.OnEnable
        qualifiedName: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.AppEventListenerEditor.OnEnable
  ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AppEventListenerEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI
      VB:
      - id: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AppEventListenerEditor.OnInspectorGUI
        qualifiedName: ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:ScriptableFramework.CustomEditors.AppEventListenerEditor.OnInspectorGUI
  ScriptableFramework.CustomEditors.AppEventListenerEditor:
    name:
      CSharp:
      - id: ScriptableFramework.CustomEditors.AppEventListenerEditor
        name: AppEventListenerEditor
        nameWithType: AppEventListenerEditor
        qualifiedName: ScriptableFramework.CustomEditors.AppEventListenerEditor
      VB:
      - id: ScriptableFramework.CustomEditors.AppEventListenerEditor
        name: AppEventListenerEditor
        nameWithType: AppEventListenerEditor
        qualifiedName: ScriptableFramework.CustomEditors.AppEventListenerEditor
    isDefinition: true
    commentId: T:ScriptableFramework.CustomEditors.AppEventListenerEditor
  ScriptableFramework.Tests.DataStringTests.AssignFromString*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.DataStringTests.AssignFromString*
        name: AssignFromString
        nameWithType: DataStringTests.AssignFromString
        qualifiedName: ScriptableFramework.Tests.DataStringTests.AssignFromString
      VB:
      - id: ScriptableFramework.Tests.DataStringTests.AssignFromString*
        name: AssignFromString
        nameWithType: DataStringTests.AssignFromString
        qualifiedName: ScriptableFramework.Tests.DataStringTests.AssignFromString
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.DataStringTests.AssignFromString
  ScriptableFramework.Tests.DataStringTests.AssignToString*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.DataStringTests.AssignToString*
        name: AssignToString
        nameWithType: DataStringTests.AssignToString
        qualifiedName: ScriptableFramework.Tests.DataStringTests.AssignToString
      VB:
      - id: ScriptableFramework.Tests.DataStringTests.AssignToString*
        name: AssignToString
        nameWithType: DataStringTests.AssignToString
        qualifiedName: ScriptableFramework.Tests.DataStringTests.AssignToString
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.DataStringTests.AssignToString
  ScriptableFramework.Tests.DataStringTests.ConvertToString*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.DataStringTests.ConvertToString*
        name: ConvertToString
        nameWithType: DataStringTests.ConvertToString
        qualifiedName: ScriptableFramework.Tests.DataStringTests.ConvertToString
      VB:
      - id: ScriptableFramework.Tests.DataStringTests.ConvertToString*
        name: ConvertToString
        nameWithType: DataStringTests.ConvertToString
        qualifiedName: ScriptableFramework.Tests.DataStringTests.ConvertToString
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.DataStringTests.ConvertToString
  ScriptableFramework.Tests.DataStringTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.DataStringTests
        name: DataStringTests
        nameWithType: DataStringTests
        qualifiedName: ScriptableFramework.Tests.DataStringTests
      VB:
      - id: ScriptableFramework.Tests.DataStringTests
        name: DataStringTests
        nameWithType: DataStringTests
        qualifiedName: ScriptableFramework.Tests.DataStringTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.DataStringTests
  ScriptableFramework.Tests.StringListTests.CreateAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StringListTests.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: StringListTests.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.StringListTests.CreateAppEvent
      VB:
      - id: ScriptableFramework.Tests.StringListTests.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: StringListTests.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.StringListTests.CreateAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StringListTests.CreateAppEvent
  ScriptableFramework.Tests.StringListTests.ToListSize*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StringListTests.ToListSize*
        name: ToListSize
        nameWithType: StringListTests.ToListSize
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToListSize
      VB:
      - id: ScriptableFramework.Tests.StringListTests.ToListSize*
        name: ToListSize
        nameWithType: StringListTests.ToListSize
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToListSize
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StringListTests.ToListSize
  ScriptableFramework.Tests.StringListTests.ToListContent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StringListTests.ToListContent*
        name: ToListContent
        nameWithType: StringListTests.ToListContent
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToListContent
      VB:
      - id: ScriptableFramework.Tests.StringListTests.ToListContent*
        name: ToListContent
        nameWithType: StringListTests.ToListContent
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToListContent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StringListTests.ToListContent
  ScriptableFramework.Tests.StringListTests.ToArraySize*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StringListTests.ToArraySize*
        name: ToArraySize
        nameWithType: StringListTests.ToArraySize
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToArraySize
      VB:
      - id: ScriptableFramework.Tests.StringListTests.ToArraySize*
        name: ToArraySize
        nameWithType: StringListTests.ToArraySize
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToArraySize
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StringListTests.ToArraySize
  ScriptableFramework.Tests.StringListTests.ToArrayContent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StringListTests.ToArrayContent*
        name: ToArrayContent
        nameWithType: StringListTests.ToArrayContent
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToArrayContent
      VB:
      - id: ScriptableFramework.Tests.StringListTests.ToArrayContent*
        name: ToArrayContent
        nameWithType: StringListTests.ToArrayContent
        qualifiedName: ScriptableFramework.Tests.StringListTests.ToArrayContent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StringListTests.ToArrayContent
  ScriptableFramework.Tests.StringListTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StringListTests
        name: StringListTests
        nameWithType: StringListTests
        qualifiedName: ScriptableFramework.Tests.StringListTests
      VB:
      - id: ScriptableFramework.Tests.StringListTests
        name: StringListTests
        nameWithType: StringListTests
        qualifiedName: ScriptableFramework.Tests.StringListTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StringListTests
  ScriptableFramework.Tests.AppEventGenericTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests
        name: AppEventGenericTests
        nameWithType: AppEventGenericTests
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests
        name: AppEventGenericTests
        nameWithType: AppEventGenericTests
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.RegisterListener.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.RegisterListener.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateIntEvent
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.RegisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.RegisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.CreateListener
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener*
        name: RegersterOneListener
        nameWithType: AppEventGenericTests.RegisterListener.RegersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener*
        name: RegersterOneListener
        nameWithType: AppEventGenericTests.RegisterListener.RegersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterOneListener
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners*
        name: RegersterTwoDifferentListeners
        nameWithType: AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners*
        name: RegersterTwoDifferentListeners
        nameWithType: AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTwoDifferentListeners
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice*
        name: RegersterTheSameListenerTwice
        nameWithType: AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice*
        name: RegersterTheSameListenerTwice
        nameWithType: AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterTheSameListenerTwice
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener*
        name: RegersterNullListener
        nameWithType: AppEventGenericTests.RegisterListener.RegersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener*
        name: RegersterNullListener
        nameWithType: AppEventGenericTests.RegisterListener.RegersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener.RegersterNullListener
  ScriptableFramework.Tests.AppEventGenericTests.RegisterListener:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
        name: AppEventGenericTests.RegisterListener
        nameWithType: AppEventGenericTests.RegisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
        name: AppEventGenericTests.RegisterListener
        nameWithType: AppEventGenericTests.RegisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.RegisterListener
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.UnregisterListener.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.UnregisterListener.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateIntEvent
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.UnregisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.UnregisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.CreateListener
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener*
        name: UnregersterOneListener
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener*
        name: UnregersterOneListener
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterOneListener
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners*
        name: UnregersterTwoDifferentListeners
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners*
        name: UnregersterTwoDifferentListeners
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTwoDifferentListeners
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice*
        name: UnregersterTheSameListenerTwice
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice*
        name: UnregersterTheSameListenerTwice
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterTheSameListenerTwice
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener*
        name: UnregersterNullListener
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener*
        name: UnregersterNullListener
        nameWithType: AppEventGenericTests.UnregisterListener.UnregersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener.UnregersterNullListener
  ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
        name: AppEventGenericTests.UnregisterListener
        nameWithType: AppEventGenericTests.UnregisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
        name: AppEventGenericTests.UnregisterListener
        nameWithType: AppEventGenericTests.UnregisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.UnregisterListener
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.RaiseEvent.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.RaiseEvent.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateIntEvent
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.RaiseEvent.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.RaiseEvent.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.CreateListener
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners*
        name: RaiseEventWithZeroListeners
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners*
        name: RaiseEventWithZeroListeners
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithZeroListeners
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener*
        name: RaiseEventWithListener
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener*
        name: RaiseEventWithListener
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListener
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener*
        name: RaiseEventWithNullListener
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener*
        name: RaiseEventWithNullListener
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithNullListener
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter*
        name: RaiseEventWithListenerAndDefaultParameter
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter*
        name: RaiseEventWithListenerAndDefaultParameter
        nameWithType: AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent.RaiseEventWithListenerAndDefaultParameter
  ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
        name: AppEventGenericTests.RaiseEvent
        nameWithType: AppEventGenericTests.RaiseEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
        name: AppEventGenericTests.RaiseEvent
        nameWithType: AppEventGenericTests.RaiseEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.RaiseEvent
  ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.ClearData.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent*
        name: CreateIntEvent
        nameWithType: AppEventGenericTests.ClearData.CreateIntEvent
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateIntEvent
  ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.ClearData.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener*
        name: CreateListener
        nameWithType: AppEventGenericTests.ClearData.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.ClearData.CreateListener
  ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear*
        name: Clear
        nameWithType: AppEventGenericTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear*
        name: Clear
        nameWithType: AppEventGenericTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.ClearData.Clear
  ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset*
        name: Reset
        nameWithType: AppEventGenericTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset*
        name: Reset
        nameWithType: AppEventGenericTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventGenericTests.ClearData.Reset
  ScriptableFramework.Tests.AppEventGenericTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData
        name: AppEventGenericTests.ClearData
        nameWithType: AppEventGenericTests.ClearData
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.AppEventGenericTests.ClearData
        name: AppEventGenericTests.ClearData
        nameWithType: AppEventGenericTests.ClearData
        qualifiedName: ScriptableFramework.Tests.AppEventGenericTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventGenericTests.ClearData
  ScriptableFramework.Tests.AppEventTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests
        name: AppEventTests
        nameWithType: AppEventTests
        qualifiedName: ScriptableFramework.Tests.AppEventTests
      VB:
      - id: ScriptableFramework.Tests.AppEventTests
        name: AppEventTests
        nameWithType: AppEventTests
        qualifiedName: ScriptableFramework.Tests.AppEventTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventTests
  ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.RegisterListener.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.RegisterListener.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateAppEvent
  ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.RegisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.RegisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RegisterListener.CreateListener
  ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener*
        name: RegersterOneListener
        nameWithType: AppEventTests.RegisterListener.RegersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener*
        name: RegersterOneListener
        nameWithType: AppEventTests.RegisterListener.RegersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterOneListener
  ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners*
        name: RegersterTwoDifferentListeners
        nameWithType: AppEventTests.RegisterListener.RegersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners*
        name: RegersterTwoDifferentListeners
        nameWithType: AppEventTests.RegisterListener.RegersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTwoDifferentListeners
  ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice*
        name: RegersterTheSameListenerTwice
        nameWithType: AppEventTests.RegisterListener.RegersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice*
        name: RegersterTheSameListenerTwice
        nameWithType: AppEventTests.RegisterListener.RegersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterTheSameListenerTwice
  ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener*
        name: RegersterNullListener
        nameWithType: AppEventTests.RegisterListener.RegersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener*
        name: RegersterNullListener
        nameWithType: AppEventTests.RegisterListener.RegersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RegisterListener.RegersterNullListener
  ScriptableFramework.Tests.AppEventTests.RegisterListener:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener
        name: AppEventTests.RegisterListener
        nameWithType: AppEventTests.RegisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RegisterListener
        name: AppEventTests.RegisterListener
        nameWithType: AppEventTests.RegisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RegisterListener
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventTests.RegisterListener
  ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.UnregisterListener.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.UnregisterListener.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateAppEvent
  ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.UnregisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.UnregisterListener.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.UnregisterListener.CreateListener
  ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener*
        name: UnregersterOneListener
        nameWithType: AppEventTests.UnregisterListener.UnregersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener*
        name: UnregersterOneListener
        nameWithType: AppEventTests.UnregisterListener.UnregersterOneListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterOneListener
  ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners*
        name: UnregersterTwoDifferentListeners
        nameWithType: AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners*
        name: UnregersterTwoDifferentListeners
        nameWithType: AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTwoDifferentListeners
  ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice*
        name: UnregersterTheSameListenerTwice
        nameWithType: AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice*
        name: UnregersterTheSameListenerTwice
        nameWithType: AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterTheSameListenerTwice
  ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener*
        name: UnregersterNullListener
        nameWithType: AppEventTests.UnregisterListener.UnregersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener*
        name: UnregersterNullListener
        nameWithType: AppEventTests.UnregisterListener.UnregersterNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.UnregisterListener.UnregersterNullListener
  ScriptableFramework.Tests.AppEventTests.UnregisterListener:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener
        name: AppEventTests.UnregisterListener
        nameWithType: AppEventTests.UnregisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.UnregisterListener
        name: AppEventTests.UnregisterListener
        nameWithType: AppEventTests.UnregisterListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.UnregisterListener
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventTests.UnregisterListener
  ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.RaiseEvent.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.RaiseEvent.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateAppEvent
  ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.RaiseEvent.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.RaiseEvent.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RaiseEvent.CreateListener
  ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners*
        name: RaiseEventWithZeroListeners
        nameWithType: AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners*
        name: RaiseEventWithZeroListeners
        nameWithType: AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithZeroListeners
  ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener*
        name: RaiseEventWithListener
        nameWithType: AppEventTests.RaiseEvent.RaiseEventWithListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener*
        name: RaiseEventWithListener
        nameWithType: AppEventTests.RaiseEvent.RaiseEventWithListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithListener
  ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener*
        name: RaiseEventWithNullListener
        nameWithType: AppEventTests.RaiseEvent.RaiseEventWithNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener*
        name: RaiseEventWithNullListener
        nameWithType: AppEventTests.RaiseEvent.RaiseEventWithNullListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.RaiseEvent.RaiseEventWithNullListener
  ScriptableFramework.Tests.AppEventTests.RaiseEvent:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent
        name: AppEventTests.RaiseEvent
        nameWithType: AppEventTests.RaiseEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.RaiseEvent
        name: AppEventTests.RaiseEvent
        nameWithType: AppEventTests.RaiseEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.RaiseEvent
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventTests.RaiseEvent
  ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.ClearData.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent*
        name: CreateAppEvent
        nameWithType: AppEventTests.ClearData.CreateAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.ClearData.CreateAppEvent
  ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.ClearData.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener*
        name: CreateListener
        nameWithType: AppEventTests.ClearData.CreateListener
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.ClearData.CreateListener
  ScriptableFramework.Tests.AppEventTests.ClearData.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.Clear*
        name: Clear
        nameWithType: AppEventTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.Clear
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.Clear*
        name: Clear
        nameWithType: AppEventTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.ClearData.Clear
  ScriptableFramework.Tests.AppEventTests.ClearData.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.Reset*
        name: Reset
        nameWithType: AppEventTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.Reset
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData.Reset*
        name: Reset
        nameWithType: AppEventTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventTests.ClearData.Reset
  ScriptableFramework.Tests.AppEventTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData
        name: AppEventTests.ClearData
        nameWithType: AppEventTests.ClearData
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.AppEventTests.ClearData
        name: AppEventTests.ClearData
        nameWithType: AppEventTests.ClearData
        qualifiedName: ScriptableFramework.Tests.AppEventTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventTests.ClearData
  ScriptableFramework.Tests.AppEventListenerGenericTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests
        name: AppEventListenerGenericTests
        nameWithType: AppEventListenerGenericTests
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests
        name: AppEventListenerGenericTests
        nameWithType: AppEventListenerGenericTests
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests
  ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.CreateAppEventListenerAndAppEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent*
        name: RegisterSelfWithEvent
        nameWithType: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent*
        name: RegisterSelfWithEvent
        nameWithType: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice*
        name: RegisterSelfWithEventTwice
        nameWithType: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice*
        name: RegisterSelfWithEventTwice
        nameWithType: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithEventTwice
  ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent*
        name: RegisterSelfWithNullEvent
        nameWithType: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent*
        name: RegisterSelfWithNullEvent
        nameWithType: AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf.RegisterSelfWithNullEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
        name: AppEventListenerGenericTests.RegisterSelf
        nameWithType: AppEventListenerGenericTests.RegisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
        name: AppEventListenerGenericTests.RegisterSelf
        nameWithType: AppEventListenerGenericTests.RegisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests.RegisterSelf
  ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent*
        name: UnregisterSelfWithEvent
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent*
        name: UnregisterSelfWithEvent
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice*
        name: UnregisterSelfWithEventTwice
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice*
        name: UnregisterSelfWithEventTwice
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithEventTwice
  ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent*
        name: UnregisterSelfWithNullEvent
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent*
        name: UnregisterSelfWithNullEvent
        nameWithType: AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf.UnregisterSelfWithNullEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
        name: AppEventListenerGenericTests.UnregisterSelf
        nameWithType: AppEventListenerGenericTests.UnregisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
        name: AppEventListenerGenericTests.UnregisterSelf
        nameWithType: AppEventListenerGenericTests.UnregisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests.UnregisterSelf
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.CreateAppEventListenerAndAppEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse*
        name: RespondToEventWithNullResponse
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse*
        name: RespondToEventWithNullResponse
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNullResponse
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*
        name: RespondToEventWithResponseWithNoDelegates
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*
        name: RespondToEventWithResponseWithNoDelegates
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent*
        name: RespondToEvent
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent*
        name: RespondToEvent
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEvent
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates*
        name: RespondToEventWithTwoDelegates
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates*
        name: RespondToEventWithTwoDelegates
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithTwoDelegates
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter*
        name: RespondToEventWithNoParameter
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter*
        name: RespondToEventWithNoParameter
        nameWithType: AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised.RespondToEventWithNoParameter
  ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
        name: AppEventListenerGenericTests.OnEventRaised
        nameWithType: AppEventListenerGenericTests.OnEventRaised
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
        name: AppEventListenerGenericTests.OnEventRaised
        nameWithType: AppEventListenerGenericTests.OnEventRaised
        qualifiedName: ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerGenericTests.OnEventRaised
  ScriptableFramework.Tests.AppEventListenerTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests
        name: AppEventListenerTests
        nameWithType: AppEventListenerTests
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests
        name: AppEventListenerTests
        nameWithType: AppEventListenerTests
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests
  ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.CreateAppEventListenerAndAppEvent
  ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent*
        name: RegisterSelfWithEvent
        nameWithType: AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent*
        name: RegisterSelfWithEvent
        nameWithType: AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEvent
  ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice*
        name: RegisterSelfWithEventTwice
        nameWithType: AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice*
        name: RegisterSelfWithEventTwice
        nameWithType: AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithEventTwice
  ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent*
        name: RegisterSelfWithNullEvent
        nameWithType: AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent*
        name: RegisterSelfWithNullEvent
        nameWithType: AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf.RegisterSelfWithNullEvent
  ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
        name: AppEventListenerTests.RegisterSelf
        nameWithType: AppEventListenerTests.RegisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
        name: AppEventListenerTests.RegisterSelf
        nameWithType: AppEventListenerTests.RegisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests.RegisterSelf
  ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.CreateAppEventListenerAndAppEvent
  ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent*
        name: UnregisterSelfWithEvent
        nameWithType: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent*
        name: UnregisterSelfWithEvent
        nameWithType: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEvent
  ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice*
        name: UnregisterSelfWithEventTwice
        nameWithType: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice*
        name: UnregisterSelfWithEventTwice
        nameWithType: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithEventTwice
  ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent*
        name: UnregisterSelfWithNullEvent
        nameWithType: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent*
        name: UnregisterSelfWithNullEvent
        nameWithType: AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf.UnregisterSelfWithNullEvent
  ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
        name: AppEventListenerTests.UnregisterSelf
        nameWithType: AppEventListenerTests.UnregisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
        name: AppEventListenerTests.UnregisterSelf
        nameWithType: AppEventListenerTests.UnregisterSelf
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests.UnregisterSelf
  ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent*
        name: CreateAppEventListenerAndAppEvent
        nameWithType: AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.CreateAppEventListenerAndAppEvent
  ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse*
        name: RespondToEventWithNullResponse
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse*
        name: RespondToEventWithNullResponse
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithNullResponse
  ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*
        name: RespondToEventWithResponseWithNoDelegates
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates*
        name: RespondToEventWithResponseWithNoDelegates
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithResponseWithNoDelegates
  ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent*
        name: RespondToEvent
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent*
        name: RespondToEvent
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEvent
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEvent
  ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates*
        name: RespondToEventWithTwoDelegates
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates*
        name: RespondToEventWithTwoDelegates
        nameWithType: AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised.RespondToEventWithTwoDelegates
  ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
        name: AppEventListenerTests.OnEventRaised
        nameWithType: AppEventListenerTests.OnEventRaised
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
      VB:
      - id: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
        name: AppEventListenerTests.OnEventRaised
        nameWithType: AppEventListenerTests.OnEventRaised
        qualifiedName: ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.AppEventListenerTests.OnEventRaised
  ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate*
        name: FunctionToDelegate
        nameWithType: ListenerResponder.FunctionToDelegate
        qualifiedName: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate
      VB:
      - id: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate*
        name: FunctionToDelegate
        nameWithType: ListenerResponder.FunctionToDelegate
        qualifiedName: ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ListenerResponder.FunctionToDelegate
  ScriptableFramework.Tests.ListenerResponder:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ListenerResponder
        name: ListenerResponder
        nameWithType: ListenerResponder
        qualifiedName: ScriptableFramework.Tests.ListenerResponder
      VB:
      - id: ScriptableFramework.Tests.ListenerResponder
        name: ListenerResponder
        nameWithType: ListenerResponder
        qualifiedName: ScriptableFramework.Tests.ListenerResponder
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ListenerResponder
  ScriptableFramework.Tests.ReferenceItemTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceItemTests
        name: ReferenceItemTests
        nameWithType: ReferenceItemTests
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests
      VB:
      - id: ScriptableFramework.Tests.ReferenceItemTests
        name: ReferenceItemTests
        nameWithType: ReferenceItemTests
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ReferenceItemTests
  ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference*
        name: CreateGameObjectReference
        nameWithType: ReferenceItemTests.ClearData.CreateGameObjectReference
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference
      VB:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference*
        name: CreateGameObjectReference
        nameWithType: ReferenceItemTests.ClearData.CreateGameObjectReference
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ReferenceItemTests.ClearData.CreateGameObjectReference
  ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset*
        name: Reset
        nameWithType: ReferenceItemTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset
      VB:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset*
        name: Reset
        nameWithType: ReferenceItemTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ReferenceItemTests.ClearData.Reset
  ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear*
        name: Clear
        nameWithType: ReferenceItemTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear
      VB:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear*
        name: Clear
        nameWithType: ReferenceItemTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ReferenceItemTests.ClearData.Clear
  ScriptableFramework.Tests.ReferenceItemTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData
        name: ReferenceItemTests.ClearData
        nameWithType: ReferenceItemTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.ReferenceItemTests.ClearData
        name: ReferenceItemTests.ClearData
        nameWithType: ReferenceItemTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ReferenceItemTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ReferenceItemTests.ClearData
  ScriptableFramework.Tests.ValueItemTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueItemTests
        name: ValueItemTests
        nameWithType: ValueItemTests
        qualifiedName: ScriptableFramework.Tests.ValueItemTests
      VB:
      - id: ScriptableFramework.Tests.ValueItemTests
        name: ValueItemTests
        nameWithType: ValueItemTests
        qualifiedName: ScriptableFramework.Tests.ValueItemTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ValueItemTests
  ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue*
        name: CreateFloatValue
        nameWithType: ValueItemTests.ClearData.CreateFloatValue
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue
      VB:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue*
        name: CreateFloatValue
        nameWithType: ValueItemTests.ClearData.CreateFloatValue
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueItemTests.ClearData.CreateFloatValue
  ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault*
        name: ResetWithDefault
        nameWithType: ValueItemTests.ClearData.ResetWithDefault
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault
      VB:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault*
        name: ResetWithDefault
        nameWithType: ValueItemTests.ClearData.ResetWithDefault
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithDefault
  ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault*
        name: ResetWithoutDefault
        nameWithType: ValueItemTests.ClearData.ResetWithoutDefault
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault
      VB:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault*
        name: ResetWithoutDefault
        nameWithType: ValueItemTests.ClearData.ResetWithoutDefault
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueItemTests.ClearData.ResetWithoutDefault
  ScriptableFramework.Tests.ValueItemTests.ClearData.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear*
        name: Clear
        nameWithType: ValueItemTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear
      VB:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear*
        name: Clear
        nameWithType: ValueItemTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueItemTests.ClearData.Clear
  ScriptableFramework.Tests.ValueItemTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData
        name: ValueItemTests.ClearData
        nameWithType: ValueItemTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.ValueItemTests.ClearData
        name: ValueItemTests.ClearData
        nameWithType: ValueItemTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ValueItemTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ValueItemTests.ClearData
  ScriptableFramework.Tests.ReferenceListTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceListTests
        name: ReferenceListTests
        nameWithType: ReferenceListTests
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests
      VB:
      - id: ScriptableFramework.Tests.ReferenceListTests
        name: ReferenceListTests
        nameWithType: ReferenceListTests
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ReferenceListTests
  ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList*
        name: CreateGameObjectList
        nameWithType: ReferenceListTests.ClearData.CreateGameObjectList
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList
      VB:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList*
        name: CreateGameObjectList
        nameWithType: ReferenceListTests.ClearData.CreateGameObjectList
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ReferenceListTests.ClearData.CreateGameObjectList
  ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset*
        name: Reset
        nameWithType: ReferenceListTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset
      VB:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset*
        name: Reset
        nameWithType: ReferenceListTests.ClearData.Reset
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ReferenceListTests.ClearData.Reset
  ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear*
        name: Clear
        nameWithType: ReferenceListTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear
      VB:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear*
        name: Clear
        nameWithType: ReferenceListTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ReferenceListTests.ClearData.Clear
  ScriptableFramework.Tests.ReferenceListTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData
        name: ReferenceListTests.ClearData
        nameWithType: ReferenceListTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.ReferenceListTests.ClearData
        name: ReferenceListTests.ClearData
        nameWithType: ReferenceListTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ReferenceListTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ReferenceListTests.ClearData
  ScriptableFramework.Tests.ValueListTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueListTests
        name: ValueListTests
        nameWithType: ValueListTests
        qualifiedName: ScriptableFramework.Tests.ValueListTests
      VB:
      - id: ScriptableFramework.Tests.ValueListTests
        name: ValueListTests
        nameWithType: ValueListTests
        qualifiedName: ScriptableFramework.Tests.ValueListTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ValueListTests
  ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList*
        name: CreateGameObjectList
        nameWithType: ValueListTests.ClearData.CreateGameObjectList
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList
      VB:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList*
        name: CreateGameObjectList
        nameWithType: ValueListTests.ClearData.CreateGameObjectList
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueListTests.ClearData.CreateGameObjectList
  ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault*
        name: ResetWithDefault
        nameWithType: ValueListTests.ClearData.ResetWithDefault
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault
      VB:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault*
        name: ResetWithDefault
        nameWithType: ValueListTests.ClearData.ResetWithDefault
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithDefault
  ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault*
        name: ResetWithoutDefault
        nameWithType: ValueListTests.ClearData.ResetWithoutDefault
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault
      VB:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault*
        name: ResetWithoutDefault
        nameWithType: ValueListTests.ClearData.ResetWithoutDefault
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueListTests.ClearData.ResetWithoutDefault
  ScriptableFramework.Tests.ValueListTests.ClearData.Clear*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.Clear*
        name: Clear
        nameWithType: ValueListTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.Clear
      VB:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData.Clear*
        name: Clear
        nameWithType: ValueListTests.ClearData.Clear
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData.Clear
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.ValueListTests.ClearData.Clear
  ScriptableFramework.Tests.ValueListTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData
        name: ValueListTests.ClearData
        nameWithType: ValueListTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.ValueListTests.ClearData
        name: ValueListTests.ClearData
        nameWithType: ValueListTests.ClearData
        qualifiedName: ScriptableFramework.Tests.ValueListTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.ValueListTests.ClearData
  ScriptableFramework.Tests.StateMachineTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests
        name: StateMachineTests
        nameWithType: StateMachineTests
        qualifiedName: ScriptableFramework.Tests.StateMachineTests
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests
        name: StateMachineTests
        nameWithType: StateMachineTests
        qualifiedName: ScriptableFramework.Tests.StateMachineTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.CreateRuntimeObjects
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForIndex.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForIndex.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.AddToList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess*
        name: UpdateStateActiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess*
        name: UpdateStateActiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateActiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess*
        name: UpdateStateInactiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess*
        name: UpdateStateInactiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateInactiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess*
        name: UpdateStateTwiceSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess*
        name: UpdateStateTwiceSuccess
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateTwiceSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative*
        name: UpdateStateWithNegative
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative*
        name: UpdateStateWithNegative
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNegative
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex*
        name: UpdateStateWithOutOfRangeIndex
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex*
        name: UpdateStateWithOutOfRangeIndex
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithOutOfRangeIndex
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex*
        name: UpdateStateWithSameIndex
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex*
        name: UpdateStateWithSameIndex
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithSameIndex
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex.UpdateStateWithNullItemInList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
        name: StateMachineTests.UpdateStateForIndex
        nameWithType: StateMachineTests.UpdateStateForIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
        name: StateMachineTests.UpdateStateForIndex
        nameWithType: StateMachineTests.UpdateStateForIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForIndex
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.CreateRuntimeObjects
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForAll.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForAll.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.AddToList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess*
        name: UpdateStateActiveGameObjectsSuccess
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess*
        name: UpdateStateActiveGameObjectsSuccess
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateActiveGameObjectsSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess*
        name: UpdateStateInactiveGameObjectsSuccess
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess*
        name: UpdateStateInactiveGameObjectsSuccess
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateInactiveGameObjectsSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll.UpdateStateWithNullItemInList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
        name: StateMachineTests.UpdateStateForAll
        nameWithType: StateMachineTests.UpdateStateForAll
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
        name: StateMachineTests.UpdateStateForAll
        nameWithType: StateMachineTests.UpdateStateForAll
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForAll
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.CreateRuntimeObjects
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForSingle.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForSingle.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.AddToList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess*
        name: UpdateStateActiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess*
        name: UpdateStateActiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateActiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess*
        name: UpdateStateInactiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess*
        name: UpdateStateInactiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateInactiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess*
        name: UpdateStateTwiceSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess*
        name: UpdateStateTwiceSuccess
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateTwiceSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle*
        name: UpdateStateToggle
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateToggle
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle*
        name: UpdateStateToggle
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateToggle
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateToggle
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex*
        name: UpdateStateWithSameIndex
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex*
        name: UpdateStateWithSameIndex
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithSameIndex
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative*
        name: UpdateStateWithNegative
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative*
        name: UpdateStateWithNegative
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNegative
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex*
        name: UpdateStateWithOutOfRangeIndex
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex*
        name: UpdateStateWithOutOfRangeIndex
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithOutOfRangeIndex
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle.UpdateStateWithNullItemInList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
        name: StateMachineTests.UpdateStateForSingle
        nameWithType: StateMachineTests.UpdateStateForSingle
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
        name: StateMachineTests.UpdateStateForSingle
        nameWithType: StateMachineTests.UpdateStateForSingle
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForSingle
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.CreateRuntimeObjects
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForRange.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.UpdateStateForRange.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.AddToList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess*
        name: UpdateStateSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess*
        name: UpdateStateActiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess*
        name: UpdateStateActiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateActiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess*
        name: UpdateStateInactiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess*
        name: UpdateStateInactiveGameObjectSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateInactiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess*
        name: UpdateStateTwiceSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess*
        name: UpdateStateTwiceSuccess
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateTwiceSuccess
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse*
        name: UpdateStateMiddleFalse
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse*
        name: UpdateStateMiddleFalse
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateMiddleFalse
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative*
        name: UpdateStateWithNegative
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative*
        name: UpdateStateWithNegative
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNegative
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex*
        name: UpdateStateWithOutOfRangeIndex
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex*
        name: UpdateStateWithOutOfRangeIndex
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithOutOfRangeIndex
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList*
        name: UpdateStateWithNullList
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList*
        name: UpdateStateWithNullItemInList
        nameWithType: StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange.UpdateStateWithNullItemInList
  ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
        name: StateMachineTests.UpdateStateForRange
        nameWithType: StateMachineTests.UpdateStateForRange
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
        name: StateMachineTests.UpdateStateForRange
        nameWithType: StateMachineTests.UpdateStateForRange
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests.UpdateStateForRange
  ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.ReapplyState.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.ReapplyState.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ReapplyState.CreateRuntimeObjects
  ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.ReapplyState.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.ReapplyState.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ReapplyState.AddToList
  ScriptableFramework.Tests.StateMachineTests.ReapplyState:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState
        name: StateMachineTests.ReapplyState
        nameWithType: StateMachineTests.ReapplyState
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ReapplyState
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ReapplyState
        name: StateMachineTests.ReapplyState
        nameWithType: StateMachineTests.ReapplyState
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ReapplyState
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests.ReapplyState
  ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.ClearData.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateMachineTests.ClearData.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.CreateRuntimeObjects
  ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.ClearData.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList*
        name: AddToList
        nameWithType: StateMachineTests.ClearData.AddToList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.AddToList
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList*
        name: ClearWithNullList
        nameWithType: StateMachineTests.ClearData.ClearWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList*
        name: ClearWithNullList
        nameWithType: StateMachineTests.ClearData.ClearWithNullList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullList
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList*
        name: ClearWithEmptyList
        nameWithType: StateMachineTests.ClearData.ClearWithEmptyList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList*
        name: ClearWithEmptyList
        nameWithType: StateMachineTests.ClearData.ClearWithEmptyList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithEmptyList
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList*
        name: ClearWithNullItemInList
        nameWithType: StateMachineTests.ClearData.ClearWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList*
        name: ClearWithNullItemInList
        nameWithType: StateMachineTests.ClearData.ClearWithNullItemInList
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNullItemInList
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess*
        name: ClearSuccess
        nameWithType: StateMachineTests.ClearData.ClearSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess*
        name: ClearSuccess
        nameWithType: StateMachineTests.ClearData.ClearSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearSuccess
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess*
        name: ClearActiveGameObjectSuccess
        nameWithType: StateMachineTests.ClearData.ClearActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess*
        name: ClearActiveGameObjectSuccess
        nameWithType: StateMachineTests.ClearData.ClearActiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearActiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess*
        name: ClearInactiveGameObjectSuccess
        nameWithType: StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess*
        name: ClearInactiveGameObjectSuccess
        nameWithType: StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearInactiveGameObjectSuccess
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault*
        name: ClearWithAllActiveDefault
        nameWithType: StateMachineTests.ClearData.ClearWithAllActiveDefault
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault*
        name: ClearWithAllActiveDefault
        nameWithType: StateMachineTests.ClearData.ClearWithAllActiveDefault
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithAllActiveDefault
  ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault*
        name: ClearWithNoneActiveDefault
        nameWithType: StateMachineTests.ClearData.ClearWithNoneActiveDefault
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault*
        name: ClearWithNoneActiveDefault
        nameWithType: StateMachineTests.ClearData.ClearWithNoneActiveDefault
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ClearWithNoneActiveDefault
  ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess*
        name: ResetSuccess
        nameWithType: StateMachineTests.ClearData.ResetSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess*
        name: ResetSuccess
        nameWithType: StateMachineTests.ClearData.ResetSuccess
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateMachineTests.ClearData.ResetSuccess
  ScriptableFramework.Tests.StateMachineTests.ClearData:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData
        name: StateMachineTests.ClearData
        nameWithType: StateMachineTests.ClearData
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData
      VB:
      - id: ScriptableFramework.Tests.StateMachineTests.ClearData
        name: StateMachineTests.ClearData
        nameWithType: StateMachineTests.ClearData
        qualifiedName: ScriptableFramework.Tests.StateMachineTests.ClearData
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateMachineTests.ClearData
  ScriptableFramework.Tests.StateToggleTests:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateToggleTests
        name: StateToggleTests
        nameWithType: StateToggleTests
        qualifiedName: ScriptableFramework.Tests.StateToggleTests
      VB:
      - id: ScriptableFramework.Tests.StateToggleTests
        name: StateToggleTests
        nameWithType: StateToggleTests
        qualifiedName: ScriptableFramework.Tests.StateToggleTests
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateToggleTests
  ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
      VB:
      - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects*
        name: CreateRuntimeObjects
        nameWithType: StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.CreateRuntimeObjects
  ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList*:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList*
        name: AddToList
        nameWithType: StateToggleTests.UpdateStateMachine.AddToList
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList
      VB:
      - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList*
        name: AddToList
        nameWithType: StateToggleTests.UpdateStateMachine.AddToList
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList
    isDefinition: true
    commentId: Overload:ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine.AddToList
  ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
        name: StateToggleTests.UpdateStateMachine
        nameWithType: StateToggleTests.UpdateStateMachine
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
      VB:
      - id: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
        name: StateToggleTests.UpdateStateMachine
        nameWithType: StateToggleTests.UpdateStateMachine
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateToggleTests.UpdateStateMachine
  ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange:
    name:
      CSharp:
      - id: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
        name: StateToggleTests.RespondToStateMachineChange
        nameWithType: StateToggleTests.RespondToStateMachineChange
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
      VB:
      - id: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
        name: StateToggleTests.RespondToStateMachineChange
        nameWithType: StateToggleTests.RespondToStateMachineChange
        qualifiedName: ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
    isDefinition: true
    commentId: T:ScriptableFramework.Tests.StateToggleTests.RespondToStateMachineChange
  ScriptableFramework.Tests:
    name:
      CSharp:
      - name: ScriptableFramework.Tests
        nameWithType: ScriptableFramework.Tests
        qualifiedName: ScriptableFramework.Tests
      VB:
      - name: ScriptableFramework.Tests
        nameWithType: ScriptableFramework.Tests
        qualifiedName: ScriptableFramework.Tests
    isDefinition: true
    commentId: N:ScriptableFramework.Tests
